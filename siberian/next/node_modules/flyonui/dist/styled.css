.advance-select-toggle {

    position: relative;

    display: flex;

    width: 100%;

    cursor: pointer;

    text-wrap: nowrap;

    padding-left: 0.75rem;

    padding-right: 0.75rem;

    padding-top: 7px;

    padding-bottom: 7px;

    padding-inline-end: 2.25rem;

    text-align: start
}

.advance-select-menu {

    z-index: 10;

    width: 100%
}

.advance-select-menu > :not([hidden]) ~ :not([hidden]) {

    --tw-space-y-reverse: 0;

    margin-top: calc(0.125rem * calc(1 - var(--tw-space-y-reverse)));

    margin-bottom: calc(0.125rem * var(--tw-space-y-reverse))
}

.advance-select-menu {

    padding: 0.5rem
}

.advance-select-option {

    width: 100%;

    cursor: pointer;

    padding-left: 1rem;

    padding-right: 1rem;

    padding-top: 0.625rem;

    padding-bottom: 0.625rem
}

.advance-select-tag {

    position: relative;

    display: flex;

    width: 100%;

    cursor: pointer;

    text-wrap: nowrap;

    padding-left: 0.25rem;

    padding-right: 0.25rem;

    padding-top: 0px;

    padding-bottom: 0px;

    padding-inline-end: 2.25rem;

    text-align: start
}
.alert {
    position: relative;
    width: 100%;
    padding: 1rem;
    font-size: 1rem;
    line-height: 1.375rem
}
.artboard {
    width: 100%
}
.avatar {
    position: relative;
    display: inline-flex;
    font-size: 1rem;
    line-height: 1.375rem
}
  .avatar > div {
    display: block;
    aspect-ratio: 1 / 1;
    overflow: hidden
}
  .avatar img {
    height: 100%;
    width: 100%;
    object-fit: cover
}
  .avatar.placeholder > div {
    display: flex;
    align-items: center;
    justify-content: center
}

/* Pull up avatar style */

.pull-up .avatar {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
    transition-duration: 0.25s;
    transition-timing-function: cubic-bezier(0.4, 0, 1, 1)
}

.pull-up .avatar:hover {
    z-index: 30;
    --tw-translate-y: -0.25rem;
    --tw-scale-x: 1.02;
    --tw-scale-y: 1.02;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-radius: 9999px;
    --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
    --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}
.badge {
  display: inline-flex;
  height: 1.5rem;
  align-items: center;
  justify-content: center;
  gap: 0.375rem;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  text-align: center;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 400;
  width: fit-content
}
.breadcrumbs {
    max-width: 100%;
    overflow-x: auto
}
  .breadcrumbs > ul,
  .breadcrumbs > ol {
    display: flex;
    align-items: center;
    white-space: nowrap;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    line-height: 1.5rem;
    min-height: min-content
}
  .breadcrumbs > ul .breadcrumbs-separator, .breadcrumbs > ol .breadcrumbs-separator {
    display: inline-flex;
    width: 1.5rem;
    flex-shrink: 0;
    align-items: center;
    justify-content: center
}
  .breadcrumbs > ul > li, .breadcrumbs > ol > li {
    display: inline-flex;
    align-items: center;
    line-height: 22px
}
  .breadcrumbs > ul > li > a, .breadcrumbs > ol > li > a {
    display: inline-flex;
    align-items: center;
    gap: 0.25rem
}
  .breadcrumbs > ul > li > a:hover, .breadcrumbs > ol > li > a:hover {
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)))
}
  .breadcrumbs > ul > li:last-child, .breadcrumbs > ol > li:last-child {
    cursor: text;
    font-weight: 500;
    --tw-text-opacity: 1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)))
}
.btn {
    display: inline-flex;
    height: 2.375rem;
    min-height: 2.375rem;
    flex-shrink: 0;
    cursor: pointer;
    user-select: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    padding-left: 1rem;
    padding-right: 1rem;
    font-size: 1rem;
    line-height: 1.375rem;
    font-weight: 500
}
  /* disabled */
  .btn-disabled,
  .btn[disabled],
  .btn:disabled {
    pointer-events: none
}
  /* shapes */
  .btn-square {
    height: 2.375rem;
    width: 2.375rem;
    padding: 0px
}
  .btn-circle {
    height: 2.375rem;
    width: 2.375rem;
    border-radius: 9999px;
    padding: 0px
}

/* radio input and checkbox as button */

:where(.btn:is(input[type="checkbox"])),
:where(.btn:is(input[type="radio"])) {
    width: auto;
    appearance: none
}

.btn:is(input[type="checkbox"]):after,
.btn:is(input[type="radio"]):after {
    --tw-content: attr(aria-label);
    content: var(--tw-content)
}
.card {
      position: relative;
      display: flex;
      flex-direction: column;
}
  .card:focus {
      outline: 2px solid transparent;
      outline-offset: 2px;
}
  .card-body {
      display: flex;
      flex: 1 1 auto;
      flex-direction: column;
      font-size: 1rem;
      line-height: 1.375rem;
      font-weight: 400;
}
  .card-actions {
      display: flex;
      flex-wrap: wrap;
      align-items: flex-start;
      gap: 0.75rem;
}
  .card-title {
      font-size: 1.5rem;
      line-height: 2rem;
      font-weight: 600;
      --tw-text-opacity: 1;
      color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}
  .card figure {
      display: flex;
      align-items: center;
      justify-content: center;
}
  .card.image-full {
      display: grid;
}
  .card.image-full:before {
      position: relative;
      content: "";
}
  .card.image-full:before,
    .card.image-full > * {
      grid-column-start: 1;
      grid-row-start: 1;
}
  .card.image-full > figure img {
      height: 100%;
      object-fit: cover;
}
  .card.image-full > .card-body {
      position: relative;
}

:where(.card figure > *) {
  width: 100%;
}

.card-group > :not([hidden]) ~ :not([hidden]) {
      --tw-divide-y-reverse: 0;
      border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
      border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
      border-color: var(--fallback-n,oklch(var(--n)/0.3));
}

.card-group {
      overflow: hidden;
}

@media (min-width: 640px) {
      .card-group {
            display: flex;
            flex-direction: row;
      }
      .card-group > :not([hidden]) ~ :not([hidden]) {
            --tw-divide-x-reverse: 0;
            border-right-width: calc(1px * var(--tw-divide-x-reverse));
            border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
            --tw-divide-y-reverse: 0;
            border-top-width: calc(0px * calc(1 - var(--tw-divide-y-reverse)));
            border-bottom-width: calc(0px * var(--tw-divide-y-reverse));
      }
      .card-group:where([dir="rtl"], [dir="rtl"] *) > :not([hidden]) ~ :not([hidden]) {
            --tw-divide-x-reverse: 1;
      }
}

.card-group > .card {
      flex: 1 0 0%;
}
.carousel {
    position: relative;
    width: 100%;
    overflow: hidden;
    border-radius: 1rem
}
.carousel-body {
    display: flex;
    flex-wrap: nowrap
}
.carousel-prev,
.carousel-next {
    position: absolute;
    top: 0px;
    bottom: 0px;
    display: inline-flex;
    height: 100%;
    width: 10%;
    align-items: center;
    justify-content: center
}
@media not all and (min-width: 640px) {
    .carousel-prev,
.carousel-next {
        width: 18%
    }
}
.carousel-prev {
    inset-inline-start: 0px;
    border-start-start-radius: 1rem;
    border-end-start-radius: 1rem
}
.carousel-next {
    inset-inline-end: 0px;
    border-start-end-radius: 1rem;
    border-end-end-radius: 1rem
}
.carousel-box {
    height: 0.25rem;
    width: 2.5rem;
    cursor: pointer;
    background-color: var(--fallback-n,oklch(var(--n)/0.3))
}
.active.carousel-box {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)))
}
.active .carousel-box {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)))
}
.carousel-dot {
    width: 0.75rem;
    height: 0.75rem;
    cursor: pointer;
    border-radius: 9999px;
    background-color: var(--fallback-n,oklch(var(--n)/0.3))
}
.active.carousel-dot {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)))
}
.active .carousel-dot {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)))
}
.chat {
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    column-gap: 1rem;
    padding-top: 0.25rem;
    padding-bottom: 0.25rem;
}
  .chat-avatar {
    grid-row: span 2 / span 2;
    align-self: flex-end;
}
  .chat-header {
    grid-row-start: 1;
    margin-bottom: 0.25rem;
    font-size: 0.75rem;
    line-height: 1rem;
}
  .chat-footer {
    grid-row-start: 3;
    margin-top: 0.25rem;
    font-size: 0.75rem;
    line-height: 1rem;
}
  .chat-bubble {
    position: relative;
    display: block;
    width: fit-content;
    padding: 0.75rem;
    max-width: 90%;
}
  .chat-bubble:before {
    position: absolute;
    bottom: 0px;
    height: 1rem;
    width: 1rem;
      background-color: inherit;
      content: "";
      mask-size: contain;
      mask-repeat: no-repeat;
      mask-position: center;
}
  .chat-receiver {
    place-items: start;
    grid-template-columns: auto 1fr;
}
  .chat-receiver .chat-header {
    grid-column-start: 2;
}
  .chat-receiver .chat-footer {
    grid-column-start: 2;
}
  .chat-receiver .chat-avatar {
    grid-column-start: 1;
}
  .chat-receiver .chat-bubble {
    grid-column-start: 2;
}
  .chat-receiver .chat-bubble:before {
        mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
      }
  [dir="rtl"] .chat-receiver .chat-bubble:before {
          mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
        }
  .chat-sender {
    place-items: end;
    grid-template-columns: 1fr auto;
}
  .chat-sender .chat-header {
    grid-column-start: 1;
}
  .chat-sender .chat-footer {
    grid-column-start: 1;
}
  .chat-sender .chat-avatar {
    grid-column-start: 2;
}
  .chat-sender .chat-bubble {
    grid-column-start: 1;
    text-align: end;
}
  .chat-sender .chat-bubble:before {
        mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
      }
  [dir="rtl"] .chat-sender .chat-bubble:before {
          mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
        }
.checkbox {
    flex-shrink: 0
}
.collapse:not(td):not(tr):not(colgroup) {
    visibility: visible
}
.diff {
  position: relative;
  display: grid;
  width: 100%;
  overflow: hidden;
  container-type: inline-size;
  grid-template-columns: auto 1fr;
}

.diff-resizer {
  position: relative;
  top: 50%;
  z-index: 1;
  height: 3rem;
  width: 25rem;
  min-width: 1rem;
  max-width: calc(100cqi - 1rem);
  resize: horizontal;
  overflow: hidden;
  opacity: 0;
  transform-origin: 100% 100%;
  scale: 4;
  translate: 1.5rem -1.5rem;
  clip-path: inset(calc(100% - 0.75rem) 0 0 calc(100% - 0.75rem));
}

.diff-resizer,
.diff-item-1,
.diff-item-2 {
  position: relative;
  grid-column-start: 1;
  grid-row-start: 1;
}

.diff-item-1:after {
  pointer-events: none;
  position: absolute;
  bottom: 0px;
  inset-inline-end: 1px;
  top: 50%;
  z-index: 1;
  width: 1.25rem;
  height: 1.25rem;
  --tw-content: '';
  content: var(--tw-content);
  translate: 50% -50%;
}

.diff-item-2 {
  overflow: hidden;
}

.diff-item-1 > *,
.diff-item-2 > * {
  pointer-events: none;
  position: absolute;
  bottom: 0px;
  inset-inline-start: 0px;
  top: 0px;
  height: 100%;
  width: 100cqi;
  max-width: none;
  object-fit: cover;
  object-position: center;
}

[dir="rtl"] .diff-resizer {
  transform-origin: 0 100%;
  translate: -1.5rem -1.5rem;
  clip-path: inset(calc(100% - 0.75rem) calc(100% - 0.75rem) 0 0);
}

[dir="rtl"] .diff-item-1:after {
  right: auto;
  left: 1px;
  translate: -50% -50%;
}

[dir="rtl"] .diff-item-1 > *,
[dir="rtl"] .diff-item-2 > * {
  left: auto;
  right: 0;
}
.divider {

    display: flex;

    width: 100%;

    flex-direction: row;

    align-items: center;

    align-self: stretch;

    font-size: 0.875rem;

    line-height: 1.25rem
}

.divider::before {

    height: 1px;

    width: 100%;

    flex-grow: 1;

    border-top-width: 1px;

    --tw-content: '';

    content: var(--tw-content)
}

.divider::after {

    display: flex;

    height: 1px;

    width: 100%;

    flex-grow: 1;

    border-top-width: 1px;

    --tw-content: '';

    content: var(--tw-content)
}

  .divider-start::before {

    content: var(--tw-content);

    display: none
}

  .divider-end::after {

    content: var(--tw-content);

    display: none
}
.drawer {

    position: fixed;

    z-index: 80;

    display: flex;

    width: 100%;

    height: 100%;

    max-width: 24rem;

    flex-direction: column;

    justify-content: space-between
}

  .drawer-close {

    display: flex;

    width: 1.875rem;

    height: 1.875rem;

    min-height: 0px;

    align-items: center;

    justify-content: center;

    border-width: 0px;

    padding: 0px
}

  .drawer-title {

    font-size: 1.125rem;

    line-height: 1.5rem
}

  .drawer-body {

    flex-grow: 1;

    overflow-y: auto;

    padding-left: 1.5rem;

    padding-right: 1.5rem;

    font-size: 1rem;

    line-height: 1.375rem
}

  .drawer-body::-webkit-scrollbar {

    width: 0.5rem
}

  .drawer-body:last-child {

    padding-bottom: 1.5rem
}

  .drawer-footer {

    display: flex;

    align-items: center;

    justify-content: flex-end;

    gap: 0.75rem;

    padding: 1.5rem
}
.dropdown-menu {
  z-index: 10;
  margin-top: 0.5rem;
  text-wrap: nowrap;
  padding: 0.5rem;
  font-size: 1rem;
  line-height: 1.375rem;
  opacity: 0;
  transition-property: opacity,margin;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms
}

.dropdown-item {
  clear: both;
  display: flex;
  width: 100%;
  align-items: center;
  column-gap: 0.5rem;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  text-align: inherit
}

.dropdown-header,
.dropdown-footer {
  position: static;
  display: flex;
  align-items: center;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem
}

.dropdown-header {
  margin: -0.5rem;
  margin-bottom: 0.5rem;
  border-top-left-radius: var(--rounded-box, 0.5rem);
  border-top-right-radius: var(--rounded-box, 0.5rem);
  border-bottom-width: 1px
}

.dropdown-footer {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-bottom: -0.5rem !important;
  border-bottom-right-radius: var(--rounded-box, 0.5rem);
  border-bottom-left-radius: var(--rounded-box, 0.5rem);
  border-top-width: 1px
}

.dropdown-title {
  display: block;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
  text-transform: uppercase
}
.footer {
  display: grid;
  width: 100%;
  grid-auto-flow: row;
  place-items: start;
}
  .footer > * {
  display: grid;
  place-items: start;
}
  .footer-center {
  place-items: center;
  text-align: center;
}
  .footer-center > * {
  place-items: center;
}
@media (min-width: 48rem) {
  .footer {
    grid-auto-flow: column;
  }
  .footer-center {
    grid-auto-flow: row dense;
  }
}
.label:where(:not(.label-text)) {
    display: flex;
    align-items: center;
    justify-content: space-between
}
.indicator {
  position: relative;
  display: inline-flex;
  width: max-content;
}
  .indicator :where(.indicator-item) {
    z-index: 1;
    position: absolute;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    white-space: nowrap;
  }
.input {
    height: 2.375rem;
    width: 100%;
    flex-shrink: 1;
    appearance: none;
    padding-left: 0.75rem;
    padding-right: 0.75rem;
    font-size: 1rem;
    line-height: 1.375rem;
    font-weight: 400
}

  /* For file input  */
  .input::file-selector-button {
    margin-inline-end: 1rem;
    display: inline-flex;
    height: 100%;
    flex-shrink: 0;
    cursor: pointer;
    user-select: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    padding-left: 1rem;
    padding-right: 1rem;
    text-align: center;
    font-size: 0.875rem;
    line-height: 1.25rem;
    line-height: 1em
}
  .input-filled {
    height: 3rem;
    font-size: 1rem;
    line-height: 1.375rem
}
.input-filled-focused {
    position: relative;
    top: -1px;
    z-index: 10;
    display: block;
    height: 0.125rem;
    width: 100%;
    --tw-scale-x: 0;
    --tw-scale-y: 0;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    transition-property: transform;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-delay: 0s;
    transition-duration: 150ms;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1)
}
.input[type="number"]::-webkit-inner-spin-button {
    margin-top: -0.25rem;
    margin-bottom: -0.25rem;
    margin-inline-end: -0.25rem
}
.input-sm[type="number"]::-webkit-inner-spin-button {
    margin-top: 0px;
    margin-bottom: 0px;
    margin-inline-end: 0px
}
.input-lg[type="number"]::-webkit-inner-spin-button {
    margin-top: -0.25rem;
    margin-bottom: -0.25rem;
    margin-inline-end: 0.75rem
}
.input[type="file"] {
    padding-left: 0px;
    padding-right: 0px
}
.join {
    display: inline-flex;
    align-items: stretch;
}
  .join :where(.join-item) {
    border-start-end-radius: 0;
    border-end-end-radius: 0;
    border-end-start-radius: 0;
    border-start-start-radius: 0;
  }
  .join .join-item:not(:first-child):not(:last-child),
  .join *:not(:first-child):not(:last-child) .join-item {
    border-start-end-radius: 0;
    border-end-end-radius: 0;
    border-end-start-radius: 0;
    border-start-start-radius: 0;
  }
  .join > .join-item:first-child:not(:last-child),
  .join *:first-child:not(:last-child) .join-item {
    border-start-end-radius: 0;
    border-end-end-radius: 0;
  }
  .join > :where(.join-item:first-child:not(:last-child)),
  .join :where(*:first-child:not(:last-child) .join-item) {
    border-end-start-radius: inherit;
    border-start-start-radius: inherit;
  }
  .join > .join-item:last-child:not(:first-child),
  .join *:last-child:not(:first-child) .join-item {
    border-end-start-radius: 0;
    border-start-start-radius: 0;
  }
  .join > :where(.join-item:last-child:not(:first-child)),
  .join :where(*:last-child:not(:first-child) .join-item) {
    border-start-end-radius: inherit;
    border-end-end-radius: inherit;
  }

@supports not selector(:has(*)) {
  :where(.join *) {
        border-radius: inherit;
    }
}

@supports selector(:has(*)) {
  :where(.join *:has(.join-item)) {
        border-radius: inherit;
    }
}
.kbd {
    display: inline-flex;
    align-items: center;
    justify-content: center
}
.link {
    display: inline-block;
    cursor: pointer;
    text-decoration-line: underline;
}
  .link-hover {
    text-decoration-line: none;
}
  @media(hover:hover) {
    .link-hover:hover {
        text-decoration-line: underline;
    }
}
  .link-animated {
    position: relative;
    text-decoration-line: none;
}
  .link-animated::before {
    pointer-events: none;
    position: absolute;
    bottom: 0px;
    inset-inline-start: 0px;
    height: 1px;
    width: 100%;
    background-color: currentColor;
    transition-property: transform;
    transition-duration: 300ms;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --tw-content: '';
    content: var(--tw-content);
    transform-origin: 100% 50%;
    transform: scale3d(0, 1, 1);
}
  .link-animated:hover::before {
    transform-origin: 0% 50%;
    transform: scale3d(1, 1, 1);
  }
.mask {
  mask-size: contain;
  mask-repeat: no-repeat;
  mask-position: center;
}
.mask-half-1 {
  mask-size: 200%;
  mask-position: left;
}
.mask-half-1:where([dir="rtl"], [dir="rtl"] *) {
  mask-position: right;
}
.mask-half-2 {
  mask-size: 200%;
  mask-position: right;
}
.mask-half-2:where([dir="rtl"], [dir="rtl"] *) {
  mask-position: left;
}
.menu {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    gap: 0.125rem
}
  .menu :where(li ul) {
    position: relative;
    white-space: nowrap
}
  .menu :where(li:not(.menu-title) > *:not(ul, .collapse, .menu-title, .btn)) {
    display: grid;
    grid-auto-flow: column;
    align-content: flex-start;
    align-items: center;
    gap: 0.5rem;
    grid-auto-columns: minmax(auto, max-content) auto max-content;
    user-select: none
}
  .menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
    display: none
}
:where(.menu li) {
    position: relative;
    display: flex;
    flex-shrink: 0;
    flex-direction: column;
    flex-wrap: wrap;
    align-items: stretch
}
:where(.menu li) .badge {
    justify-self: end
}
.mockup-code {
        position: relative;
        overflow-x: auto;
        overflow-y: hidden;
}
    .mockup-code pre[data-prefix]:before {
        content: attr(data-prefix);
        display: inline-block;
        text-align: right;
      }
  .mockup-window {
        position: relative;
        overflow-x: auto;
        overflow-y: hidden;
}
  .mockup-window pre[data-prefix]:before {
        content: attr(data-prefix);
        display: inline-block;
        text-align: right;
      }
  .mockup-browser {
        position: relative;
        overflow-x: auto;
        overflow-y: hidden;
}
  .mockup-browser pre[data-prefix]:before {
        content: attr(data-prefix);
        display: inline-block;
        text-align: right;
      }
.modal {
  pointer-events: none;
  position: fixed;
  inset: 0px;
  z-index: 80;
  margin: 0px;
  display: grid;
  width: 100%;
  height: 100%;
  justify-items: center;
  padding: 1rem
}

.modal-dialog {
  margin-left: auto;
  margin-right: auto;
  width: 100%
}

@media (min-width: 640px) {

  .modal-dialog {
    max-width: 32rem
  }
}

.modal-content {
  pointer-events: auto;
  display: flex;
  flex-direction: column;
  border-radius: 0.5rem;
  max-height: calc(100vh - 2rem)
}

.modal-header {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1.5rem
}

.modal-title {
  font-size: 1.5rem;
  line-height: 2rem;
  font-weight: 600;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)))
}

.modal-body {
  overflow-y: auto;
  font-size: 1rem;
  line-height: 1.375rem;
  font-weight: 400
}

.modal-body::-webkit-scrollbar {
  width: 0.5rem
}

.modal-footer {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  gap: 0.75rem
}
.navbar {
    display: flex;
    align-items: center
}
.navbar-start {
    display: flex;
    width: 50%;
    justify-content: flex-start
}
.navbar-center {
    flex-shrink: 0
}
.navbar-end {
    display: flex;
    width: 50%;
    justify-content: flex-end
}
.pin-input {
    width: 2.375rem;
    height: 2.375rem;
    text-align: center;
    font-size: 1rem;
    line-height: 1.375rem
}
.progress {

    display: flex;

    height: 0.375rem;

    width: 100%;

    overflow: hidden;

    border-radius: 9999px
}

  .progress-bar {

    display: flex;

    align-items: center;

    justify-content: center;

    overflow: hidden;

    white-space: nowrap;

    border-radius: 9999px;

    font-size: 0.75rem;

    line-height: 1rem;

    font-weight: 500;

    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;

    transition-duration: 500ms;

    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1)
}

  .progress-label {

    position: relative;

    display: inline;

    width: fit-content;

    border-radius: var(--rounded-tooltip, 0.25rem);

    padding-left: 0.375rem;

    padding-right: 0.375rem;

    padding-top: 0.125rem;

    padding-bottom: 0.125rem;

    font-size: 0.75rem;

    line-height: 1rem;

    font-weight: 500
}

  .progress-vertical {

    height: 100%;

    width: 0.375rem;

    flex-direction: column;

    justify-content: flex-end;

    border-radius: 9999px
}

.progress-step {

    display: flex;

    height: 0.375rem;

    width: 100%;

    flex-direction: column;

    justify-content: center;

    white-space: nowrap;

    text-align: center;

    font-size: 0.75rem;

    line-height: 1rem
}
.radial-progress {
  position: relative;
  display: inline-grid;
  height: var(--size);
  width: var(--size);
  place-content: center;
  border-radius: 9999px;
  background-color: transparent;
  vertical-align: middle;
  box-sizing: content-box;
}
.radial-progress::-moz-progress-bar {
  appearance: none;
  background-color: transparent;
}
.radial-progress::-webkit-progress-value {
  appearance: none;
  background-color: transparent;
}
.radial-progress::-webkit-progress-bar {
  appearance: none;
  background-color: transparent;
}
.radial-progress:before,
.radial-progress:after {
  position: absolute;
  border-radius: 9999px;
  content: "";
}
.radial-progress:before {
  inset: 0px;
  background:
    radial-gradient(farthest-side, currentColor 98%, #0000) top/var(--thickness) var(--thickness) no-repeat,
    conic-gradient(currentColor calc(var(--value) * 1%), #0000 0);
  -webkit-mask: radial-gradient(farthest-side, #0000 calc(99% - var(--thickness)), #000 calc(100% - var(--thickness)));
  mask: radial-gradient(farthest-side, #0000 calc(99% - var(--thickness)), #000 calc(100% - var(--thickness)));
}
.radial-progress:after {
  inset: calc(50% - var(--thickness) / 2);
  transform: rotate(calc(var(--value) * 3.6deg - 90deg)) translate(calc(var(--size) / 2 - 50%));
}
.radio,
.radio-inset {
    flex-shrink: 0
}
.range {
    height: 0.5rem;
    width: 100%;
}
  .range:focus {
    outline: none;
  }
.select {

    display: inline-flex;

    cursor: pointer;

    user-select: none;

    appearance: none;

    height: 2.375rem;

    width: 100%;

    padding-left: 0.75rem;

    padding-right: 0.75rem;

    font-size: 0.875rem;

    line-height: 1.25rem;

    line-height: 2
}

  .select-floating {

    height: 2.375rem
}

  .select-filled {

    height: 3.25rem
}

  .select[multiple] {

    height: auto
}

.select-filled-focused {

    position: relative;

    top: -1px;

    z-index: 10;

    display: block;

    height: 0.125rem;

    width: 100%;

    --tw-scale-x: 0;

    --tw-scale-y: 0;

    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));

    transition-property: transform;

    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

    transition-delay: 0s;

    transition-duration: 150ms;

    transition-timing-function: cubic-bezier(0, 0, 0.2, 1)
}

.select-floating-label {

    position: absolute;

    inset-inline-start: 0px;

    top: 0px;

    margin-inline-start: 0.5rem;

    width: auto;

    --tw-translate-y: -50%;

    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));

    --tw-bg-opacity: 1;

    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));

    padding-left: 0.25rem;

    padding-right: 0.25rem
}

.select.select-floating.select-lg .select-floating-label {

    margin-inline-start: 0.75rem
}

.select-filled-label {

    position: absolute;

    inset-inline-start: 0px;

    top: 0.125rem;

    margin-inline-start: 0.75rem
}

.select.select-floating.select-lg .select-filled-label {

    margin-inline-start: 1rem
}
.stack {
    display: inline-grid;
}
  .stack > * {
    grid-column-start: 1;
    grid-row-start: 1;
    transform: translateY(14%) scale(0.9);
    z-index: 1;
}
  .stack > *:nth-child(2) {
    transform: translateY(7%) scale(0.95);
    z-index: 2;
  }
  .stack > *:nth-child(1) {
    transform: translateY(0) scale(1) translateX(0);
    z-index: 3;
  }
  .stack-bottom-start > * {
    transform: translateY(14%) scale(0.9) translateX(-14%);
    z-index: 1;
  }
  .stack-bottom-start > *:nth-child(2) {
    transform: translateY(7%) scale(0.95) translateX(-7%);
    z-index: 2;
  }
  .stack-bottom-end > * {
    transform: translateY(14%) scale(0.9) translateX(14%);
    z-index: 1;
  }
  .stack-bottom-end > *:nth-child(2) {
    transform: translateY(7%) scale(0.95) translateX(7%);
    z-index: 2;
  }
  .stack-top > * {
    transform: translateY(-14%) scale(0.9);
    z-index: 1;
  }
  .stack-top > *:nth-child(2) {
    transform: translateY(-7%) scale(0.95);
    z-index: 2;
  }
  .stack-top-start > * {
    transform: translateY(-14%) scale(0.9) translateX(-14%);
    z-index: 1;
  }
  .stack-top-start > *:nth-child(2) {
    transform: translateY(-7%) scale(0.95) translateX(-7%);
    z-index: 2;
  }
  .stack-top-end > * {
    transform: translateY(-14%) scale(0.9) translateX(14%);
    z-index: 1;
  }
  .stack-top-end > *:nth-child(2) {
    transform: translateY(-7%) scale(0.95) translateX(7%);
    z-index: 2;
  }
  .stack-animated:hover > * {
    transform: translateY(7%) scale(1) translateX(0%);
    transition-property: transform;
    transition-duration: 300ms;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
  .stack-top.stack-animated:hover > * {
    transform: translateY(-7%) scale(1);
    transition-property: transform;
    transition-duration: 300ms;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
  .stack-bottom-start.stack-animated:hover > * {
    transform: translateY(7%) scale(1) translateX(-7%);
    transition-property: transform;
    transition-duration: 300ms;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
  .stack-bottom-end.stack-animated:hover > * {
    transform: translateY(7%) scale(1) translateX(7%);
    transition-property: transform;
    transition-duration: 300ms;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
  .stack-top-start.stack-animated:hover > * {
    transform: translateY(-7%) scale(1) translateX(-7%);
    transition-property: transform;
    transition-duration: 300ms;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
  .stack-top-end.stack-animated:hover > * {
    transform: translateY(-7%) scale(1) translateX(7%);
    transition-property: transform;
    transition-duration: 300ms;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
.stats {
  display: inline-grid
}
:where(.stats) {
  grid-auto-flow: column
}
.stat {
  display: inline-grid;
  width: 100%;
  grid-template-columns: repeat(1, 1fr)
}
.stat-figure {
  grid-column-start: 2;
  grid-row: span 3 / span 3;
  grid-row-start: 1;
  place-self: center;
  justify-self: end
}
.stat-title {
  grid-column-start: 1;
  white-space: nowrap
}
.stat-value {
  grid-column-start: 1;
  white-space: nowrap
}
.stat-desc {
  grid-column-start: 1;
  white-space: nowrap
}
.stat-actions {
  grid-column-start: 1;
  white-space: nowrap
}
/* .stats.grid-flow-row {
  @apply auto-rows-fr;
} */
.swap {

    position: relative;

    display: inline-grid;

    user-select: none;

    place-content: center
}

.swap > * {

    grid-column-start: 1;

    grid-row-start: 1
}

.swap input {

    appearance: none
}

.swap .swap-on,
.swap .swap-indeterminate,
.swap input:indeterminate ~ .swap-on {

    opacity: 0
}

.swap input:checked ~ .swap-off,
.swap-active .swap-off,
.swap input:indeterminate ~ .swap-off {

    opacity: 0
}

.swap input:checked ~ .swap-on,
.swap-active .swap-on,
.swap input:indeterminate ~ .swap-indeterminate {

    opacity: 1
}
.switch {
    flex-shrink: 0
}
.tabs {
  display: flex;
  align-items: flex-end
}
.tabs-lifted:has(.tab-content[class^="rounded-"]) .tab:first-child:not(.tab-active),
  .tabs-lifted:has(.tab-content[class*=" rounded-"]) .tab:first-child:not(.tab-active) {
  border-bottom-color: transparent
}
.tab {
  position: relative;
  display: inline-flex;
  height: 2.375rem;
  cursor: pointer;
  user-select: none;
  appearance: none;
  align-items: center;
  justify-content: center;
  text-align: center;
  font-size: 1rem;
  line-height: 1.375rem;
  --tab-padding: 1rem
}
.table {
    position: relative;
    width: 100%
}
  .table :where(.table-pin-rows thead tr) {
    position: sticky;
    top: 0px;
    z-index: 1;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)))
}
  .table :where(.table-pin-rows tfoot tr) {
    position: sticky;
    bottom: 0px;
    z-index: 1;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)))
}
  .table :where(.table-pin-cols tr th) {
    position: sticky;
    inset-inline-end: 0px;
    inset-inline-start: 0px;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)))
}
  .table-striped tbody tr:nth-child(even) :where(.table-pin-cols tr th) {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)))
}
.textarea {

    display: block;

    min-height: 5rem;

    width: 100%;

    flex-shrink: 1;

    resize: none;

    padding-left: 1rem;

    padding-right: 1rem;

    padding-top: 0.5rem;

    padding-bottom: 0.5rem;

    font-size: 1rem;

    line-height: 1.375rem
}

.textarea-filled-focused {

    position: relative;

    top: -1px;

    z-index: 10;

    display: block;

    height: 0.125rem;

    width: 100%;

    --tw-translate-y: -50%;

    --tw-scale-x: 0;

    --tw-scale-y: 0;

    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));

    transition-property: transform;

    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

    transition-delay: 0s;

    transition-duration: 300ms;

    transition-timing-function: cubic-bezier(0.4, 0, 1, 1)
}
.timeline {
  position: relative;
  display: flex
}
:where(.timeline > li) {
  position: relative;
  display: grid;
  flex-shrink: 0;
  align-items: center;
  grid-template-rows: var(--timeline-row-start, minmax(0, 1fr)) auto var(--timeline-row-end, minmax(0, 1fr));
  grid-template-columns: var(--timeline-col-start, minmax(0, 1fr)) auto var(--timeline-col-end, minmax(0, 1fr))
}
.timeline > li > hr {
  width: 100%
}
:where(.timeline > li > hr):first-child {
  grid-column-start: 1;
  grid-row-start: 2
}
:where(.timeline > li > hr):last-child {
  grid-column-start: 3;
  grid-column-end: none;
  grid-row-start: 2;
  grid-row-end: auto
}
.timeline-start {
  grid-column-start: 1;
  grid-column-end: 4;
  grid-row-start: 1;
  grid-row-end: 2;
  margin: 0.5rem
}
:where(.timeline-start) {
  align-self: flex-end;
  justify-self: center
}
.timeline-middle {
  grid-column-start: 2;
  grid-row-start: 2;
  display: flex;
  width: 2.25rem;
  height: 2.25rem;
  align-items: center;
  justify-content: center
}
.timeline-end {
  grid-column-start: 1;
  grid-column-end: 4;
  grid-row-start: 3;
  grid-row-end: 4;
  margin: 0.5rem
}
:where(.timeline-end) {
  align-self: flex-start;
  justify-self: center
}
.tooltip {
    display: inline-block;
    text-align: center
}

  .tooltip-content {
    visibility: hidden;
    position: absolute;
    display: inline-block;
    padding: 0.5rem;
    opacity: 0;
    width: max-content;
    z-index: 20
}

  .tooltip-body {
    padding-left: 0.75rem;
    padding-right: 0.75rem;
    padding-top: 0.25rem;
    padding-bottom: 0.25rem;
    line-height: 1.25rem
}
.accordion-toggle {

    width: 100%;

    cursor: pointer;

    padding-left: 1.25rem;

    padding-right: 1.25rem;

    padding-top: 1rem;

    padding-bottom: 1rem;

    font-size: 1.125rem;

    line-height: 1.5rem;

    font-weight: 500;

    --tw-text-opacity: 1;

    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)))
}

.accordion-toggle:disabled {

    pointer-events: none;

    opacity: 0.5
}

.accordion-shadow :where(.accordion-item) {

    margin-top: 0.5rem;

    margin-bottom: 0.5rem;

    border-radius: var(--rounded-box, 0.5rem);

    --tw-bg-opacity: 1;

    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));

    --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));

    --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);

    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}

.accordion-shadow :where(.accordion-item) .accordion-item:first-of-type {

    margin-top: 0px
}

.accordion-shadow :where(.accordion-item) .accordion-item:last-of-type {

    margin-bottom: 0px
}

.accordion-shadow :where(.accordion-item) > *:first-child {

    border-top-left-radius: var(--rounded-box, 0.5rem);

    border-top-right-radius: var(--rounded-box, 0.5rem)
}

.accordion-shadow :where(.accordion-item) > *:last-child {

    border-bottom-right-radius: var(--rounded-box, 0.5rem);

    border-bottom-left-radius: var(--rounded-box, 0.5rem)
}

.accordion:where(.accordion-bordered) > :not([hidden]) ~ :not([hidden]) {

    --tw-divide-y-reverse: 0;

    border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));

    border-bottom-width: calc(1px * var(--tw-divide-y-reverse));

    border-color: var(--fallback-bc,oklch(var(--bc)/0.25))
}

.accordion:where(.accordion-bordered) {

    border-radius: var(--rounded-box, 0.5rem);

    border-width: 1px;

    border-color: var(--fallback-bc,oklch(var(--bc)/0.25));

    --tw-bg-opacity: 1;

    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)))
}

/* Tree view space */

.tree-view-space {

    position: relative;

    margin-inline-start: 1rem;

    padding-inline-start: 1rem
}

.tree-view-space::before {

    position: absolute;

    inset-inline-start: 0px;

    top: 0px;

    margin-inline-start: -0.125rem;

    height: 100%;

    width: 0.125rem;

    content: var(--tw-content);

    background-color: var(--fallback-bc,oklch(var(--bc)/0.4))
}
.advance-select-toggle {
    border-radius: var(--rounded-btn, 0.375rem);
    border-width: 1px;
    border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
    font-size: 1rem;
    line-height: 1.375rem;
    font-weight: 400;
    --tw-text-opacity: 1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}.advance-select-toggle:hover {
    border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
}.disabled.advance-select-toggle {
    pointer-events: none;
    border-width: 0px;
    background-color: var(--fallback-n,oklch(var(--n)/0.1));
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    color: var(--fallback-n,oklch(var(--n)/0.5));
}.disabled .advance-select-toggle {
    pointer-events: none;
    border-width: 0px;
    background-color: var(--fallback-n,oklch(var(--n)/0.1));
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    color: var(--fallback-n,oklch(var(--n)/0.5));
}

  .advance-select-toggle:focus,
  .advance-select-toggle:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
    --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.22));
    --tw-shadow: var(--tw-shadow-colored);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

  .advance-select-toggle:focus-visible {
    outline: unset;
  }

.advance-select-menu {
    border-radius: var(--rounded-box, 0.5rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
    background-image: none;
    --tw-shadow: 0 10px 15px -2px var(--fallback-bs,oklch(var(--bs)/0.34));
    --tw-shadow-colored: 0 10px 15px -2px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.advance-select-option {
    border-radius: var(--rounded-btn, 0.375rem);
    font-size: 1rem;
    line-height: 1.375rem;
    font-weight: 400;
    --tw-text-opacity: 1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.advance-select-option:hover {
    background-color: var(--fallback-n,oklch(var(--n)/0.1));
}

.advance-select-option:focus {
    background-color: var(--fallback-n,oklch(var(--n)/0.1));
    outline: 2px solid transparent;
    outline-offset: 2px;
}

.advance-select-option.active,
  .advance-select-option:active {
    background-color: var(--fallback-p,oklch(var(--p)/0.1));
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.advance-select-tag {
    border-radius: var(--rounded-box, 0.5rem);
    border-width: 1px;
    border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
    font-size: 1rem;
    line-height: 1.375rem;
    font-weight: 400;
    --tw-text-opacity: 1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.advance-select-tag:hover {
    border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
}

.advance-select-tag:focus,
  .advance-select-tag:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
    --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.22));
    --tw-shadow: var(--tw-shadow-colored);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

.advance-select-tag:focus-visible {
    outline: unset;
  }

/* State style */

select.is-valid + .advance-select-toggle,
.advance-select-tag:has(> .is-valid),
.validate select:has(~ * > .selected) + .advance-select-toggle {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}

select.is-valid + .advance-select-toggle:focus,
  select.is-valid + .advance-select-toggle:focus-within,
  .advance-select-tag:has(> .is-valid):focus,
  .advance-select-tag:has(> .is-valid):focus-within,
  .validate select:has(~ * > .selected) + .advance-select-toggle:focus,
  .validate select:has(~ * > .selected) + .advance-select-toggle:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
    --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22));
    --tw-shadow: var(--tw-shadow-colored);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}

select.is-invalid + .advance-select-toggle,
.advance-select-tag:has(> .is-invalid),
.validate select:not(:has(~ * > .selected)) + .advance-select-toggle {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}

select.is-invalid + .advance-select-toggle:focus,
  select.is-invalid + .advance-select-toggle:focus-within,
  .advance-select-tag:has(> .is-invalid):focus,
  .advance-select-tag:has(> .is-invalid):focus-within,
  .validate select:not(:has(~ * > .selected)) + .advance-select-toggle:focus,
  .validate select:not(:has(~ * > .selected)) + .advance-select-toggle:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
    --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22));
    --tw-shadow: var(--tw-shadow-colored);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1)));
}

/* When using JS for form validation */

/* Top */

.validate .label:has(~ .advance-select > select:valid) > *,
.validate .label-text:has(~ .advance-select > select:valid),

.validate .advance-select:has(> select:valid) ~ .label,
.validate .advance-select:has(> select:valid) ~ .label-text,
.validate .advance-select:has(> select:valid) ~ .label .label-text {
    --tw-text-opacity: 1;
    color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

/* Top */

.validate .label:has(~ * > select:invalid) > *,
.validate .label-text:has(~ * > select:invalid),

.validate .advance-select:has( > select:invalid) ~ .label,
.validate .advance-select:has(> select:invalid) ~ .label-text,
.validate .advance-select:has( > select:invalid) ~ .label .label-text {
    --tw-text-opacity: 1;
    color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

/* Message */

/* Success message */

.validate .label ~ *:has(> select:valid) ~ * > .success-message,
.validate .advance-select:has(> select:valid) ~ * > .success-message,
.validate .advance-select:has(> select:valid) ~ .success-message {
    display: block;
}

/* Error message */

.validate .label ~ *:has(> select:invalid) ~ * > .error-message,
.validate .advance-select:has(> select:invalid) ~ * > .error-message,
.validate .advance-select:has(> select:invalid) ~ .error-message {
    display: block;
}
.alert {

    border-radius: var(--rounded-box, 0.5rem);

    --tw-bg-opacity: 1;

    background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));

    color: var(--fallback-bc,oklch(var(--bc)/0.8))
}

  .alert-neutral {

    --tw-bg-opacity: 1;

    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity, 1)));

    --tw-text-opacity: 1;

    color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity, 1)))
}

  .alert-primary {

    --tw-bg-opacity: 1;

    background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));

    --tw-text-opacity: 1;

    color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)))
}

  .alert-secondary {

    --tw-bg-opacity: 1;

    background-color: var(--fallback-s,oklch(var(--s)/var(--tw-bg-opacity, 1)));

    --tw-text-opacity: 1;

    color: var(--fallback-sc,oklch(var(--sc)/var(--tw-text-opacity, 1)))
}

  .alert-info {

    --tw-bg-opacity: 1;

    background-color: var(--fallback-in,oklch(var(--in)/var(--tw-bg-opacity, 1)));

    --tw-text-opacity: 1;

    color: var(--fallback-inc,oklch(var(--inc)/var(--tw-text-opacity, 1)))
}

  .alert-success {

    --tw-bg-opacity: 1;

    background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));

    --tw-text-opacity: 1;

    color: var(--fallback-suc,oklch(var(--suc)/var(--tw-text-opacity, 1)))
}

  .alert-warning {

    --tw-bg-opacity: 1;

    background-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-bg-opacity, 1)));

    --tw-text-opacity: 1;

    color: var(--fallback-wac,oklch(var(--wac)/var(--tw-text-opacity, 1)))
}

  .alert-error {

    --tw-bg-opacity: 1;

    background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));

    --tw-text-opacity: 1;

    color: var(--fallback-erc,oklch(var(--erc)/var(--tw-text-opacity, 1)))
}

  /* Soft Variant */

  .alert-soft {

    border-width: 1px;

    border-color: currentColor
}

  .alert-soft.alert-primary {

    background-color: var(--fallback-p,oklch(var(--p)/0.2));

    --tw-text-opacity: 1;

    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)))
}

  .alert-soft.alert-secondary {

    background-color: var(--fallback-s,oklch(var(--s)/0.2));

    --tw-text-opacity: 1;

    color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity, 1)))
}

  .alert-soft.alert-neutral {

    background-color: var(--fallback-n,oklch(var(--n)/0.2));

    --tw-text-opacity: 1;

    color: var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity, 1)))
}

  .alert-soft.alert-info {

    background-color: var(--fallback-in,oklch(var(--in)/0.2));

    --tw-text-opacity: 1;

    color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity, 1)))
}

  .alert-soft.alert-success {

    background-color: var(--fallback-su,oklch(var(--su)/0.2));

    --tw-text-opacity: 1;

    color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)))
}

  .alert-soft.alert-warning {

    background-color: var(--fallback-wa,oklch(var(--wa)/0.2));

    --tw-text-opacity: 1;

    color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity, 1)))
}

  .alert-soft.alert-error {

    background-color: var(--fallback-er,oklch(var(--er)/0.2));

    --tw-text-opacity: 1;

    color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)))
}

  /* Outline Variant */

  .alert-outline {

    border-width: 1px;

    border-color: currentColor;

    background-color: transparent
}

  .alert-outline.alert-neutral {

    --tw-text-opacity: 1;

    color: var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity, 1)))
}

  .alert-outline.alert-primary {

    --tw-text-opacity: 1;

    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)))
}

  .alert-outline.alert-secondary {

    --tw-text-opacity: 1;

    color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity, 1)))
}

  .alert-outline.alert-info {

    --tw-text-opacity: 1;

    color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity, 1)))
}

  .alert-outline.alert-success {

    --tw-text-opacity: 1;

    color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)))
}

  .alert-outline.alert-warning {

    --tw-text-opacity: 1;

    color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity, 1)))
}

  .alert-outline.alert-error {

    --tw-text-opacity: 1;

    color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)))
}
.avatar-group {
    display: flex
}
  .avatar-group :where(.avatar) img {
    height: 100%;
    width: 100%;
    border-radius: 9999px;
    border-width: 2px;
    --tw-border-opacity: 1;
    border-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-border-opacity, 1)));
    object-fit: cover
}
  .avatar-group :where(.avatar).placeholder > div {
    border-radius: 9999px;
    border-width: 2px;
    --tw-border-opacity: 1;
    border-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-border-opacity, 1)))
}
/* Base badge styles */
.badge {
    border-radius: var(--rounded-btn, 0.375rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
    --tw-text-opacity: 1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)))
}
/* Base variants */
.badge-neutral {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity, 1)));
    --tw-text-opacity: 1;
    color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity, 1)))
}
.badge-primary {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
    --tw-text-opacity: 1;
    color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)))
}
.badge-secondary {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-s,oklch(var(--s)/var(--tw-bg-opacity, 1)));
    --tw-text-opacity: 1;
    color: var(--fallback-sc,oklch(var(--sc)/var(--tw-text-opacity, 1)))
}
.badge-accent {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-a,oklch(var(--a)/var(--tw-bg-opacity, 1)));
    --tw-text-opacity: 1;
    color: var(--fallback-ac,oklch(var(--ac)/var(--tw-text-opacity, 1)))
}
.badge-info {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-in,oklch(var(--in)/var(--tw-bg-opacity, 1)));
    --tw-text-opacity: 1;
    color: var(--fallback-inc,oklch(var(--inc)/var(--tw-text-opacity, 1)))
}
.badge-success {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
    --tw-text-opacity: 1;
    color: var(--fallback-suc,oklch(var(--suc)/var(--tw-text-opacity, 1)))
}
.badge-warning {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-bg-opacity, 1)));
    --tw-text-opacity: 1;
    color: var(--fallback-wac,oklch(var(--wac)/var(--tw-text-opacity, 1)))
}
.badge-error {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
    --tw-text-opacity: 1;
    color: var(--fallback-erc,oklch(var(--erc)/var(--tw-text-opacity, 1)))
}
/* Soft variants */
.badge-soft {
    background-color: var(--fallback-b3,oklch(var(--b3)/0.4))
}
.badge-soft.badge-neutral {
    background-color: var(--fallback-n,oklch(var(--n)/0.2));
    --tw-text-opacity: 1;
    color: var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity, 1)))
}
.badge-soft.badge-primary {
    background-color: var(--fallback-p,oklch(var(--p)/0.2));
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)))
}
.badge-soft.badge-secondary {
    background-color: var(--fallback-s,oklch(var(--s)/0.2));
    --tw-text-opacity: 1;
    color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity, 1)))
}
.badge-soft.badge-accent {
    background-color: var(--fallback-a,oklch(var(--a)/0.2));
    --tw-text-opacity: 1;
    color: var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity, 1)))
}
.badge-soft.badge-info {
    background-color: var(--fallback-in,oklch(var(--in)/0.2));
    --tw-text-opacity: 1;
    color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity, 1)))
}
.badge-soft.badge-success {
    background-color: var(--fallback-su,oklch(var(--su)/0.2));
    --tw-text-opacity: 1;
    color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)))
}
.badge-soft.badge-warning {
    background-color: var(--fallback-wa,oklch(var(--wa)/0.2));
    --tw-text-opacity: 1;
    color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity, 1)))
}
.badge-soft.badge-error {
    background-color: var(--fallback-er,oklch(var(--er)/0.2));
    --tw-text-opacity: 1;
    color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)))
}
/* Outline variants */
.badge-outline {
    border-width: 1px;
    border-color: currentColor;
    background-color: transparent
}
.badge-outline.badge-neutral {
    --tw-text-opacity: 1;
    color: var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity, 1)))
}
.badge-outline.badge-primary {
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)))
}
.badge-outline.badge-secondary {
    --tw-text-opacity: 1;
    color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity, 1)))
}
.badge-outline.badge-accent {
    --tw-text-opacity: 1;
    color: var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity, 1)))
}
.badge-outline.badge-info {
    --tw-text-opacity: 1;
    color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity, 1)))
}
.badge-outline.badge-success {
    --tw-text-opacity: 1;
    color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)))
}
.badge-outline.badge-warning {
    --tw-text-opacity: 1;
    color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity, 1)))
}
.badge-outline.badge-error {
    --tw-text-opacity: 1;
    color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)))
}
.breadcrumbs > ul .breadcrumbs-separator, .breadcrumbs > ol .breadcrumbs-separator {
          color: var(--fallback-bc,oklch(var(--bc)/0.5));
}
    .breadcrumbs > ul > li > a:focus, .breadcrumbs > ol > li > a:focus {
          outline: 2px solid transparent;
          outline-offset: 2px;
}
    .breadcrumbs > ul > li > a:focus-visible, .breadcrumbs > ol > li > a:focus-visible {
          outline: 2px solid currentColor;
          outline-offset: 2px;
        }
.btn {
  gap: 0.5rem;
  border-radius: var(--rounded-btn, 0.375rem);
  border-color: currentColor;
  font-weight: 500;
  text-decoration-line: none;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  border-width: var(--border-btn, 1px);
  transition-property: color, background-color, border-color, opacity, box-shadow, transform
}
  @media (prefers-reduced-motion: no-preference) {.btn {
    animation: button-pop var(--animation-btn, 0.25s) ease-out
}
  }
  .btn:active:hover,
  .btn:active:focus {
    animation: button-pop 0s ease-out;
    transform: scale(var(--btn-focus-scale, 0.97));
  }
  /* default btn */
  .btn {
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  text-decoration-line: none;
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: var(--fallback-bc,oklch(var(--bc)/1));
    background-color: oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity));
    --tw-bg-opacity: 1;

    border-color: oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity));
    --tw-border-opacity: 1
}
  @supports not (color: oklch(0% 0 0)) {
  .btn {
      background-color: var(--btn-color, var(--fallback-b2));
      border-color: var(--btn-color, var(--fallback-b2))
  }
    }
  @media (hover: hover) {
      .btn:hover {
    --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
    --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
  }
        @supports (color: color-mix(in oklab, black, black)) {
      .btn:hover {
          background-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%,
            black
          );
          border-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%,
            black
          )
      }
        }
        @supports not (color: oklch(0% 0 0)) {
      .btn:hover {
          background-color: var(--btn-color, var(--fallback-b2));
          border-color: var(--btn-color, var(--fallback-b2))
      }
        }
    }
  @supports (color: color-mix(in oklab, black, black)) {
  .btn-active {
        background-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%, black);
        border-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%, black)
    }
      }
  .btn:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 0px
}
  @supports (color: color-mix(in oklab, black, black)) {
  .btn:focus-visible {
        background-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%, black);
        border-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%, black)
    }
      }
  @supports not (color: oklch(0% 0 0)) {
  .btn:focus-visible {
        background-color: var(--btn-color, var(--fallback-b2));
        border-color: var(--btn-color, var(--fallback-b2))
    }
      }
  /* brand colors */
  .btn-primary {
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-p,oklch(var(--p)/0.3))
}
  @supports (color: oklch(0% 0 0)) {
  .btn-primary {
      --btn-color: var(--p)
  }
    }
  @supports not (color: oklch(0% 0 0)) {
  .btn-primary {
      --btn-color: var(--fallback-p)
  }
    }
  .btn-secondary {
  --tw-text-opacity: 1;
  color: var(--fallback-sc,oklch(var(--sc)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-s,oklch(var(--s)/0.3))
}
  @supports (color: oklch(0% 0 0)) {
  .btn-secondary {
      --btn-color: var(--s)
  }
    }
  @supports not (color: oklch(0% 0 0)) {
  .btn-secondary {
      --btn-color: var(--fallback-s)
  }
    }
  .btn-accent {
  --tw-text-opacity: 1;
  color: var(--fallback-ac,oklch(var(--ac)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-a,oklch(var(--a)/0.3))
}
  @supports (color: oklch(0% 0 0)) {
  .btn-accent {
      --btn-color: var(--a)
  }
    }
  @supports not (color: oklch(0% 0 0)) {
  .btn-accent {
      --btn-color: var(--fallback-a)
  }
    }
  /* btn with state colors */
  .btn-info {
  --tw-text-opacity: 1;
  color: var(--fallback-inc,oklch(var(--inc)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-in,oklch(var(--in)/0.3))
}
  @supports (color: oklch(0% 0 0)) {
  .btn-info {
      --btn-color: var(--in)
  }
    }
  @supports not (color: oklch(0% 0 0)) {
  .btn-info {
      --btn-color: var(--fallback-in)
  }
    }
  .btn-success {
  --tw-text-opacity: 1;
  color: var(--fallback-suc,oklch(var(--suc)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-su,oklch(var(--su)/0.3))
}
  @supports (color: oklch(0% 0 0)) {
  .btn-success {
      --btn-color: var(--su)
  }
    }
  @supports not (color: oklch(0% 0 0)) {
  .btn-success {
      --btn-color: var(--fallback-su)
  }
    }
  .btn-warning {
  --tw-text-opacity: 1;
  color: var(--fallback-wac,oklch(var(--wac)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.3))
}
  @supports (color: oklch(0% 0 0)) {
  .btn-warning {
      --btn-color: var(--wa)
  }
    }
  @supports not (color: oklch(0% 0 0)) {
  .btn-warning {
      --btn-color: var(--fallback-wa)
  }
    }
  .btn-error {
  --tw-text-opacity: 1;
  color: var(--fallback-erc,oklch(var(--erc)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-er,oklch(var(--er)/0.3))
}
  @supports (color: oklch(0% 0 0)) {
  .btn-error {
      --btn-color: var(--er)
  }
    }
  @supports not (color: oklch(0% 0 0)) {
  .btn-error {
      --btn-color: var(--fallback-er)
  }
    }
  /* glass */
  .btn.glass {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: currentColor
}
  .btn.glass:hover {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}
  @media (hover: hover) {
      .btn.glass:hover {
        --glass-opacity: 25%;
        --glass-border-opacity: 15%;
      }
    }
  .btn.glass.btn-active {
      --glass-opacity: 25%;
      --glass-border-opacity: 15%;
    }
  /* soft */
  .btn-soft {
  border-style: none;
  background-color: var(--fallback-n,oklch(var(--n)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}
  .btn-soft:hover {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}
  @media (hover: hover) {
      .btn-soft:hover {
    background-color: var(--fallback-n,oklch(var(--n)/0.3))
  }
    }
  .btn-soft.btn-active {
  background-color: var(--fallback-n,oklch(var(--n)/0.3))
}
  .btn-soft:focus-visible {
  background-color: var(--fallback-n,oklch(var(--n)/0.3));
  outline-color: var(--fallback-n,oklch(var(--n)/0.5))
}
  .btn-soft.btn-primary {
  background-color: var(--fallback-p,oklch(var(--p)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-p,oklch(var(--p)/0.5))
}
  @media (hover: hover) {
        .btn-soft.btn-primary:hover {
    background-color: var(--fallback-p,oklch(var(--p)/0.3))
  }
      }
  .btn-soft.btn-primary.btn-active {
  background-color: var(--fallback-p,oklch(var(--p)/0.3))
}
  .btn-soft.btn-primary:focus-visible {
  background-color: var(--fallback-p,oklch(var(--p)/0.3));
  outline-color: var(--fallback-p,oklch(var(--p)/0.5))
}
  .btn-soft.btn-secondary {
  background-color: var(--fallback-s,oklch(var(--s)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-s,oklch(var(--s)/0.5))
}
  @media (hover: hover) {
        .btn-soft.btn-secondary:hover {
    background-color: var(--fallback-s,oklch(var(--s)/0.3))
  }
      }
  .btn-soft.btn-secondary.btn-active {
  background-color: var(--fallback-s,oklch(var(--s)/0.3))
}
  .btn-soft.btn-secondary:focus-visible {
  background-color: var(--fallback-s,oklch(var(--s)/0.3));
  outline-color: var(--fallback-s,oklch(var(--s)/0.5))
}
  .btn-soft.btn-accent {
  background-color: var(--fallback-a,oklch(var(--a)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-a,oklch(var(--a)/0.5))
}
  @media (hover: hover) {
        .btn-soft.btn-accent:hover {
    background-color: var(--fallback-a,oklch(var(--a)/0.3))
  }
      }
  .btn-soft.btn-accent.btn-active {
  background-color: var(--fallback-a,oklch(var(--a)/0.3))
}
  .btn-soft.btn-accent:focus-visible {
  background-color: var(--fallback-a,oklch(var(--a)/0.3));
  outline-color: var(--fallback-a,oklch(var(--a)/0.5))
}
  .btn-soft.btn-success {
  background-color: var(--fallback-su,oklch(var(--su)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-su,oklch(var(--su)/0.5))
}
  @media (hover: hover) {
        .btn-soft.btn-success:hover {
    background-color: var(--fallback-su,oklch(var(--su)/0.3))
  }
      }
  .btn-soft.btn-success.btn-active {
  background-color: var(--fallback-su,oklch(var(--su)/0.3))
}
  .btn-soft.btn-success:focus-visible {
  background-color: var(--fallback-su,oklch(var(--su)/0.3));
  outline-color: var(--fallback-su,oklch(var(--su)/0.5))
}
  .btn-soft.btn-info {
  background-color: var(--fallback-in,oklch(var(--in)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-in,oklch(var(--in)/0.5))
}
  @media (hover: hover) {
        .btn-soft.btn-info:hover {
    background-color: var(--fallback-in,oklch(var(--in)/0.3))
  }
      }
  .btn-soft.btn-info.btn-active {
  background-color: var(--fallback-in,oklch(var(--in)/0.3))
}
  .btn-soft.btn-info:focus-visible {
  background-color: var(--fallback-in,oklch(var(--in)/0.3));
  outline-color: var(--fallback-in,oklch(var(--in)/0.5))
}
  .btn-soft.btn-warning {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.5))
}
  @media (hover: hover) {
        .btn-soft.btn-warning:hover {
    background-color: var(--fallback-wa,oklch(var(--wa)/0.3))
  }
      }
  .btn-soft.btn-warning.btn-active {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.3))
}
  .btn-soft.btn-warning:focus-visible {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.3));
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.5))
}
  .btn-soft.btn-error {
  background-color: var(--fallback-er,oklch(var(--er)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-er,oklch(var(--er)/0.5))
}
  @media (hover: hover) {
        .btn-soft.btn-error:hover {
    background-color: var(--fallback-er,oklch(var(--er)/0.3))
  }
      }
  .btn-soft.btn-error.btn-active {
  background-color: var(--fallback-er,oklch(var(--er)/0.3))
}
  .btn-soft.btn-error:focus-visible {
  background-color: var(--fallback-er,oklch(var(--er)/0.3));
  outline-color: var(--fallback-er,oklch(var(--er)/0.5))
}
  /* outline */
  .btn-outline {
  border-style: solid;
  border-color: currentColor;
  background-color: transparent;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}
  .btn-outline:hover {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}
  @media (hover: hover) {
      .btn-outline:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-bc,oklch(var(--bc)/0.1))
  }
    }
  .btn-outline.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1))
}
  .btn-outline:focus-visible {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  outline-width: 1px;
  outline-color: currentColor
}
  .btn-outline.btn-primary {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)))
}
  @media (hover: hover) {
        .btn-outline.btn-primary:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-p,oklch(var(--p)/0.1))
  }
      }
  .btn-outline.btn-primary.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-p,oklch(var(--p)/0.1))
}
  .btn-outline.btn-primary:focus-visible {
  background-color: var(--fallback-p,oklch(var(--p)/0.1))
}
  .btn-outline.btn-secondary {
  --tw-text-opacity: 1;
  color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity, 1)))
}
  @media (hover: hover) {
        .btn-outline.btn-secondary:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-s,oklch(var(--s)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-s,oklch(var(--s)/0.1))
  }
      }
  .btn-outline.btn-secondary.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-s,oklch(var(--s)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-s,oklch(var(--s)/0.1))
}
  .btn-outline.btn-secondary:focus-visible {
  background-color: var(--fallback-s,oklch(var(--s)/0.1))
}
  .btn-outline.btn-accent {
  --tw-text-opacity: 1;
  color: var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity, 1)))
}
  @media (hover: hover) {
        .btn-outline.btn-accent:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-a,oklch(var(--a)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-a,oklch(var(--a)/0.1))
  }
      }
  .btn-outline.btn-accent.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-a,oklch(var(--a)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-a,oklch(var(--a)/0.1))
}
  .btn-outline.btn-accent:focus-visible {
  background-color: var(--fallback-a,oklch(var(--a)/0.1))
}
  .btn-outline.btn-success {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)))
}
  @media (hover: hover) {
        .btn-outline.btn-success:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-su,oklch(var(--su)/0.1))
  }
      }
  .btn-outline.btn-success.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-su,oklch(var(--su)/0.1))
}
  .btn-outline.btn-success:focus-visible {
  background-color: var(--fallback-su,oklch(var(--su)/0.1))
}
  .btn-outline.btn-info {
  --tw-text-opacity: 1;
  color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity, 1)))
}
  @media (hover: hover) {
        .btn-outline.btn-info:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-in,oklch(var(--in)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-in,oklch(var(--in)/0.1))
  }
      }
  .btn-outline.btn-info.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-in,oklch(var(--in)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-in,oklch(var(--in)/0.1))
}
  .btn-outline.btn-info:focus-visible {
  background-color: var(--fallback-in,oklch(var(--in)/0.1))
}
  .btn-outline.btn-warning {
  --tw-text-opacity: 1;
  color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity, 1)))
}
  @media (hover: hover) {
        .btn-outline.btn-warning:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-wa,oklch(var(--wa)/0.1))
  }
      }
  .btn-outline.btn-warning.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-wa,oklch(var(--wa)/0.1))
}
  .btn-outline.btn-warning:focus-visible {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.1))
}
  .btn-outline.btn-error {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)))
}
  @media (hover: hover) {
        .btn-outline.btn-error:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-er,oklch(var(--er)/0.1))
  }
      }
  .btn-outline.btn-error.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-er,oklch(var(--er)/0.1))
}
  .btn-outline.btn-error:focus-visible {
  background-color: var(--fallback-er,oklch(var(--er)/0.1))
}
  /* text */
  .btn-text {
  border-color: transparent;
  background-color: transparent;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}
  .btn-text:hover {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}
  @media (hover: hover) {
      .btn-text:hover {
    border-color: transparent;
    background-color: var(--fallback-bc,oklch(var(--bc)/0.1))
  }
    }
  .btn-text.btn-active {
  border-color: transparent;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1))
}
  .btn-text:focus-visible {
  border-color: transparent;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  outline-color: currentColor
}
  .btn-text.btn-primary {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)))
}
  @media (hover: hover) {
        .btn-text.btn-primary:hover {
    background-color: var(--fallback-p,oklch(var(--p)/0.1))
  }
      }
  .btn-text.btn-primary.btn-active {
  background-color: var(--fallback-p,oklch(var(--p)/0.1))
}
  .btn-text.btn-primary:focus-visible {
  background-color: var(--fallback-p,oklch(var(--p)/0.1))
}
  .btn-text.btn-secondary {
  --tw-text-opacity: 1;
  color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity, 1)))
}
  @media (hover: hover) {
        .btn-text.btn-secondary:hover {
    background-color: var(--fallback-s,oklch(var(--s)/0.1))
  }
      }
  .btn-text.btn-secondary.btn-active {
  background-color: var(--fallback-s,oklch(var(--s)/0.1))
}
  .btn-text.btn-secondary:focus-visible {
  background-color: var(--fallback-s,oklch(var(--s)/0.1))
}
  .btn-text.btn-accent {
  --tw-text-opacity: 1;
  color: var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity, 1)))
}
  @media (hover: hover) {
        .btn-text.btn-accent:hover {
    background-color: var(--fallback-a,oklch(var(--a)/0.1))
  }
      }
  .btn-text.btn-accent.btn-active {
  background-color: var(--fallback-a,oklch(var(--a)/0.1))
}
  .btn-text.btn-accent:focus-visible {
  background-color: var(--fallback-a,oklch(var(--a)/0.1))
}
  .btn-text.btn-success {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)))
}
  @media (hover: hover) {
        .btn-text.btn-success:hover {
    background-color: var(--fallback-su,oklch(var(--su)/0.1))
  }
      }
  .btn-text.btn-success.btn-active {
  background-color: var(--fallback-su,oklch(var(--su)/0.1))
}
  .btn-text.btn-success:focus-visible {
  background-color: var(--fallback-su,oklch(var(--su)/0.1))
}
  .btn-text.btn-info {
  --tw-text-opacity: 1;
  color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity, 1)))
}
  @media (hover: hover) {
        .btn-text.btn-info:hover {
    background-color: var(--fallback-in,oklch(var(--in)/0.1))
  }
      }
  .btn-text.btn-info.btn-active {
  background-color: var(--fallback-in,oklch(var(--in)/0.1))
}
  .btn-text.btn-info:focus-visible {
  background-color: var(--fallback-in,oklch(var(--in)/0.1))
}
  .btn-text.btn-warning {
  --tw-text-opacity: 1;
  color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity, 1)))
}
  @media (hover: hover) {
        .btn-text.btn-warning:hover {
    background-color: var(--fallback-wa,oklch(var(--wa)/0.1))
  }
      }
  .btn-text.btn-warning.btn-active {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.1))
}
  .btn-text.btn-warning:focus-visible {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.1))
}
  .btn-text.btn-error {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)))
}
  @media (hover: hover) {
        .btn-text.btn-error:hover {
    background-color: var(--fallback-er,oklch(var(--er)/0.1))
  }
      }
  .btn-text.btn-error.btn-active {
  background-color: var(--fallback-er,oklch(var(--er)/0.1))
}
  .btn-text.btn-error:focus-visible {
  background-color: var(--fallback-er,oklch(var(--er)/0.1))
}
  /* Gradient */
  .btn-gradient {
  border-width: 2px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity, 1)));
  background-color: transparent;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: var(--fallback-b2,oklch(var(--b2)/0.3));
    transition: all 0.4s ease-in-out;
    background-size: 200% auto;
    --dark-shade: color-mix(in oklab, oklch(var(--light-shade, var(--b2)) / var(--tw-bg-opacity, 1)) 80%, black);
    background-image: linear-gradient(
      102deg,
      oklch(var(--light-shade, var(--b2)) / var(--tw-bg-opacity)) 0%,
      var(--dark-shade) 51%,
      oklch(var(--light-shade, var(--b2)) / var(--tw-bg-opacity)) 100%
    )
}
  @media (hover: hover) {
      .btn-gradient:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
    --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
        background-position: right center
  }
    }
  .btn-gradient:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 0px;
      border-color: transparent;
      background-image: linear-gradient(
        102deg,
        oklch(var(--light-shade, var(--b2)) / var(--tw-bg-opacity)) 0%,
        var(--dark-shade) 51%,
        oklch(var(--light-shade, var(--b2)) / var(--tw-bg-opacity)) 100%
      )
}
  .btn-gradient.btn-primary {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)));
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.26));
  --tw-shadow: var(--tw-shadow-colored)
}
  .btn-gradient.btn-primary:hover {
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.2));
  --tw-shadow: var(--tw-shadow-colored)
}
  @supports (color: oklch(0% 0 0)) {
  .btn-gradient.btn-primary {
        --light-shade: var(--p)
    }
      }
  .btn-gradient.btn-primary:focus-visible {
  outline-color: var(--fallback-p,oklch(var(--p)/0.3));
        border-color: transparent
}
  .btn-gradient.btn-secondary {
  --tw-border-opacity: 1;
  border-color: var(--fallback-s,oklch(var(--s)/var(--tw-border-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-sc,oklch(var(--sc)/var(--tw-text-opacity, 1)));
  --tw-shadow-color: var(--fallback-s,oklch(var(--s)/0.26));
  --tw-shadow: var(--tw-shadow-colored)
}
  .btn-gradient.btn-secondary:hover {
  --tw-shadow-color: var(--fallback-s,oklch(var(--s)/0.2));
  --tw-shadow: var(--tw-shadow-colored)
}
  @supports (color: oklch(0% 0 0)) {
  .btn-gradient.btn-secondary {
        --light-shade: var(--s)
    }
      }
  .btn-gradient.btn-secondary:focus-visible {
  outline-color: var(--fallback-s,oklch(var(--s)/0.3));
        border-color: transparent
}
  .btn-gradient.btn-accent {
  --tw-border-opacity: 1;
  border-color: var(--fallback-a,oklch(var(--a)/var(--tw-border-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-ac,oklch(var(--ac)/var(--tw-text-opacity, 1)));
  --tw-shadow-color: var(--fallback-a,oklch(var(--a)/0.26));
  --tw-shadow: var(--tw-shadow-colored)
}
  .btn-gradient.btn-accent:hover {
  --tw-shadow-color: var(--fallback-a,oklch(var(--a)/0.2));
  --tw-shadow: var(--tw-shadow-colored)
}
  @supports (color: oklch(0% 0 0)) {
  .btn-gradient.btn-accent {
        --light-shade: var(--a)
    }
      }
  .btn-gradient.btn-accent:focus-visible {
  outline-color: var(--fallback-a,oklch(var(--a)/0.3));
        border-color: transparent
}
  /* btn with state colors */
  .btn-gradient.btn-info {
  --tw-border-opacity: 1;
  border-color: var(--fallback-in,oklch(var(--in)/var(--tw-border-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-inc,oklch(var(--inc)/var(--tw-text-opacity, 1)));
  --tw-shadow-color: var(--fallback-in,oklch(var(--in)/0.26));
  --tw-shadow: var(--tw-shadow-colored)
}
  .btn-gradient.btn-info:hover {
  --tw-shadow-color: var(--fallback-in,oklch(var(--in)/0.2));
  --tw-shadow: var(--tw-shadow-colored)
}
  @supports (color: oklch(0% 0 0)) {
  .btn-gradient.btn-info {
        --light-shade: var(--in)
    }
      }
  .btn-gradient.btn-info:focus-visible {
  outline-color: var(--fallback-in,oklch(var(--in)/0.3));
        border-color: transparent
}
  .btn-gradient.btn-success {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-suc,oklch(var(--suc)/var(--tw-text-opacity, 1)));
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.26));
  --tw-shadow: var(--tw-shadow-colored)
}
  .btn-gradient.btn-success:hover {
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.2));
  --tw-shadow: var(--tw-shadow-colored)
}
  @supports (color: oklch(0% 0 0)) {
  .btn-gradient.btn-success {
        --light-shade: var(--su)
    }
      }
  .btn-gradient.btn-success:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3));
        border-color: transparent
}
  .btn-gradient.btn-warning {
  --tw-border-opacity: 1;
  border-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-border-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-wac,oklch(var(--wac)/var(--tw-text-opacity, 1)));
  --tw-shadow-color: var(--fallback-wa,oklch(var(--wa)/0.26));
  --tw-shadow: var(--tw-shadow-colored)
}
  .btn-gradient.btn-warning:hover {
  --tw-shadow-color: var(--fallback-wa,oklch(var(--wa)/0.2));
  --tw-shadow: var(--tw-shadow-colored)
}
  @supports (color: oklch(0% 0 0)) {
  .btn-gradient.btn-warning {
        --light-shade: var(--wa)
    }
      }
  .btn-gradient.btn-warning:focus-visible {
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.3));
        border-color: transparent
}
  .btn-gradient.btn-error {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-erc,oklch(var(--erc)/var(--tw-text-opacity, 1)));
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.26));
  --tw-shadow: var(--tw-shadow-colored)
}
  .btn-gradient.btn-error:hover {
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.2));
  --tw-shadow: var(--tw-shadow-colored)
}
  @supports (color: oklch(0% 0 0)) {
  .btn-gradient.btn-error {
        --light-shade: var(--er)
    }
      }
  .btn-gradient.btn-error:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3));
        border-color: transparent
}
  /* disabled */
  .btn.btn-disabled,
  .btn.disabled,
  .btn[disabled],
  .btn:disabled {
  pointer-events: none;
  opacity: 0.5;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}
  @media (hover: hover) {
    .btn-disabled:hover,
    .btn[disabled]:hover,
    .btn.disabled:hover,
    .btn:disabled:hover {
    opacity: 0.5;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
  }
  }
/* radio input and checkbox as button */
.btn:is(input[type="checkbox"]:checked),
.btn:is(input[type="radio"]:checked) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)))
}
@media (hover: hover) {
      @supports (color: color-mix(in oklab, black, black)) {
    .btn:is(input[type="checkbox"]:checked):hover, .btn:is(input[type="radio"]:checked):hover {
        background-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
        border-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black)
    }
      }
  }
.btn:is(input[type="checkbox"]:checked):focus-visible, .btn:is(input[type="radio"]:checked):focus-visible {
  outline-color: var(--fallback-p,oklch(var(--p)/1))
}
@keyframes button-pop {
  0% {
    transform: scale(var(--btn-focus-scale, 0.98));
  }
  40% {
    transform: scale(1.02);
  }
  100% {
    transform: scale(1);
  }
}
.card {
  border-radius: var(--rounded-box, 0.5rem);
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
  box-shadow: var(--card-shadow, 0px 2px 4px 0px oklch(var(--bs) / 0.26));
  border-width: var(--card-border, 0px);
}

  /* header */
  .card-header {
  border-top-left-radius: var(--rounded-box, 0.5rem);
  border-top-right-radius: var(--rounded-box, 0.5rem);
    padding: var(--padding-card, 1.5rem);
}
  .card-body {
    padding: var(--padding-card, 1.5rem);
  }
  .card-footer {
  border-bottom-right-radius: var(--rounded-box, 0.5rem);
  border-bottom-left-radius: var(--rounded-box, 0.5rem);
    padding: var(--padding-card, 1.5rem);
}
  .card :where(figure:first-child) {
  overflow: hidden;
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
    border-end-start-radius: unset;
    border-end-end-radius: unset;
}
  .card :where(figure:last-child) {
  overflow: hidden;
    border-start-start-radius: unset;
    border-start-end-radius: unset;
    border-end-start-radius: inherit;
    border-end-end-radius: inherit;
}
  .card.image-full:before {
  z-index: 10;
  border-radius: var(--rounded-box, 0.5rem);

      background-image: linear-gradient(0deg, rgba(0, 0, 0, 0.58) 0%, rgba(0, 0, 0, 0.58) 100%);
}
  .card.image-full > .card-body {
  z-index: 20;
  --tw-text-opacity: 1;
  color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity, 1)));
}
  .card.image-full :where(figure) {
  overflow: hidden;
      border-radius: inherit;
}
  .card .alert {
  border-radius: 0px;
}
  .card .alert:first-child {
  border-top-left-radius: var(--rounded-box, 0.5rem);
  border-top-right-radius: var(--rounded-box, 0.5rem);
}
  .card .alert:last-child {
  border-bottom-right-radius: var(--rounded-box, 0.5rem);
  border-bottom-left-radius: var(--rounded-box, 0.5rem);
}

:where(.card-header) + .card-body {
  padding-top: 0;
}

:where(.card-body) + .card-footer {
  padding-top: 0;
}

.card-group {
  border-radius: var(--rounded-box, 0.5rem);
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --cd-shadow: var(--fallback-bs,oklch(var(--bs)/0.26));
  box-shadow: var(--card-shadow, 0px 2px 4px 0px var(--cd-shadow));
  border-width: var(--card-border, 0px);
}

.card-group > .card {
  border-radius: 0px;
    --card-shadow: none;
    --card-border: 0;
}
.carousel-body,
.carousel-slide {

    transition-property: transform;

    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

    transition-duration: 700ms
}

.carousel-prev,
.carousel-next {

    color: var(--fallback-bc,oklch(var(--bc)/0.8))
}

.carousel-prev:hover,
.carousel-next:hover {

    --tw-text-opacity: 1;

    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)))
}

.carousel-prev.disabled,
.carousel-next.disabled {

    pointer-events: none;

    color: var(--fallback-bc,oklch(var(--bc)/0.3))
}
.chat-bubble {
    border-radius: var(--rounded-box, 0.5rem);
    min-height: 2.75rem;
    min-width: 2.75rem;
}
  .chat-receiver .chat-bubble {
    border-end-start-radius: 0px;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
    --tw-text-opacity: 1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}
  .chat-receiver .chat-bubble:before {
      inset-inline-start: -0.749rem;
    }
  .chat-sender .chat-bubble {
    border-end-end-radius: 0px;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
    --tw-text-opacity: 1;
    color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)));
}
  .chat-sender .chat-bubble:before {
      inset-inline-start: 99.9%;
    }
.checkbox {
  --chkbg: var(--fallback-n,oklch(var(--n)/1));
  --chkfg: var(--fallback-nc,oklch(var(--nc)/1));
  position: relative;
  width: 1.5rem;
  height: 1.5rem;
  cursor: pointer;
  appearance: none;
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1.5px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

  .checkbox:focus {
    box-shadow: none;
  }

  .checkbox:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 0px;
  outline-color: var(--fallback-n,oklch(var(--n)/0.3));
}

  .checkbox:checked,
  .checkbox[checked="true"],
  .checkbox[aria-checked="true"] {
  background-repeat: no-repeat;
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    border-color: var(--chkbg);
    animation: checkmark var(--animation-input, 0.2s) ease-out;
    background-color: var(--chkbg);
    background-image: linear-gradient(-45deg, transparent 66%, var(--chkbg) 66.99%),
      linear-gradient(45deg, transparent 77%, var(--chkbg) 77.99%),
      linear-gradient(-45deg, var(--chkbg) 41%, transparent 41.99%),
      linear-gradient(45deg, var(--chkbg) 34%, var(--chkfg) 34.99%, var(--chkfg) 40%, transparent 40.99%),
      linear-gradient(-45deg, var(--chkfg) 47%, var(--chkbg) 47.99%);
}

  .checkbox:indeterminate {
  background-repeat: no-repeat;
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    background-color: var(--chkbg);
    border-color: var(--chkbg);
    animation: checkmark var(--animation-input, 0.2s) ease-out;
    background-image: linear-gradient(90deg, transparent 80%, var(--chkbg) 80%),
      linear-gradient(-90deg, transparent 80%, var(--chkbg) 80%),
      linear-gradient(0deg, var(--chkbg) 45%, var(--chkfg) 45%, var(--chkfg) 55%, var(--chkbg) 55%);
}

  .checkbox-primary {
    --chkbg: var(--fallback-p,oklch(var(--p)/1));
    --chkfg: var(--fallback-pc,oklch(var(--pc)/1));
  }

  .checkbox-primary:checked:focus-visible, .checkbox-primary[checked="true"]:focus-visible, .checkbox-primary[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-p,oklch(var(--p)/0.3));
}

  .checkbox-secondary {
    --chkbg: var(--fallback-s,oklch(var(--s)/1));
    --chkfg: var(--fallback-sc,oklch(var(--sc)/1));
  }

  .checkbox-secondary:checked:focus-visible, .checkbox-secondary[checked="true"]:focus-visible, .checkbox-secondary[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-s,oklch(var(--s)/0.3));
}

  .checkbox-accent {
    --chkbg: var(--fallback-a,oklch(var(--a)/1));
    --chkfg: var(--fallback-ac,oklch(var(--ac)/1));
  }

  .checkbox-accent:checked:focus-visible, .checkbox-accent[checked="true"]:focus-visible, .checkbox-accent[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-a,oklch(var(--a)/0.3));
}

  /* State color */

  .checkbox-info {
    --chkbg: var(--fallback-in,oklch(var(--in)/1));
    --chkfg: var(--fallback-inc,oklch(var(--inc)/1));
  }

  .checkbox-info:checked:focus-visible, .checkbox-info[checked="true"]:focus-visible, .checkbox-info[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-in,oklch(var(--in)/0.3));
}

  .checkbox-success {
    --chkbg: var(--fallback-su,oklch(var(--su)/1));
    --chkfg: var(--fallback-suc,oklch(var(--suc)/1));
  }

  .checkbox-success:checked:focus-visible, .checkbox-success[checked="true"]:focus-visible, .checkbox-success[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3));
}

  .checkbox-warning {
    --chkbg: var(--fallback-wa,oklch(var(--wa)/1));
    --chkfg: var(--fallback-wac,oklch(var(--wac)/1));
  }

  .checkbox-warning:checked:focus-visible, .checkbox-warning[checked="true"]:focus-visible, .checkbox-warning[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.3));
}

  .checkbox-error {
    --chkbg: var(--fallback-er,oklch(var(--er)/1));
    --chkfg: var(--fallback-erc,oklch(var(--erc)/1));
  }

  .checkbox-error:checked:focus-visible, .checkbox-error[checked="true"]:focus-visible, .checkbox-error[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3));
}

  .checkbox.disabled,
  .checkbox:disabled,
  .checkbox[disabled] {
  pointer-events: none;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  opacity: 0.4;
}

  .checkbox.disabled:not(checked), .checkbox:disabled:not(checked), .checkbox[disabled]:not(checked) {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity, 1)));
}

@keyframes checkmark {
  0% {
    background-position-y: 5px;
  }
  50% {
    background-position-y: -2px;
  }
  100% {
    background-position-y: 0;
  }
}

/* Backward compatibility */

.checkbox-mark {
  display: none;
}

/* State style */

.checkbox.is-valid,
.validate .checkbox:valid {
  --chkbg: var(--fallback-su,oklch(var(--su)/1));
  --chkfg: var(--fallback-suc,oklch(var(--suc)/1));
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}

.checkbox.is-valid:focus-visible, .validate .checkbox:valid:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3)) !important;
}

.checkbox.is-invalid,
.validate .checkbox:invalid {
  --chkbg: var(--fallback-er,oklch(var(--er)/1));
  --chkfg: var(--fallback-erc,oklch(var(--erc)/1));
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}

.checkbox.is-invalid:focus-visible, .validate .checkbox:invalid:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3)) !important;
}

/* Label state */

/* Top text */

.validate .label:has(+ * .checkbox:valid) > *, 
.validate .label-text:has(+ * .checkbox:valid), 
.validate .label-text:has(~ .checkbox:valid), 
.validate .label:has(~ .checkbox:valid) > *, 

.validate .checkbox:valid ~ .label, 
.validate .checkbox:valid ~ .label-text, 
.validate .checkbox:valid ~ .label .label-text,  
.validate *:has(.checkbox:valid) ~ .label, 
.validate *:has(.checkbox:valid) ~ .label-text, 
.validate *:has(.checkbox:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

/* Invalid text style */

/* Top text */

.validate .label:has(+ * .checkbox:invalid) > *, 
.validate .label-text:has(+ * .checkbox:invalid), 
.validate .label-text:has(~ .checkbox:invalid), 
.validate .label:has(~ .checkbox:invalid) > *, 

.validate .checkbox:invalid ~ .label, 
.validate .checkbox:invalid ~ .label-text, 
.validate .checkbox:invalid ~ .label .label-text,  
.validate *:has(.checkbox:invalid) ~ .label, 
.validate *:has(.checkbox:invalid) ~ .label-text, 
.validate *:has(.checkbox:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

/* Helper text */

/* Valid message display */

.validate *:has(> .checkbox:valid) ~ .success-message,
.validate *:has(> .checkbox:valid) > * > .success-message,

.validate .checkbox:valid ~ .success-message,
.validate .checkbox:valid + * > .success-message {
  display: block;
}

.validate *:has(> .checkbox:invalid) ~ .error-message,
.validate *:has(> .checkbox:invalid) > * > .error-message,

.validate .checkbox:invalid ~ .error-message,
.validate .checkbox:invalid + * > .error-message {
  display: block;
}
.nested-collapse-wrapper .collapse.open.nested-collapse,
.nested-collapse-wrapper .collapse-toggle.open.nested-collapse {

    background-color: var(--fallback-bc,oklch(var(--bc)/0.1))
}

.nested-collapse-wrapper .collapse.open > .collapse-icon,
.nested-collapse-wrapper .collapse-toggle.open > .collapse-icon {

    --tw-rotate: 180deg;

    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.diff-item-1:after {
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-width: 2px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-p,oklch(var(--p)/0.4));
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-style: solid;
  outline-offset: -2px;
  outline-color: var(--fallback-bc,oklch(var(--bc)/0.05));
  --tw-backdrop-blur: blur(8px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  translate: 50% -50%
}
.diff-item-2 {
  border-inline-end-width: 2px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-border-opacity, 1)))
}
[dir="rtl"] .diff-item-2 {
  border-left-width: 2px;
  border-right-width: 0px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-border-opacity, 1)))
}
.divider {

    margin-top: 1rem;

    margin-bottom: 1rem;

    height: 1rem;

    white-space: nowrap
}

.divider::before {

    content: var(--tw-content);

    border-color: var(--fallback-bc,oklch(var(--bc)/0.2))
}

.divider::after {

    content: var(--tw-content);

    border-color: var(--fallback-bc,oklch(var(--bc)/0.2))
}

  .divider:not(:empty) {

    gap: 1rem
}

  .divider-neutral::before {

    content: var(--tw-content);

    --tw-border-opacity: 1;

    border-color: var(--fallback-n,oklch(var(--n)/var(--tw-border-opacity, 1)))
}

  .divider-neutral::after {

    content: var(--tw-content);

    --tw-border-opacity: 1;

    border-color: var(--fallback-n,oklch(var(--n)/var(--tw-border-opacity, 1)))
}

  .divider-primary::before {

    content: var(--tw-content);

    --tw-border-opacity: 1;

    border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)))
}

  .divider-primary::after {

    content: var(--tw-content);

    --tw-border-opacity: 1;

    border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)))
}

  .divider-secondary::before {

    content: var(--tw-content);

    --tw-border-opacity: 1;

    border-color: var(--fallback-s,oklch(var(--s)/var(--tw-border-opacity, 1)))
}

  .divider-secondary::after {

    content: var(--tw-content);

    --tw-border-opacity: 1;

    border-color: var(--fallback-s,oklch(var(--s)/var(--tw-border-opacity, 1)))
}

  .divider-accent::before {

    content: var(--tw-content);

    --tw-border-opacity: 1;

    border-color: var(--fallback-a,oklch(var(--a)/var(--tw-border-opacity, 1)))
}

  .divider-accent::after {

    content: var(--tw-content);

    --tw-border-opacity: 1;

    border-color: var(--fallback-a,oklch(var(--a)/var(--tw-border-opacity, 1)))
}

  .divider-info::before {

    content: var(--tw-content);

    --tw-border-opacity: 1;

    border-color: var(--fallback-in,oklch(var(--in)/var(--tw-border-opacity, 1)))
}

  .divider-info::after {

    content: var(--tw-content);

    --tw-border-opacity: 1;

    border-color: var(--fallback-in,oklch(var(--in)/var(--tw-border-opacity, 1)))
}

  .divider-success::before {

    content: var(--tw-content);

    --tw-border-opacity: 1;

    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)))
}

  .divider-success::after {

    content: var(--tw-content);

    --tw-border-opacity: 1;

    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)))
}

  .divider-warning::before {

    content: var(--tw-content);

    --tw-border-opacity: 1;

    border-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-border-opacity, 1)))
}

  .divider-warning::after {

    content: var(--tw-content);

    --tw-border-opacity: 1;

    border-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-border-opacity, 1)))
}

  .divider-error::before {

    content: var(--tw-content);

    --tw-border-opacity: 1;

    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)))
}

  .divider-error::after {

    content: var(--tw-content);

    --tw-border-opacity: 1;

    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)))
}

  .divider-dotted::before {

    content: var(--tw-content);

    border-style: dotted
}

  .divider-dotted::after {

    content: var(--tw-content);

    border-style: dotted
}

  .divider-dashed::before {

    content: var(--tw-content);

    border-style: dashed
}

  .divider-dashed::after {

    content: var(--tw-content);

    border-style: dashed
}
.drawer {

    --tw-bg-opacity: 1;

    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));

    --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));

    --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);

    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}

  .drawer-header {

    display: flex;

    align-items: center;

    justify-content: space-between;

    padding: 1.5rem
}

  .drawer-title {

    font-weight: 500;

    --tw-text-opacity: 1;

    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)))
}

  .drawer-body {

    overflow-y: auto;

    overflow-x: hidden
}

  .drawer-body::-webkit-scrollbar-thumb {

    background-color: var(--fallback-s,oklch(var(--s)/0.5))
}

  .drawer-body::-webkit-scrollbar-thumb:hover {

    background-color: var(--fallback-s,oklch(var(--s)/0.8))
}

  .drawer-body::-webkit-scrollbar-track {

    --tw-bg-opacity: 1;

    background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)))
}

  .drawer-body::-webkit-scrollbar {

    width: 0.5rem
}
.dropdown-menu > :not([hidden]) ~ :not([hidden]) {

    --tw-space-y-reverse: 0;

    margin-top: calc(0.125rem * calc(1 - var(--tw-space-y-reverse)));

    margin-bottom: calc(0.125rem * var(--tw-space-y-reverse))
}

.dropdown-menu {

    border-radius: var(--rounded-box, 0.5rem);

    --tw-bg-opacity: 1;

    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));

    --tw-shadow: 0 10px 15px -2px var(--fallback-bs,oklch(var(--bs)/0.34));

    --tw-shadow-colored: 0 10px 15px -2px var(--tw-shadow-color);

    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}

.dropdown-item {

    border-radius: var(--rounded-btn, 0.375rem);

    background-color: transparent;

    --tw-text-opacity: 1;

    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));

    text-decoration-line: none;

    text-decoration-thickness: 0px
}

.dropdown-item:hover,
  .dropdown-item:focus,
  .dropdown-item:focus-within,
  .dropdown-item:focus-visible {

    background-color: var(--fallback-n,oklch(var(--n)/0.1));

    outline: 2px solid transparent;

    outline-offset: 2px
}

.dropdown-item.active,
  .dropdown-item:active {

    background-color: var(--fallback-p,oklch(var(--p)/0.1));

    --tw-text-opacity: 1;

    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)))
}

.dropdown-item.disabled,
  .dropdown-item:disabled,
  .dropdown-item[disabled] {

    pointer-events: none;

    background-color: var(--fallback-n,oklch(var(--n)/0.05));

    color: var(--fallback-bc,oklch(var(--bc)/0.5))
}

.dropdown-item > .label {

    padding-top: 0.25rem;

    padding-bottom: 0.25rem;

    font-size: 1rem;

    line-height: 1.375rem;

    color: var(--fallback-bc,oklch(var(--bc)/0.8))
}

.dropdown-item > .label-text {

    --tw-text-opacity: 1;

    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)))
}

.dropdown-header,
.dropdown-footer {

    border-color: var(--fallback-bc,oklch(var(--bc)/0.1));

    color: var(--fallback-bc,oklch(var(--bc)/0.8))
}

.dropdown-title {

    font-size: 0.75rem;

    line-height: 1rem;

    font-weight: 500;

    color: var(--fallback-bc,oklch(var(--bc)/0.5))
}
.footer {
    column-gap: 1rem;
    row-gap: 2.5rem;
    color: var(--fallback-bc,oklch(var(--bc)/0.8))
}
  .footer > * {
    gap: 0.75rem
}
  .footer-title {
    margin-bottom: 0.25rem;
    font-size: 1rem;
    line-height: 1.375rem;
    font-weight: 500;
    --tw-text-opacity: 1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)))
}
.label {

    user-select: none;

    padding: 0.25rem;

    color: var(--fallback-bc,oklch(var(--bc)/0.8))
}

  .label-text-alt {

    font-size: 0.75rem;

    line-height: 1rem
}

  @media(hover:hover) {

    .label a:hover {

        --tw-text-opacity: 1;

        color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)))
    }
}

.label-text {

    display: block;

    cursor: pointer;

    font-size: 0.875rem;

    line-height: 1.25rem;

    --tw-text-opacity: 1;

    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)))
}
input {
    background-color: transparent;
}
  input:focus {
    outline-width: 0px;
    outline-color: transparent;
}
  input:focus-visible {
    outline: unset;
  }

.input {
    border-radius: var(--rounded-btn, 0.375rem);
    border-width: 1px;
    border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
    color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.input::placeholder {
    color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input:hover {
    border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
}

.input {
  transition:
    border-color 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out;
}

.input::file-selector-button {
    border-start-start-radius: var(--rounded-btn, 0.375rem);
    border-end-start-radius: var(--rounded-btn, 0.375rem);
    border-width: 0px;
    background-color: var(--fallback-bc,oklch(var(--bc)/0.2));
    font-weight: 600;
    text-transform: uppercase;
    --tw-text-opacity: 1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
    text-decoration-line: none;
}

.input[type="file"]:disabled {
    background-color: var(--fallback-n,oklch(var(--n)/0.1));
}

.input:focus,
  .input:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
    --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.22));
    --tw-shadow: var(--tw-shadow-colored);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

.input:-webkit-autofill,
  .input:-webkit-autofill:focus {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
    --tw-text-opacity: 1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.input-floating::placeholder {
    color: transparent;
}

.input-floating:focus::placeholder {
    color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input-filled {
    border-bottom-right-radius: 0px;
    border-bottom-left-radius: 0px;
    border-top-left-radius: 0.375rem;
    border-top-right-radius: 0.375rem;
    border-width: 0px;
    border-bottom-width: 1px;
    border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
    background-color: var(--fallback-bc,oklch(var(--bc)/0.05));
}

.input-filled::placeholder {
    color: transparent;
}

.input-filled:hover {
    border-width: 0px;
    border-bottom-width: 1px;
    --tw-border-opacity: 1;
    border-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity, 1)));
}

.input-filled:focus-visible {
    outline-width: 0px;
}

.input-filled:focus,
    .input-filled:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.input-filled:focus::placeholder,
    .input-filled:focus-within::placeholder {
    color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input-filled:focus ~ .input-filled-focused,
    .input-filled:focus-within ~ .input-filled-focused {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.input[list]::-webkit-calendar-picker-indicator {
    line-height: 1em;
  }

.input.disabled,
  .input:disabled,
  .input[disabled] {
    pointer-events: none;
    border-width: 0px;
    border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
    background-color: var(--fallback-n,oklch(var(--n)/0.1));
    color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input::-webkit-date-and-time-value {
    text-align: inherit;
  }

.input.input-floating.disabled,
    .input.input-floating:disabled,
    .input.input-floating[disabled] {
    border-width: 1px;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.input.input-floating.disabled ~ .input-floating-label, .input.input-floating:disabled ~ .input-floating-label, .input.input-floating[disabled] ~ .input-floating-label {
    color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input.input-filled.disabled,
    .input.input-filled:disabled,
    .input.input-filled[disabled] {
    border-bottom-width: 1px;
}

.input.input-filled.disabled ~ .input-filled-label, .input.input-filled:disabled ~ .input-filled-label, .input.input-filled[disabled] ~ .input-filled-label {
    color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input-filled-label,
.input-floating-label {
    pointer-events: none;
    position: absolute;
    inset-inline-start: 0px;
    width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    background-color: transparent;
    padding-left: 0.75rem;
    padding-right: 0.75rem;
    font-size: 1rem;
    line-height: 1.375rem;
    color: var(--fallback-bc,oklch(var(--bc)/0.8));
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
    transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.peer:focus ~ .input-filled-label,.peer:focus ~ 
.input-floating-label {
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.peer.input-lg ~ .input-filled-label,.peer.input-lg ~ 
.input-floating-label {
    font-size: 1.125rem;
    line-height: 1.5rem;
}

.peer.input-sm ~ .input-filled-label,.peer.input-sm ~ 
.input-floating-label {
    font-size: 0.875rem;
    line-height: 1.25rem;
}

.input-filled-label {
    top: 0.8rem;
}

.peer.input-lg ~ .input-filled-label {
    top: 1rem;
}

.peer.input-sm ~ .input-filled-label {
    top: 0.625rem;
}

.peer.input-lg ~ .input-filled-label {
    padding-left: 1rem;
    padding-right: 1rem;
}

.peer.input-sm ~ .input-filled-label {
    padding-left: 0.625rem;
    padding-right: 0.625rem;
}

.peer:focus ~ .input-filled-label,
  .peer:focus-within ~ .input-filled-label,
  .peer:not(:placeholder-shown) ~ .input-filled-label {
    top: 0.125rem;
    margin-inline-start: 0.75rem;
    width: fit-content;
    padding: 0px;
    font-size: 0.75rem;
    line-height: 1rem;
}

.peer.input-lg:focus ~ .input-filled-label,
  .peer.input-lg:focus-within ~ .input-filled-label,
  .peer.input-lg:not(:placeholder-shown) ~ .input-filled-label {
    margin-inline-start: 1rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
}

.input.input-filled.input-sm:focus,
  .input.input-filled.input-sm:not(:placeholder-shown) {
    padding-top: 0.5rem;
}

.input.input-filled:focus,
  .input.input-filled.input-lg:focus,
  .input.input-filled:not(:placeholder-shown),
  .input.input-filled.input-lg:not(:placeholder-shown) {
    padding-top: 0.75rem;
}

.input-floating-label {
    top: 0.5rem;
}

.peer.input-lg ~ .input-floating-label {
    top: 0.7rem;
}

.peer.input-sm ~ .input-floating-label {
    top: 0.3rem;
}

.peer.input-lg ~ .input-floating-label {
    padding-left: 1rem;
    padding-right: 1rem;
}

.peer.input-sm ~ .input-floating-label {
    padding-left: 0.625rem;
    padding-right: 0.625rem;
}

.peer:focus ~ .input-floating-label,
  .peer:focus-within ~ .input-floating-label,
  .peer:not(:placeholder-shown) ~ .input-floating-label {
    top: 0px;
    margin-inline-start: 0.5rem;
    width: fit-content;
    --tw-translate-y: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
    padding-left: 0.25rem;
    padding-right: 0.25rem;
    font-size: 0.75rem;
    line-height: 1rem;
}

.peer.input-lg:focus ~ .input-floating-label,
  .peer.input-lg:focus-within ~ .input-floating-label,
  .peer.input-lg:not(:placeholder-shown) ~ .input-floating-label {
    margin-inline-start: 0.75rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
}

/* Input group */

.input-group {
    position: relative;
    display: flex;
    width: 100%;
    align-items: stretch;
    border-radius: var(--rounded-btn, 0.375rem);
    border-width: 1px;
    border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.input-group:has(:hover) {
    border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
}

.input-group:has(:focus),
  .input-group:has(:focus-within) {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
    --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.22));
    --tw-shadow: var(--tw-shadow-colored);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

.input-group:has(input.disabled),
  .input-group:has(input:disabled),
  .input-group:has(input[disabled]) {
    pointer-events: none;
    border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
    background-color: var(--fallback-n,oklch(var(--n)/0.1));
    color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input-group .input {
    border-width: 0px;
    background-color: transparent;
}

.input-group .input:focus,
    .input-group .input:focus-within {
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.input-group .input.disabled,
    .input-group .input:disabled,
    .input-group .input[disabled] {
    background-color: transparent;
}

.input-group-filled {
    position: relative;
    display: flex;
    width: 100%;
    align-items: stretch;
    border-top-left-radius: 0.375rem;
    border-top-right-radius: 0.375rem;
    border-width: 0px;
    border-bottom-width: 1px;
    border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
    background-color: var(--fallback-bc,oklch(var(--bc)/0.05));
}

.input-group-filled:has(:hover) {
    border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
}

.input-group-filled:focus ~ .input-filled-focused,
  .input-group-filled:focus-within ~ .input-filled-focused {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.input-group-filled .input {
    border-width: 0px;
    background-color: transparent;
}

.input-group-filled .input.disabled,
    .input-group-filled .input:disabled,
    .input-group-filled .input[disabled] {
    background-color: transparent;
}

/* input group text */

.input-group-text {
    display: flex;
    align-items: center;
    padding-left: 0.75rem;
    padding-right: 0.75rem;
    font-weight: 400;
    --tw-text-opacity: 1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  transition:
    border-color 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out;
}

.input-group-text:first-child {
    border-start-start-radius: var(--rounded-btn, 0.375rem);
    border-end-start-radius: var(--rounded-btn, 0.375rem);
    padding-inline-end: 0px;
}

.input-group-text:last-child {
    border-start-end-radius: var(--rounded-btn, 0.375rem);
    border-end-end-radius: var(--rounded-btn, 0.375rem);
    padding-inline-start: 0px;
}

/* File input */

.input[type="file"].input-floating::file-selector-button {
    border-inline-end-width: 1px;
    border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

/* State  */

.input.is-valid,
.validate .input:valid {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}

.input.is-valid:focus,
  .input.is-valid:focus-within,
  .validate .input:valid:focus,
  .validate .input:valid:focus-within {
    --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22));
    --tw-shadow: var(--tw-shadow-colored);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}

.input.is-valid.input-filled:focus,
  .input.is-valid.input-filled:focus-within,
  .validate .input:valid.input-filled:focus,
  .validate .input:valid.input-filled:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.input.is-valid ~ .input-floating-label,
  .input.is-valid ~ .input-filled-label,
  .validate .input:valid ~ .input-floating-label,
  .validate .input:valid ~ .input-filled-label {
    --tw-text-opacity: 1;
    color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.input.is-valid:focus ~ .input-filled-focused,
  .input.is-valid:focus-within ~ .input-filled-focused,
  .validate .input:valid:focus ~ .input-filled-focused,
  .validate .input:valid:focus-within ~ .input-filled-focused {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
}

/* Top text */

.label:has(+ * .is-valid) > *, 
.label-text:has(+ * .is-valid), 
.label-text:has(~ .is-valid), 
.label:has(~ .is-valid) > *, 


.is-valid ~ .label, 
.is-valid ~ .label-text, 
.is-valid ~ .label .label-text,  
*:has(.is-valid) ~ .label, 
*:has(.is-valid) ~ .label-text, 
*:has(.is-valid) ~ .label .label-text, 



.validate .label:has(+ * .input:valid) > *, 
.validate .label-text:has(+ * .input:valid), 
.validate .label-text:has(~ .input:valid), 
.validate .label:has(~ .input:valid) > *, 


.validate .input:valid ~ .label, 
.validate .input:valid ~ .label.label-text, 
.validate .input:valid ~ .label .label-text,  
.validate *:has(.input:valid) ~ .label, 
.validate *:has(.input:valid) ~ .label-text, 
.validate *:has(.input:valid) ~ .label .label-text {
    --tw-text-opacity: 1;
    color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.input:focus.is-valid ~ .input-floating-label,
.input:focus.is-valid ~ .input-filled-label {
    --tw-text-opacity: 1;
    color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.input.is-invalid,
.validate .input:invalid {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}

.input.is-invalid:focus,
  .input.is-invalid:focus-within,
  .validate .input:invalid:focus,
  .validate .input:invalid:focus-within {
    --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22));
    --tw-shadow: var(--tw-shadow-colored);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1)));
}

.input.is-invalid.input-filled:focus,
  .input.is-invalid.input-filled:focus-within,
  .validate .input:invalid.input-filled:focus,
  .validate .input:invalid.input-filled:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.input.is-invalid ~ .input-floating-label,
  .input.is-invalid ~ .input-filled-label,
  .validate .input:invalid ~ .input-floating-label,
  .validate .input:invalid ~ .input-filled-label {
    --tw-text-opacity: 1;
    color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.input.is-invalid:focus ~ .input-filled-focused,
  .input.is-invalid:focus-within ~ .input-filled-focused,
  .validate .input:invalid:focus ~ .input-filled-focused,
  .validate .input:invalid:focus-within ~ .input-filled-focused {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
}

/* Top text */

.label:has(+ * .is-invalid) > *, 
.label-text:has(+ * .is-invalid), 
.label-text:has(~ .is-invalid), 
.label:has(~ .is-invalid) > *, 


.is-invalid ~ .label, 
.is-invalid ~ .label-text, 
.is-invalid ~ .label .label-text,  
*:has(.is-invalid) ~ .label, 
*:has(.is-invalid) ~ .label-text, 
*:has(.is-invalid) ~ .label .label-text, 



.validate .label:has(+ * .input:invalid) > *, 
.validate .label-text:has(+ * .input:invalid), 
.validate .label-text:has(~ .input:invalid), 
.validate .label:has(~ .input:invalid) > *, 


.validate .input:invalid ~ .label, 
.validate .input:invalid ~ .label.label-text, 
.validate .input:invalid ~ .label .label-text,  
.validate *:has(.input:invalid) ~ .label, 
.validate *:has(.input:invalid) ~ .label-text, 
.validate *:has(.input:invalid) ~ .label .label-text {
    --tw-text-opacity: 1;
    color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.input:focus.is-invalid ~ .input-floating-label,
.input:focus.is-invalid ~ .input-filled-label {
    --tw-text-opacity: 1;
    color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

/* State text */

.success-message {
    display: none;
    font-size: 0.875rem;
    line-height: 1.25rem;
    --tw-text-opacity: 1;
    color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

/* .valid is a child class and when .message is parent. */

.validate *:has(> .input:valid) ~ .success-message,
.validate *:has(> .input:valid)  > * > .success-message,

.validate .input:valid ~ .success-message,
.validate .input:valid  + * > .success-message {
    display: block;
}

.error-message {
    display: none;
    font-size: 0.875rem;
    line-height: 1.25rem;
    --tw-text-opacity: 1;
    color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.validate *:has(> .input:invalid) ~ .error-message,
.validate *:has(> .input:invalid) > * > .error-message,

.validate .input:invalid ~ .error-message,
.validate .input:invalid + * > .error-message {
    display: block;
}

/* Input group State */

.validate .input-group > .input:valid,
.input-group > .input:valid,
.validate .input-group > .input:invalid,
.input-group > .input:invalid,
.validate .input-group > * > .input:valid,
.input-group > * > .input:valid,
.validate .input-group > * > .input:invalid,
.input-group > * > .input:invalid,
.input-group > .input.is-valid,
.input-group > .input.is-invalid,
.input-group > * > .input.is-valid,
.input-group > * > .input.is-invalid {
    border-width: 0px;
}

.validate .input-group > .input:valid:focus-within,
.input-group > .input:valid:focus-within,
.validate .input-group > .input:invalid:focus-within,
.input-group > .input:invalid:focus-within,
.validate .input-group > * > .input:valid:focus-within,
.input-group > * > .input:valid:focus-within,
.validate .input-group > * > .input:invalid:focus-within,
.input-group > * > .input:invalid:focus-within,
.input-group > .input.is-valid:focus-within,
.input-group > .input.is-invalid:focus-within,
.input-group > * > .input.is-valid:focus-within,
.input-group > * > .input.is-invalid:focus-within {
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.validate .input-group > .input:valid:focus,
.input-group > .input:valid:focus,
.validate .input-group > .input:invalid:focus,
.input-group > .input:invalid:focus,
.validate .input-group > * > .input:valid:focus,
.input-group > * > .input:valid:focus,
.validate .input-group > * > .input:invalid:focus,
.input-group > * > .input:invalid:focus,
.input-group > .input.is-valid:focus,
.input-group > .input.is-invalid:focus,
.input-group > * > .input.is-valid:focus,
.input-group > * > .input.is-invalid:focus {
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.input-group:has(.is-valid),
  .validate .input-group:has(.input:valid) {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}

.input-group:has(.is-valid):has(:focus),
    .input-group:has(.is-valid):has(:focus-within),
    .validate .input-group:has(.input:valid):has(:focus),
    .validate .input-group:has(.input:valid):has(:focus-within) {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
    --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22));
    --tw-shadow: var(--tw-shadow-colored);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}

.input-group:has(.is-invalid),
  .validate .input-group:has(.input:invalid) {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}

.input-group:has(.is-invalid):has(:focus),
    .input-group:has(.is-invalid):has(:focus-within),
    .validate .input-group:has(.input:invalid):has(:focus),
    .validate .input-group:has(.input:invalid):has(:focus-within) {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
    --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22));
    --tw-shadow: var(--tw-shadow-colored);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1)));
}

.input-group-filled:has(.is-valid),
  .validate .input-group-filled:has(.input:valid) {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}

.input-group-filled:has(.is-valid):focus ~ .input-filled-focused,
    .input-group-filled:has(.is-valid):focus-within ~ .input-filled-focused,
    .validate .input-group-filled:has(.input:valid):focus ~ .input-filled-focused,
    .validate .input-group-filled:has(.input:valid):focus-within ~ .input-filled-focused {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
}

.input-group-filled:has(.is-invalid),
  .validate .input-group-filled:has(.input:invalid) {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}

.input-group-filled:has(.is-invalid):focus ~ .input-filled-focused,
    .input-group-filled:has(.is-invalid):focus-within ~ .input-filled-focused,
    .validate .input-group-filled:has(.input:invalid):focus ~ .input-filled-focused,
    .validate .input-group-filled:has(.input:invalid):focus-within ~ .input-filled-focused {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
}
.join {
    border-radius: var(--rounded-btn, 0.375rem)
}
  .join .btn {
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}
  .join > :where(*:not(:first-child)) {
    margin-top: 0px;
    margin-bottom: 0px;
    margin-inline-start: -1px
}
  .join > :where(*:not(:first-child)):is(.btn) {
    margin-inline-start: calc(var(--border-btn) * -1)
}
  .join-item:focus {
    isolation: isolate
}
.kbd {
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
  background-color: var(--fallback-b2,oklch(var(--b2)/0.2));
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  border-bottom-width: 2px;
  min-height: 2.2em;
  min-width: 2.2em
}
.link-primary {
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}
@supports(color:color-mix(in oklab,black,black)) {
    @media(hover:hover) {
        .link-primary:hover {
            color: color-mix(in oklab,var(--fallback-p,oklch(var(--p)/1)) 80%,black);
        }
    }
}
  .link-secondary {
    --tw-text-opacity: 1;
    color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity, 1)));
}
  @supports(color:color-mix(in oklab,black,black)) {
    @media(hover:hover) {
        .link-secondary:hover {
            color: color-mix(in oklab,var(--fallback-s,oklch(var(--s)/1)) 80%,black);
        }
    }
}
  .link-accent {
    --tw-text-opacity: 1;
    color: var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity, 1)));
}
  @supports(color:color-mix(in oklab,black,black)) {
    @media(hover:hover) {
        .link-accent:hover {
            color: color-mix(in oklab,var(--fallback-a,oklch(var(--a)/1)) 80%,black);
        }
    }
}
  .link-neutral {
    --tw-text-opacity: 1;
    color: var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity, 1)));
}
  @supports(color:color-mix(in oklab,black,black)) {
    @media(hover:hover) {
        .link-neutral:hover {
            color: color-mix(in oklab,var(--fallback-n,oklch(var(--n)/1)) 80%,black);
        }
    }
}
  .link-success {
    --tw-text-opacity: 1;
    color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}
  @supports(color:color-mix(in oklab,black,black)) {
    @media(hover:hover) {
        .link-success:hover {
            color: color-mix(in oklab,var(--fallback-su,oklch(var(--su)/1)) 80%,black);
        }
    }
}
  .link-info {
    --tw-text-opacity: 1;
    color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity, 1)));
}
  @supports(color:color-mix(in oklab,black,black)) {
    @media(hover:hover) {
        .link-info:hover {
            color: color-mix(in oklab,var(--fallback-in,oklch(var(--in)/1)) 80%,black);
        }
    }
}
  .link-warning {
    --tw-text-opacity: 1;
    color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity, 1)));
}
  @supports(color:color-mix(in oklab,black,black)) {
    @media(hover:hover) {
        .link-warning:hover {
            color: color-mix(in oklab,var(--fallback-wa,oklch(var(--wa)/1)) 80%,black);
        }
    }
}
  .link-error {
    --tw-text-opacity: 1;
    color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}
  @supports(color:color-mix(in oklab,black,black)) {
    @media(hover:hover) {
        .link-error:hover {
            color: color-mix(in oklab,var(--fallback-er,oklch(var(--er)/1)) 80%,black);
        }
    }
}
  .link:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
}
  .link:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px;
  }
  .link.disabled,
  .link[disabled],
  .link:disabled {
    pointer-events: none;
    opacity: 0.4;
}
.loading {
  pointer-events: none;
  display: inline-block;
  aspect-ratio: 1 / 1;
  width: 1.5rem;
  background-color: currentColor;
  mask-size: 100%;
  mask-repeat: no-repeat;
  mask-position: center;
  mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
}
.loading-spinner {
  mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
}
.loading-dots {
  mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_qM83%7Banimation:spinner_8HQG 1.05s infinite%7D.spinner_oXPr%7Banimation-delay:.1s%7D.spinner_ZTLf%7Banimation-delay:.2s%7D@keyframes spinner_8HQG%7B0%25,57.14%25%7Banimation-timing-function:cubic-bezier(0.33,.66,.66,1);transform:translate(0)%7D28.57%25%7Banimation-timing-function:cubic-bezier(0.33,0,.66,.33);transform:translateY(-6px)%7D100%25%7Btransform:translate(0)%7D%7D%3C/style%3E%3Ccircle class='spinner_qM83' cx='4' cy='12' r='3'/%3E%3Ccircle class='spinner_qM83 spinner_oXPr' cx='12' cy='12' r='3'/%3E%3Ccircle class='spinner_qM83 spinner_ZTLf' cx='20' cy='12' r='3'/%3E%3C/svg%3E");
}
.loading-ring {
  mask-image: url("data:image/svg+xml,%3Csvg width='44' height='44' viewBox='0 0 44 44' xmlns='http://www.w3.org/2000/svg' stroke='%23fff'%3E%3Cg fill='none' fill-rule='evenodd' stroke-width='2'%3E%3Ccircle cx='22' cy='22' r='1'%3E%3Canimate attributeName='r' begin='0s' dur='1.8s' values='1; 20' calcMode='spline' keyTimes='0; 1' keySplines='0.165, 0.84, 0.44, 1' repeatCount='indefinite' /%3E%3Canimate attributeName='stroke-opacity' begin='0s' dur='1.8s' values='1; 0' calcMode='spline' keyTimes='0; 1' keySplines='0.3, 0.61, 0.355, 1' repeatCount='indefinite' /%3E%3C/circle%3E%3Ccircle cx='22' cy='22' r='1'%3E%3Canimate attributeName='r' begin='-0.9s' dur='1.8s' values='1; 20' calcMode='spline' keyTimes='0; 1' keySplines='0.165, 0.84, 0.44, 1' repeatCount='indefinite' /%3E%3Canimate attributeName='stroke-opacity' begin='-0.9s' dur='1.8s' values='1; 0' calcMode='spline' keyTimes='0; 1' keySplines='0.3, 0.61, 0.355, 1' repeatCount='indefinite' /%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
}
.loading-ball {
  mask-image: url("data:image/svg+xml,%0A%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_rXNP%7Banimation:spinner_YeBj .8s infinite%7D@keyframes spinner_YeBj%7B0%25%7Banimation-timing-function:cubic-bezier(0.33,0,.66,.33);cy:5px%7D46.875%25%7Bcy:20px;rx:4px;ry:4px%7D50%25%7Banimation-timing-function:cubic-bezier(0.33,.66,.66,1);cy:20.5px;rx:4.8px;ry:3px%7D53.125%25%7Brx:4px;ry:4px%7D100%25%7Bcy:5px%7D%7D%3C/style%3E%3Cellipse class='spinner_rXNP' cx='12' cy='5' rx='4' ry='4'/%3E%3C/svg%3E");
}
.loading-bars {
  mask-image: url("data:image/svg+xml,%0A%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_hzlK%7Banimation:spinner_vc4H .8s linear infinite;animation-delay:-.8s%7D.spinner_koGT%7Banimation-delay:-.65s%7D.spinner_YF1u%7Banimation-delay:-.5s%7D@keyframes spinner_vc4H%7B0%25%7By:1px;height:22px%7D93.75%25%7By:5px;height:14px;opacity:.2%7D%7D%3C/style%3E%3Crect class='spinner_hzlK' x='1' y='1' width='6' height='22'/%3E%3Crect class='spinner_hzlK spinner_koGT' x='9' y='1' width='6' height='22'/%3E%3Crect class='spinner_hzlK spinner_YF1u' x='17' y='1' width='6' height='22'/%3E%3C/svg%3E");
}
.loading-infinity {
  mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' style='shape-rendering: auto;' width='200px' height='200px' viewBox='0 0 100 100' preserveAspectRatio='xMidYMid'%3E%3Cpath fill='none' stroke='%230a0a0a' stroke-width='10' stroke-dasharray='205.271142578125 51.317785644531256' d='M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40 C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z' stroke-linecap='round' style='transform:scale(0.8);transform-origin:50px 50px'%3E%3Canimate attributeName='stroke-dashoffset' repeatCount='indefinite' dur='2s' keyTimes='0;1' values='0;256.58892822265625'%3E%3C/animate%3E%3C/path%3E%3C/svg%3E");
}
.loading-xs {
  width: 1rem;
}
.loading-sm {
  width: 1.25rem;
}
.loading-lg {
  width: 2.5rem;
}
.mask-squircle {
    mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 0C20 0 0 20 0 100s20 100 100 100 100-20 100-100S180 0 100 0Z'/%3e%3c/svg%3e");
  }
  .mask-decagon {
    mask-image: url("data:image/svg+xml,%3csvg width='192' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 0 58.779 19.098 36.327 50v61.804l-36.327 50L96 200l-58.779-19.098-36.327-50V69.098l36.327-50z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-diamond {
    mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m100 0 100 100-100 100L0 100z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-heart {
    mask-image: url("data:image/svg+xml,%3csvg width='200' height='185' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 184.606a15.384 15.384 0 0 1-8.653-2.678C53.565 156.28 37.205 138.695 28.182 127.7 8.952 104.264-.254 80.202.005 54.146.308 24.287 24.264 0 53.406 0c21.192 0 35.869 11.937 44.416 21.879a2.884 2.884 0 0 0 4.356 0C110.725 11.927 125.402 0 146.594 0c29.142 0 53.098 24.287 53.4 54.151.26 26.061-8.956 50.122-28.176 73.554-9.023 10.994-25.383 28.58-63.165 54.228a15.384 15.384 0 0 1-8.653 2.673Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
  }
  .mask-hexagon {
    mask-image: url("data:image/svg+xml,%3csvg width='182' height='201' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M.3 65.486c0-9.196 6.687-20.063 14.211-25.078l61.86-35.946c8.36-5.016 20.899-5.016 29.258 0l61.86 35.946c8.36 5.015 14.211 15.882 14.211 25.078v71.055c0 9.196-6.687 20.063-14.211 25.079l-61.86 35.945c-8.36 4.18-20.899 4.18-29.258 0L14.51 161.62C6.151 157.44.3 145.737.3 136.54V65.486Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
  }
  .mask-hexagon-2 {
    mask-image: url("data:image/svg+xml,%3csvg width='200' height='182' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M64.786 181.4c-9.196 0-20.063-6.687-25.079-14.21L3.762 105.33c-5.016-8.36-5.016-20.9 0-29.259l35.945-61.86C44.723 5.851 55.59 0 64.786 0h71.055c9.196 0 20.063 6.688 25.079 14.211l35.945 61.86c4.18 8.36 4.18 20.899 0 29.258l-35.945 61.86c-4.18 8.36-15.883 14.211-25.079 14.211H64.786Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
  }
  .mask-circle {
    mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle fill='black' cx='100' cy='100' r='100' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-parallelogram {
    mask-image: url("data:image/svg+xml,%3csvg width='200' height='154' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M46.154 0H200l-46.154 153.846H0z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-parallelogram-2 {
    mask-image: url("data:image/svg+xml,%3csvg width='200' height='154' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M153.846 0H0l46.154 153.846H200z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-parallelogram-3 {
    mask-image: url("data:image/svg+xml,%3csvg width='154' height='201' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M.077 47.077v153.846l153.846-46.154V.923z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-parallelogram-4 {
    mask-image: url("data:image/svg+xml,%3csvg width='154' height='201' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M153.923 47.077v153.846L.077 154.77V.923z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-pentagon {
    mask-image: url("data:image/svg+xml,%3csvg width='192' height='181' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 0 95.106 69.098-36.327 111.804H37.22L.894 69.098z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-square {
    mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M0 0h200v200H0z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-star {
    mask-image: url("data:image/svg+xml,%3csvg width='192' height='180' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 137.263-58.779 42.024 22.163-68.389L.894 68.481l72.476-.243L96 0l22.63 68.238 72.476.243-58.49 42.417 22.163 68.389z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-star-2 {
    mask-image: url("data:image/svg+xml,%3csvg width='192' height='180' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 153.044-58.779 26.243 7.02-63.513L.894 68.481l63.117-13.01L96 0l31.989 55.472 63.117 13.01-43.347 47.292 7.02 63.513z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-triangle {
    mask-image: url("data:image/svg+xml,%3csvg width='174' height='149' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m87 148.476-86.603.185L43.86 74.423 87 0l43.14 74.423 43.463 74.238z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-triangle-2 {
    mask-image: url("data:image/svg+xml,%3csvg width='174' height='150' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m87 .738 86.603-.184-43.463 74.238L87 149.214 43.86 74.792.397.554z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-triangle-3 {
    mask-image: url("data:image/svg+xml,%3csvg width='150' height='174' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m149.369 87.107.185 86.603-74.239-43.463L.893 87.107l74.422-43.14L149.554.505z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
  .mask-triangle-4 {
    mask-image: url("data:image/svg+xml,%3csvg width='150' height='174' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M.631 87.107.446.505l74.239 43.462 74.422 43.14-74.422 43.14L.446 173.71z' fill-rule='evenodd'/%3e%3c/svg%3e");
  }
.menu {
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  padding: 0.5rem
}
:where(.menu li:empty) {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity, 1)));
  opacity: 0.1;
  margin: 0.5rem 1rem;
  height: 1px
}
.menu :where(li:not(.dropdown) ul) {
  margin-inline-start: 1rem;
  padding-inline-start: 0.5rem
}
.menu :where(li:not(.dropdown) ul):before {
  position: absolute;
  bottom: 0.6rem;
  inset-inline-start: 0px;
  top: 0.75rem;
  width: 1px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity, 1)));
  opacity: 0.1;
  content: ""
}
.menu :where(li:not(.menu-title, .tooltip) > *:not(ul, .collapse, .menu-title, .btn)) {
  border-radius: var(--rounded-btn, 0.375rem);
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  text-align: start;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  text-wrap: balance
}
.menu li.tooltip > * {
  border-radius: var(--rounded-btn, 0.375rem);
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  text-align: start
}
:where(.menu li:not(.menu-title, .disabled, [disabled], :disabled)) {
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)))
}
:where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn).focus, :where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn):focus, :where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn):focus-visible {
  cursor: pointer;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  outline: 2px solid transparent;
  outline-offset: 2px
}
@media (hover: hover) {
    :where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn, .disabled, :disabled, [disabled]):hover {
    cursor: pointer;
    outline: 2px solid transparent;
    outline-offset: 2px
  }
      @supports (color: oklch(0 0 0)) {
    :where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn, .disabled, :disabled, [disabled]):hover {
      background-color: var(--fallback-n,oklch(var(--n)/0.1))
    }
      }
  }
.menu li:not(.disabled, :disabled, [disabled]) > :not(ul, .menu-title, .collapse, .btn):active,
.menu li:not(.disabled, :disabled, [disabled]) > :not(ul, .menu-title, .collapse, .btn).active {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)))
}
@media(hover:hover) {
  .menu li:not(.disabled, :disabled, [disabled]) > :not(ul, .menu-title, .collapse, .btn):active,
.menu li:not(.disabled, :disabled, [disabled]) > :not(ul, .menu-title, .collapse, .btn).active {
    background-color: var(--fallback-p,oklch(var(--p)/0.1));
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)))
  }
}
.menu li.disabled,
.menu li:disabled,
.menu li[disabled] {
  pointer-events: none;
  user-select: none;
  opacity: 0.5
}
.menu-title {
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 500;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)))
}
.mockup-code {
    min-width: 18rem;
    border-radius: var(--rounded-box, 0.5rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
    padding-top: 1.25rem;
    padding-bottom: 1.25rem;
    color: var(--fallback-bc,oklch(var(--bc)/0.8));
    direction: ltr;
}
    .mockup-code:before {
      content: "";
      margin-bottom: 1rem;
      display: block;
      height: 0.75rem;
      width: 0.75rem;
      border-radius: 9999px;
      opacity: 0.3;
      box-shadow:
        1.4em 0,
        2.8em 0,
        4.2em 0;
    }
    .mockup-code pre {
    padding-inline-end: 1.25rem;
}
    .mockup-code pre:before {
        content: "";
        margin-right: 2ch;
      }
    .mockup-code pre[data-prefix]:before {
        content: attr(data-prefix);
        width: 2rem;
        opacity: 0.5;
      }
  .mockup-window {
    display: flex;
    width: 100%;
    flex-direction: column;
    border-radius: var(--rounded-box, 0.5rem);
    padding-top: 1.25rem;
}
  .mockup-window:before {
      content: "";
      margin-bottom: 1rem;
      display: block;
      aspect-ratio: 1 / 1;
      height: 0.75rem;
      flex-shrink: 0;
      align-self: flex-start;
      border-radius: 9999px;
      opacity: 0.3;
    }
  .mockup-window:where([dir="rtl"], [dir="rtl"] *):before {
    align-self: flex-end;
}
  .mockup-window:before {
      box-shadow:
        1.4em 0,
        2.8em 0,
        4.2em 0;
    }
  .mockup-phone {
    display: inline-block;
    border: 4px solid #4e4d4d;
    border-radius: 50px;
    background-color: #000;
    padding: 6px;
    margin: 0 auto;
    overflow: hidden;
  }
  .mockup-phone .camera {
    border-radius: 9999px;
      position: relative;
      top: 1%;
      left: 0px;
      background: #000;
      height: 25px;
      width: 33%;
      margin: 0 auto;
      z-index: 11;
}
  .mockup-phone .camera:after {
        content: "";
        position: absolute;
        top: 25%;
        right: 8%;
        width: 12px;
        height: 12px;
        border-radius: 5px;
        background-color: #2a292d;
      }
  .mockup-phone .display {
      overflow: hidden;
      border-radius: 40px;
      margin-top: -25px;
    }
  .mockup-browser {
    width: 100%;
    border-radius: var(--rounded-box, 0.5rem);
}
  .mockup-browser .mockup-browser-toolbar {
    margin-top: 0.75rem;
    margin-bottom: 0.75rem;
    display: inline-flex;
    width: 100%;
    align-items: center;
    padding-inline-end: 1.4em;
      direction: ltr;
}
  .mockup-browser .mockup-browser-toolbar:before {
        content: "";
        margin-inline-end: 4.8rem;
        display: inline-block;
        aspect-ratio: 1 / 1;
        height: 0.75rem;
        border-radius: 9999px;
        opacity: 0.3;
        box-shadow:
          1.4em 0,
          2.8em 0,
          4.2em 0;
      }
  .mockup-browser .mockup-browser-toolbar .input {
    position: relative;
    margin-left: auto;
    margin-right: auto;
    display: block;
    height: 1.75rem;
    width: 24rem;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    padding-inline-start: 2rem;
    padding-top: 0.125rem;
}
  .mockup-browser .mockup-browser-toolbar .input:before {
          content: "";
          position: absolute;
          inset-inline-start: 0.5rem;
          top: 50%;
          aspect-ratio: 1 / 1;
          height: 0.75rem;
          --tw-translate-y: -50%;
          transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
          border-radius: 9999px;
          border-width: 2px;
          border-color: currentColor;
          opacity: 0.6;
        }
  .mockup-browser .mockup-browser-toolbar .input:after {
          content: "";
          position: absolute;
          inset-inline-start: 1.25rem;
          top: 50%;
          height: 0.5rem;
          --tw-translate-y: 25%;
          --tw-rotate: -45deg;
          transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
          border-radius: 9999px;
          border-width: 1px;
          border-color: currentColor;
          opacity: 0.6;
        }
.modal {
  opacity: 0;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}.open.modal {
  transition-duration: 500ms;
}.open .modal {
  transition-duration: 500ms;
}.modal::-webkit-scrollbar-thumb {
  background-color: var(--fallback-s,oklch(var(--s)/0.5));
}.modal::-webkit-scrollbar-thumb:hover {
  background-color: var(--fallback-s,oklch(var(--s)/0.8));
}.modal::-webkit-scrollbar-track {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
}.modal::-webkit-scrollbar {
  width: 0.5rem;
}
.modal-dialog {
  opacity: 0;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.open.modal-dialog {
  transition-duration: 500ms;
}
.open .modal-dialog {
  transition-duration: 500ms;
}
.modal-content {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 20px 25px -6px var(--fallback-bs,oklch(var(--bs)/0.38));
  --tw-shadow-colored: 0 20px 25px -6px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  overscroll-behavior: contain;
}
.modal-body {
  overflow-y: auto;
  overflow-x: hidden;
  padding: 1.5rem;
}
.modal-body::-webkit-scrollbar-thumb {
  border-radius: 9999px;
  background-color: var(--fallback-s,oklch(var(--s)/0.5));
}
.modal-body::-webkit-scrollbar-thumb:hover {
  background-color: var(--fallback-s,oklch(var(--s)/0.8));
}
.modal-body::-webkit-scrollbar-track {
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
}
.modal-body::-webkit-scrollbar {
  width: 0.5rem;
}
.modal-footer {
  padding: 1.5rem;
}
:where(.modal-header) + .modal-body {
  padding-top: 0;
}
:where(.modal-body) + .modal-footer {
  padding-top: 0;
}
.navbar {
  padding: var(--navbar-padding, 0.75rem 1.5rem);
  width: 100%;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}
.pin-input {
  border-radius:
    var(--rounded-btn, 0.375rem);
  border-width:
    1px;
  border-color:
    var(--fallback-bc,oklch(var(--bc)/0.25));
  --tw-bg-opacity:
    1;
  background-color:
    var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}.pin-input::placeholder {
  color:
    var(--fallback-bc,oklch(var(--bc)/0.8));
}.pin-input:hover {
  border-color:
    var(--fallback-bc,oklch(var(--bc)/0.6));
}.pin-input {
  transition:
    border-color 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out;
}

  .pin-input:focus,
  .pin-input:focus-within {
  --tw-border-opacity:
    1;
  border-color:
    var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-shadow:
    0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
  --tw-shadow-colored:
    0 4px 6px -1px var(--tw-shadow-color);
  box-shadow:
    var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  --tw-shadow-color:
    var(--fallback-p,oklch(var(--p)/0.2));
  --tw-shadow:
    var(--tw-shadow-colored);
  --tw-ring-offset-shadow:
    var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow:
    var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow:
    var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity:
    1;
  --tw-ring-color:
    var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

  .pin-input-underline {
  border-radius:
    0px;
  border-width:
    0px;
  border-bottom-width:
    1px;
  border-color:
    var(--fallback-bc,oklch(var(--bc)/0.4));
  background-color:
    transparent;
}

  .pin-input-underline:focus,
    .pin-input-underline:focus-within {
  border-bottom-width:
    2px;
  --tw-border-opacity:
    1;
  border-color:
    var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-shadow:
    0 0 #0000;
  --tw-shadow-colored:
    0 0 #0000;
  box-shadow:
    var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  --tw-ring-offset-shadow:
    var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow:
    var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow:
    var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

  .pin-input.disabled,
  .pin-input:disabled,
  .pin-input[disabled] {
  pointer-events:
    none;
  border-color:
    var(--fallback-bc,oklch(var(--bc)/0.25));
  background-color:
    var(--fallback-bc,oklch(var(--bc)/0.05));
  color:
    var(--fallback-bc,oklch(var(--bc)/0.5));
}

  .pin-input.disabled::placeholder,
  .pin-input:disabled::placeholder,
  .pin-input[disabled]::placeholder {
  color:
    var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-placeholder-opacity:
    0.2;
}
.progress {
  --progress-color: var(--fallback-n,oklch(var(--n)/1));
  height: 0.375rem;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
}

  .progress-label {
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
}

  .progress-striped {
    background-image: linear-gradient(
      45deg,
      rgba(255, 255, 255, 0.15) 25%,
      transparent 25%,
      transparent 50%,
      rgba(255, 255, 255, 0.15) 50%,
      rgba(255, 255, 255, 0.15) 75%,
      transparent 75%,
      transparent
    );
    background-size: 0.75rem 0.75rem;
  }

  .progress-animated {
    animation: progress-bar-stripes 1s linear infinite;
  }

  .progress-bar {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-b1,oklch(var(--b1)/var(--tw-text-opacity, 1)));
}

  .progress-neutral {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity, 1)));
}

  .progress-primary {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)));
    --progress-color: var(--fallback-p,oklch(var(--p)/1));
}

  .progress-secondary {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-s,oklch(var(--s)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-sc,oklch(var(--sc)/var(--tw-text-opacity, 1)));
    --progress-color: var(--fallback-s,oklch(var(--s)/1));
}

  .progress-accent {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-a,oklch(var(--a)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-ac,oklch(var(--ac)/var(--tw-text-opacity, 1)));
    --progress-color: var(--fallback-a,oklch(var(--a)/1));
}

  .progress-info {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-in,oklch(var(--in)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-inc,oklch(var(--inc)/var(--tw-text-opacity, 1)));
    --progress-color: var(--fallback-in,oklch(var(--in)/1));
}

  .progress-success {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-suc,oklch(var(--suc)/var(--tw-text-opacity, 1)));
    --progress-color: var(--fallback-su,oklch(var(--su)/1));
}

  .progress-warning {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-wac,oklch(var(--wac)/var(--tw-text-opacity, 1)));
    --progress-color: var(--fallback-wa,oklch(var(--wa)/1));
}

  .progress-error {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-erc,oklch(var(--erc)/var(--tw-text-opacity, 1)));
    --progress-color: var(--fallback-er,oklch(var(--er)/1));
}
/* progress indeterminate */
.progress-indeterminate {
  width: 100%;
  background: linear-gradient(90deg, rgba(0, 0, 0, 0) 50%, var(--progress-color) 50%);
  background-size: 50% 100%;
  background-repeat: no-repeat;
  animation: indeterminate-progress 4s infinite ease-in-out;
}
@keyframes indeterminate-progress {
  0% {
    background-position-x: -75%;
  }
  50% {
    background-position-x: 125%;
  }
  100% {
    background-position-x: -75%;
  }
}
@keyframes progress-bar-stripes {
  0% {
    background-position-x: 0.75rem;
  }
}
/* progress step */
.progress-step {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-b1,oklch(var(--b1)/var(--tw-text-opacity, 1)));
}
.radial-progress {
  --value: 0;
  --size: 5rem;
  --thickness: calc(var(--size) / 10);
  font-weight: 500;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}
.radial-progress:after {
  background-color: currentColor;
}
/* Radio */
.radio {
  --basebg: var(--fallback-b1,oklch(var(--b1)/1));
  width: 1.5rem;
  height: 1.5rem;
  cursor: pointer;
  appearance: none;
  border-radius: 9999px;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-n,oklch(var(--n)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}
.radio:focus {
    box-shadow: none;
  }
.radio:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 0px;
  outline-color: var(--fallback-n,oklch(var(--n)/0.3));
}
.radio:checked,
  .radio[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-n,oklch(var(--n)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity, 1)));
    background-image: none;
    animation: radiomark var(--animation-input, 0.1s) ease-out;
    box-shadow:
      0 0 0 3px var(--basebg) inset,
      0 0 0 3px var(--basebg) inset,
      var(--tw-ring-offset-shadow),
      var(--tw-ring-shadow);
}
.radio-primary:checked,
    .radio-primary[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}
.radio-primary:checked:focus-visible, .radio-primary[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-p,oklch(var(--p)/0.3));
}
.radio-secondary:checked,
    .radio-secondary[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-s,oklch(var(--s)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-s,oklch(var(--s)/var(--tw-bg-opacity, 1)));
}
.radio-secondary:checked:focus-visible, .radio-secondary[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-s,oklch(var(--s)/0.3));
}
.radio-accent:checked,
    .radio-accent[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-a,oklch(var(--a)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-a,oklch(var(--a)/var(--tw-bg-opacity, 1)));
}
.radio-accent:checked:focus-visible, .radio-accent[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-a,oklch(var(--a)/0.3));
}
/* State color */
.radio-info:checked,
    .radio-info[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-in,oklch(var(--in)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-in,oklch(var(--in)/var(--tw-bg-opacity, 1)));
}
.radio-info:checked:focus-visible, .radio-info[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-in,oklch(var(--in)/0.3));
}
.radio-success:checked,
    .radio-success[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
}
.radio-success:checked:focus-visible, .radio-success[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3));
}
.radio-warning:checked,
    .radio-warning[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-bg-opacity, 1)));
}
.radio-warning:checked:focus-visible, .radio-warning[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.3));
}
.radio-error:checked,
    .radio-error[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
}
.radio-error:checked:focus-visible, .radio-error[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3));
}
/* Radio inset */
.radio-inset {
  width: 1.5rem;
  height: 1.5rem;
  cursor: pointer;
  appearance: none;
  border-radius: 9999px;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-n,oklch(var(--n)/var(--tw-border-opacity, 1)));
}
.radio-inset:focus {
    box-shadow: none;
  }
.radio-inset:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 0px;
  outline-color: var(--fallback-n,oklch(var(--n)/0.3));
}
.radio-inset:checked,
  .radio-inset[aria-checked="true"] {
  border-width: 6px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-n,oklch(var(--n)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    background-image: none;
    animation: radioinsetmark var(--animation-input, 0.15s) ease-out;
}
.radio-inset:checked.radio-xs, .radio-inset[aria-checked="true"].radio-xs {
  border-width: 4px;
}
.radio-inset:checked.radio-sm, .radio-inset[aria-checked="true"].radio-sm {
  border-width: 5px;
}
.radio-inset:checked.radio-lg, .radio-inset[aria-checked="true"].radio-lg {
  border-width: 8px;
}
.radio-inset-primary:checked,
    .radio-inset-primary[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
}
.radio-inset-primary:checked:focus-visible, .radio-inset-primary[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-p,oklch(var(--p)/0.3));
}
.radio-inset-secondary:checked,
    .radio-inset-secondary[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-s,oklch(var(--s)/var(--tw-border-opacity, 1)));
}
.radio-inset-secondary:checked:focus-visible, .radio-inset-secondary[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-s,oklch(var(--s)/0.3));
}
.radio-inset-accent:checked,
    .radio-inset-accent[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-a,oklch(var(--a)/var(--tw-border-opacity, 1)));
}
.radio-inset-accent:checked:focus-visible, .radio-inset-accent[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-a,oklch(var(--a)/0.3));
}
/* State color */
.radio-inset-info:checked,
    .radio-inset-info[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-in,oklch(var(--in)/var(--tw-border-opacity, 1)));
}
.radio-inset-info:checked:focus-visible, .radio-inset-info[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-in,oklch(var(--in)/0.3));
}
.radio-inset-success:checked,
    .radio-inset-success[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}
.radio-inset-success:checked:focus-visible, .radio-inset-success[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3));
}
.radio-inset-warning:checked,
    .radio-inset-warning[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-border-opacity, 1)));
}
.radio-inset-warning:checked:focus-visible, .radio-inset-warning[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.3));
}
.radio-inset-error:checked,
    .radio-inset-error[aria-checked="true"] {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}
.radio-inset-error:checked:focus-visible, .radio-inset-error[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3));
}
/* disabled */
.radio.disabled,
  .radio:disabled,
  .radio[disabled],
  .radio-inset.disabled,
  .radio-inset:disabled,
  .radio-inset[disabled] {
  pointer-events: none;
  opacity: 0.4;
}
.radio.disabled:hover, .radio:disabled:hover, .radio[disabled]:hover, .radio-inset.disabled:hover, .radio-inset:disabled:hover, .radio-inset[disabled]:hover {
      --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    }
/* Radio  */
@keyframes radiomark {
  0% {
    box-shadow:
      0 0 0 9px var(--basebg) inset,
      0 0 0 9px var(--basebg) inset;
  }
  50% {
    box-shadow:
      0 0 0 6px var(--basebg) inset,
      0 0 0 6px var(--basebg) inset;
  }
  100% {
    box-shadow:
      0 0 0 3px var(--basebg) inset,
      0 0 0 3px var(--basebg) inset;
  }
}
/* backward compatibility */
.radio-mark {
  display: none;
}
/* for radio-inset */
@keyframes radioinsetmark {
  0% {
    border-width: 2px;
  }
  50% {
    border-width: 4px;
  }
  100% {
    border-width: 6px;
  }
}
/* backward compatibility */
.radio-inset-mark {
  display: none;
}
/* custom option */
.custom-label-option,
.custom-option {
  width: 100%;
  overflow: hidden;
  border-radius: var(--rounded-box, 0.5rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
  padding: 1rem;
  text-align: center;
  transition:
    border-color 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out;
}
.custom-label-option:hover, .custom-option:hover {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-color: var(--fallback-bc,oklch(var(--bc)/0.4));
}
.custom-label-option .label, .custom-option .label {
  padding: 0px;
  font-size: 1rem;
  line-height: 1.375rem;
}
.custom-label-option .label:first-of-type, .custom-option .label:first-of-type {
  padding-bottom: 0.25rem;
}
.custom-label-option .label .label-text, .custom-option .label .label-text {
  font-weight: 500;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}
.validate .custom-label-option:has(.radio:invalid),
  .custom-label-option:has(.radio.is-invalid),
  .validate .custom-option:has(.radio:invalid),
  .custom-option:has(.radio.is-invalid) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}
.validate .custom-label-option:has(.radio:valid),
  .custom-label-option:has(.radio.is-valid),
  .validate .custom-option:has(.radio:valid),
  .custom-option:has(.radio.is-valid) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}
.custom-option:has(:checked) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}
.validate .custom-option:has(.radio:valid):has(:checked), .custom-option:has(.radio.is-valid):has(:checked) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}
.custom-label-option {
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
}
.custom-label-option:has(:checked) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-p,oklch(var(--p)/0.2));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}
.validate .custom-label-option:has(.radio:valid),
  .custom-label-option:has(.radio.is-valid) {
  background-color: var(--fallback-su,oklch(var(--su)/0.2));
}
.validate .custom-label-option:has(.radio:valid):has(:checked), .custom-label-option:has(.radio.is-valid):has(:checked) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-su,oklch(var(--su)/0.2));
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}
.validate .custom-label-option:has(.radio:invalid),
  .custom-label-option:has(.radio.is-invalid) {
  background-color: var(--fallback-er,oklch(var(--er)/0.2));
}
/* State style */
.radio.is-valid,
.validate .radio:valid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}
.radio.is-valid:hover,
.validate .radio:valid:hover {
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/0.1)) !important;
}
@media(hover:hover) {
  .radio.is-valid:hover,
.validate .radio:valid:hover {
    --tw-border-opacity: 1 !important;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  }
}
.radio.is-valid:focus-visible, .validate .radio:valid:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3)) !important;
}
.radio.is-valid:checked,
  .radio.is-valid[aria-checked="true"],
  .validate .radio:valid:checked,
  .validate .radio:valid[aria-checked="true"] {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1))) !important;
}
.radio.is-invalid,
.validate .radio:invalid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}
.radio.is-invalid:hover,
.validate .radio:invalid:hover {
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/0.1)) !important;
}
@media(hover:hover) {
  .radio.is-invalid:hover,
.validate .radio:invalid:hover {
    --tw-border-opacity: 1 !important;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  }
}
.radio.is-invalid:focus-visible, .validate .radio:invalid:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3)) !important;
}
.radio.is-invalid:checked,
  .radio.is-invalid[aria-checked="true"],
  .validate .radio:invalid:checked,
  .validate .radio:invalid[aria-checked="true"] {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1))) !important;
}
/* Label state */
/* Top text */
.validate .label:has(+ * .radio:valid) > *, 
.validate .label-text:has(+ * .radio:valid), 
.validate .label-text:has(~ .radio:valid), 
.validate .label:has(~ .radio:valid) > *, 

.validate .radio:valid ~ .label, 
.validate .radio:valid ~ .label-text, 
.validate .radio:valid ~ .label .label-text,  
.validate *:has(.radio:valid) ~ .label, 
.validate *:has(.radio:valid) ~ .label-text, 
.validate *:has(.radio:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}
/* Invalid text style */
/* Top text */
.validate .label:has(+ * .radio:invalid) > *, 
.validate .label-text:has(+ * .radio:invalid), 
.validate .label-text:has(~ .radio:invalid), 
.validate .label:has(~ .radio:invalid) > *, 

.validate .radio:invalid ~ .label, 
.validate .radio:invalid ~ .label-text, 
.validate .radio:invalid ~ .label .label-text,  
.validate *:has(.radio:invalid) ~ .label, 
.validate *:has(.radio:invalid) ~ .label-text, 
.validate *:has(.radio:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}
/* Helper text */
/* Valid message display */
.validate *:has(> .radio:valid) ~ .success-message,
.validate *:has(> .radio:valid) > * > .success-message,

.validate .radio:valid ~ .success-message,
.validate .radio:valid + * > .success-message {
  display: block;
}
/* Invalid message display */
.validate *:has(> .radio:invalid) ~ .error-message,
.validate *:has(> .radio:invalid) > * > .error-message,

.validate .radio:invalid ~ .error-message,
.validate .radio:invalid + * > .error-message {
  display: block;
}
/* Inset Radio */
.radio-inset.is-valid,
.validate .radio-inset:valid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}
.radio-inset.is-valid:hover,
.validate .radio-inset:valid:hover {
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/0.1)) !important;
}
@media(hover:hover) {
  .radio-inset.is-valid:hover,
.validate .radio-inset:valid:hover {
    --tw-border-opacity: 1 !important;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  }
}
.radio-inset.is-valid:focus-visible, .validate .radio-inset:valid:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3)) !important;
}
.radio-inset.is-valid:checked,
  .radio-inset.is-valid[aria-checked="true"],
  .validate .radio-inset:valid:checked,
  .validate .radio-inset:valid[aria-checked="true"] {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}
.radio-inset.is-invalid,
.validate .radio-inset:invalid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}
.radio-inset.is-invalid:hover,
.validate .radio-inset:invalid:hover {
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/0.1)) !important;
}
@media(hover:hover) {
  .radio-inset.is-invalid:hover,
.validate .radio-inset:invalid:hover {
    --tw-border-opacity: 1 !important;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  }
}
.radio-inset.is-invalid:focus-visible, .validate .radio-inset:invalid:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3)) !important;
}
.radio-inset.is-invalid:checked,
  .radio-inset.is-invalid[aria-checked="true"],
  .validate .radio-inset:invalid:checked,
  .validate .radio-inset:invalid[aria-checked="true"] {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}
/* Label state */
/* Top text */
.validate .label:has(+ * .radio-inset:valid) > *, 
.validate .label:has(+ * .radio-inset:valid).label-text, 
.validate .label:has(~ .radio-inset:valid).label-text, 
.validate .label:has(~ .radio-inset:valid) > *, 

.validate .radio-inset:valid ~ .label, 
.validate .radio-inset:valid ~ .label.label-text, 
.validate .radio-inset:valid ~ .label .label-text,  
.validate *:has(.radio-inset:valid) ~ .label, 
.validate *:has(.radio-inset:valid) ~ .label.label-text, 
.validate *:has(.radio-inset:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}
/* Top text */
.validate .label:has(+ * .radio-inset:invalid) > *, 
.validate .label-text:has(+ * .radio-inset:invalid), 
.validate .label-text:has(~ .radio-inset:invalid), 
.validate .label:has(~ .radio-inset:invalid) > *, 

.validate .radio-inset:invalid ~ .label, 
.validate .radio-inset:invalid ~ .label-text, 
.validate .radio-inset:invalid ~ .label .label-text,  
.validate *:has(.radio-inset:invalid) ~ .label, 
.validate *:has(.radio-inset:invalid) ~ .label-text, 
.validate *:has(.radio-inset:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}
/* Helper text */
/* Valid message display */
.validate *:has(> .radio-inset:valid) ~ .success-message,
.validate *:has(> .radio-inset:valid) > * > .success-message,

.validate .radio-inset:valid ~ .success-message,
.validate .radio-inset:valid + * > .success-message {
  display: block;
}
/* Invalid message display */
.validate *:has(> .radio-inset:invalid) ~ .error-message,
.validate *:has(> .radio-inset:invalid) > * > .error-message,

.validate .radio-inset:invalid ~ .error-message,
.validate .radio-inset:invalid + * > .error-message {
  display: block;
}
.range {
  appearance: none;
  -webkit-appearance: none;
  --range-shdw: var(--fallback-bc,oklch(var(--bc)/1));
  position: relative;
  border-radius: 9999px;
  background-color: transparent;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

  .range::-webkit-slider-runnable-track {
  height: 0.5rem;
  width: 100%;
  border-radius: 9999px;
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
}

  .range::-moz-range-track {
  height: 0.5rem;
  width: 100%;
  border-radius: 9999px;
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
}

  .range::-webkit-slider-thumb {
  position: relative;
  top: 50%;
  width: 1rem;
  height: 1rem;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  transition-property: all;
  transition-duration: 150ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

  .range::-webkit-slider-thumb:hover {
  --tw-scale-x: 1.25;
  --tw-scale-y: 1.25;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

  .range::-webkit-slider-thumb:active {
  --tw-scale-x: 1.25;
  --tw-scale-y: 1.25;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

  .range::-webkit-slider-thumb {
    appearance: none;
    box-sizing: border-box;
    -webkit-appearance: none;
    color: var(--range-shdw);
    border-color: var(--range-shdw);
    border-style: solid;
    border-width: 3px;
  }

  .range::-webkit-slider-thumb:hover {
  cursor: grab;
      box-shadow: 0 0 0 2px var(--range-shdw);
}

  .range::-webkit-slider-thumb:active {
  cursor: grabbing;
      box-shadow: 0 0 0 3px var(--range-shdw);
}

  .range::-moz-range-thumb {
  position: relative;
  width: 1rem;
  height: 1rem;
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  transition-property: all;
  transition-duration: 150ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    top: 50%;
    color: var(--range-shdw);
    box-sizing: border-box;
    border-color: var(--range-shdw);
    border-style: solid;
    border-width: 3px;
}

  .range::-moz-range-thumb:hover {
  cursor: grab;
      box-shadow: 0 0 0 2px var(--range-shdw);
}

  .range::-moz-range-thumb:active {
  cursor: grabbing;
      box-shadow: 0 0 0 3px var(--range-shdw);
}

/* Color */

.range-primary {
  --range-shdw: var(--fallback-p,oklch(var(--p)/1));
}

.range-secondary {
  --range-shdw: var(--fallback-s,oklch(var(--s)/1));
}

.range-accent {
  --range-shdw: var(--fallback-a,oklch(var(--a)/1));
}

.range-success {
  --range-shdw: var(--fallback-su,oklch(var(--su)/1));
}

.range-warning {
  --range-shdw: var(--fallback-wa,oklch(var(--wa)/1));
}

.range-info {
  --range-shdw: var(--fallback-in,oklch(var(--in)/1));
}

.range-error {
  --range-shdw: var(--fallback-er,oklch(var(--er)/1));
}

/* State */

.range.disabled,
.range:disabled,
.range[disabled] {
  pointer-events: none;
  opacity: 0.3;
}

/* Direction */

[dir="rtl"] .range::-webkit-slider-thumb {
  transform: translateY(-50%) scaleX(-1);
}

[dir="rtl"] .range::-moz-range-thumb {
  transform: translateY(-50%) scaleX(-1);
}

[dir="rtl"] .range::-webkit-slider-runnable-track,
[dir="rtl"] .range::-moz-range-track {
  direction: rtl;
}
.select {
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  font-size: 1rem;
  line-height: 1.375rem;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}.select:hover {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
}.select {
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' viewBox='0 0 24 24'><path fill='none' stroke='%239293AE' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 9l6 6l6-6'/></svg>");
  background-size: 1.3em;
  background-position: calc(100% - 1rem) center;
  background-repeat: no-repeat;
}

  .select:focus,
  .select:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

  .select:focus ~ .select-floating-label,
    .select:focus ~ .select-filled-label,
    .select:focus-within ~ .select-floating-label,
    .select:focus-within ~ .select-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

  .select:focus.is-valid ~ .select-floating-label,
    .select:focus.is-valid ~ .select-filled-label,
    .select:focus-within.is-valid ~ .select-floating-label,
    .select:focus-within.is-valid ~ .select-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

  .select:focus.is-invalid ~ .select-floating-label,
    .select:focus.is-invalid ~ .select-filled-label,
    .select:focus-within.is-invalid ~ .select-floating-label,
    .select:focus-within.is-invalid ~ .select-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

  .select-filled {
  border-bottom-right-radius: 0px;
  border-bottom-left-radius: 0px;
  border-top-left-radius: 0.375rem;
  border-top-right-radius: 0.375rem;
  border-width: 0px;
  border-bottom-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
  background-color: var(--fallback-bc,oklch(var(--bc)/0.05));
  padding-top: 0.625rem;
}

  .select-filled::placeholder {
  color: transparent;
}

  .select-filled.input-sm {
  padding-top: 0.375rem;
}

  .select-filled option {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

  .select-filled:focus,
    .select-filled:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

  .select-filled:focus ~ .select-filled-focused,
    .select-filled:focus-within ~ .select-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

  .select:focus-visible {
    outline: unset;
  }

  .select.disabled,
  .select:disabled,
  .select[disabled] {
  pointer-events: none;
  border-width: 0px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

  .select.disabled::placeholder,
  .select:disabled::placeholder,
  .select[disabled]::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

  .select-multiple,
  .select[multiple],
  .select[size].select:not([size="1"]) {
  overflow-y: auto;
  overflow-x: hidden;
}

  .select-multiple::-webkit-scrollbar-thumb,
  .select[multiple]::-webkit-scrollbar-thumb,
  .select[size].select:not([size="1"])::-webkit-scrollbar-thumb {
  border-radius: 9999px;
  background-color: var(--fallback-s,oklch(var(--s)/0.5));
}

  .select-multiple::-webkit-scrollbar-thumb:hover,
  .select[multiple]::-webkit-scrollbar-thumb:hover,
  .select[size].select:not([size="1"])::-webkit-scrollbar-thumb:hover {
  background-color: var(--fallback-s,oklch(var(--s)/0.8));
}

  .select-multiple::-webkit-scrollbar-track,
  .select[multiple]::-webkit-scrollbar-track,
  .select[size].select:not([size="1"])::-webkit-scrollbar-track {
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
}

  .select-multiple::-webkit-scrollbar,
  .select[multiple]::-webkit-scrollbar,
  .select[size].select:not([size="1"])::-webkit-scrollbar {
  width: 0.5rem;
}

  .select-multiple,
  .select[multiple],
  .select[size].select:not([size="1"]) {
    background-image: none;
  }

.select.select-floating.disabled,
    .select.select-floating:disabled,
    .select.select-floating[disabled] {
  border-width: 1px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.select.select-floating.disabled ~ .select-floating-label, .select.select-floating:disabled ~ .select-floating-label, .select.select-floating[disabled] ~ .select-floating-label {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.select.select-filled.disabled,
    .select.select-filled:disabled,
    .select.select-filled[disabled] {
  border-bottom-width: 1px;
}

.select.select-filled.disabled ~ .select-filled-label, .select.select-filled:disabled ~ .select-filled-label, .select.select-filled[disabled] ~ .select-filled-label {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

[dir="rtl"] .select {
  background-position: calc(0% + 1.3em) center;
}

.select-floating-label {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  font-size: 0.75rem;
  line-height: 1rem;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.select.select-floating.select-lg ~ .select-floating-label {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.select-filled-label {
  font-size: 0.75rem;
  line-height: 1rem;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.select.select-filled.select-lg ~ .select-filled-label {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

/* select group */

.input-group .select {
  border-width: 0px;
}

.input-group .select:focus,
    .input-group .select:focus-within {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

/* State style */

.select.is-valid,
.validate .select:valid {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}

.select.is-valid:focus,
  .select.is-valid:focus-within,
  .validate .select:valid:focus,
  .validate .select:valid:focus-within {
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}

.select.is-valid.select-filled:focus,
  .select.is-valid.select-filled:focus-within,
  .validate .select:valid.select-filled:focus,
  .validate .select:valid.select-filled:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.select.is-valid ~ .select-floating-label,
  .select.is-valid ~ .select-filled-label,
  .validate .select:valid ~ .select-floating-label,
  .validate .select:valid ~ .select-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.select.is-valid:focus ~ .select-filled-focused,
  .select.is-valid:focus-within ~ .select-filled-focused,
  .validate .select:valid:focus ~ .select-filled-focused,
  .validate .select:valid:focus-within ~ .select-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
}

.select:focus.is-valid ~ .select-floating-label,
.validate .select:focus:valid ~ .select-floating-label,
.select:focus.is-valid ~ .select-filled-label,
.validate .select:focus:valid ~ .select-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.select:focus.is-invalid ~ .select-floating-label,
.validate .select:focus:invalid ~ .select-floating-label,
.select:focus.is-invalid ~ .select-filled-label,
.validate .select:focus:invalid ~ .select-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.select.is-invalid,
.validate .select:invalid {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}

.select.is-invalid:focus,
  .select.is-invalid:focus-within,
  .validate .select:invalid:focus,
  .validate .select:invalid:focus-within {
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1)));
}

.select.is-invalid.select-filled:focus,
  .select.is-invalid.select-filled:focus-within,
  .validate .select:invalid.select-filled:focus,
  .validate .select:invalid.select-filled:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.select.is-invalid ~ .select-floating-label,
  .select.is-invalid ~ .select-filled-label,
  .validate .select:invalid ~ .select-floating-label,
  .validate .select:invalid ~ .select-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.select.is-invalid:focus ~ .select-filled-focused,
  .select.is-invalid:focus-within ~ .select-filled-focused,
  .validate .select:invalid:focus ~ .select-filled-focused,
  .validate .select:invalid:focus-within ~ .select-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
}

/* Label state */

/* Top text */

.validate .label:has(+ * .select:valid) > *, 
.validate .label-text:has(+ * .select:valid), 
.validate .label-text:has(~ .select:valid).label-text, 
.validate .label:has(~ .select:valid) > *, 

.validate .select:valid ~ .label, 
.validate .select:valid ~ .label-text, 
.validate .select:valid ~ .label .label-text,  
.validate *:has(.select:valid) ~ .label, 
.validate *:has(.select:valid) ~ .label-text, 
.validate *:has(.select:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

/* Invalid text style */

/* Top text */

.validate .label:has(+ * .select:invalid) > *, 
.validate .label-text:has(+ * .select:invalid), 
.validate .label-text:has(~ .select:invalid), 
.validate .label:has(~ .select:invalid) > *, 

.validate .select:invalid ~ .label, 
.validate .select:invalid ~ .label-text, 
.validate .select:invalid ~ .label .label-text,  
.validate *:has(.select:invalid) ~ .label, 
.validate *:has(.select:invalid) ~ .label-text, 
.validate *:has(.select:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

/* Helper text */

/* Valid message display */

.validate *:has(> .select:valid) ~ .success-message,
.validate *:has(> .select:valid) > * > .success-message,

.validate .select:valid ~ .success-message,
.validate .select:valid + * > .success-message {
  display: block;
}

.validate *:has(> .select:invalid) ~ .error-message,
.validate *:has(> .select:invalid) > * > .error-message,

.validate .select:invalid ~ .error-message,
.validate .select:invalid + * > .error-message {
  display: block;
}
/* Define the base skeleton styles */
.skeleton {
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity, 1)));
  will-change: background-position;
  background-image: linear-gradient(
    105deg,
    transparent 0%,
    transparent 40%,
    var(--fallback-b1,oklch(var(--b1)/0.75)) 50%,
    transparent 60%,
    transparent 100%
  );
  background-size: 200% auto;
  background-repeat: no-repeat;
  background-position-x: -50%;
}
/* Define the animation properties in the skeleton-animated class */
.skeleton-animated {
  animation: skeleton 1.8s ease-in-out infinite;
}
/* Reduce animation duration for reduced motion preferences */
@media (prefers-reduced-motion) {
  .skeleton-animated {
    animation-duration: 15s;
  }
}
/* Define the animation keyframes */
@keyframes skeleton {
  from {
    background-position: 150%;
  }
  to {
    background-position: -50%;
  }
}
.stack {
    place-items: center;
    align-items: flex-end
}
  .stack > * {
    width: 100%;
    opacity: 0.6
}
  .stack > *:nth-child(2) {
    opacity: 0.8
}
  .stack > *:nth-child(1) {
    opacity: 1
}
.stats {
  border-radius: var(--rounded-box, 0.5rem);
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
  box-shadow: var(--card-shadow, 0px 2px 4px 0px oklch(var(--bs) / 0.26));
  border-width: var(--card-border, 0px);
}
:where(.stats) > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-x-reverse: 0;
  border-right-width: calc(1px * var(--tw-divide-x-reverse));
  border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
  --tw-divide-y-reverse: 0;
  border-top-width: calc(0px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(0px * var(--tw-divide-y-reverse));
}
:where(.stats) {
  overflow-x: auto;
}
:is([dir="rtl"] .stats > :not([hidden]) ~ :not([hidden])) {
  --tw-divide-x-reverse: 1;
}
.stat {
  column-gap: 1rem;
  row-gap: 0.25rem;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  padding-top: 1rem;
  padding-bottom: 1rem;
}
.stat-title {
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}
.stat-value {
  font-size: 1.875rem;
  line-height: 2.25rem;
  font-weight: 600;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}
.stat-desc {
  font-size: 0.75rem;
  line-height: 1rem;
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}
.stat-actions {
  margin-top: 0.75rem;
}
/* .stat + .stat {
  @apply border-l border-base-content border-opacity-10;
}
.stats.grid-flow-row {
  .stat + .stat {
    @apply border-l-0 border-t;
  }
} */
.swap {
  cursor: pointer;
}

.swap > * {
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-property: transform, opacity;
}

.swap-rotate .swap-on,
.swap-rotate .swap-indeterminate,
.swap-rotate input:indeterminate ~ .swap-on {
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.swap-rotate input:checked ~ .swap-off,
.swap-active:where(.swap-rotate) .swap-off,
.swap-rotate input:indeterminate ~ .swap-off {
  --tw-rotate: -45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.swap-rotate input:checked ~ .swap-on,
.swap-active:where(.swap-rotate) .swap-on,
.swap-rotate input:indeterminate ~ .swap-indeterminate {
  --tw-rotate: 0deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.swap-flip {
  transform-style: preserve-3d;
  perspective: 16em;
}

.swap-flip .swap-on,
.swap-flip .swap-indeterminate,
.swap-flip input:indeterminate ~ .swap-on {
  transform: rotateY(180deg);
  backface-visibility: hidden;
  opacity: 1;
}

.swap-flip input:checked ~ .swap-off,
.swap-active:where(.swap-flip) .swap-off,
.swap-flip input:indeterminate ~ .swap-off {
  transform: rotateY(-180deg);
  backface-visibility: hidden;
  opacity: 1;
}

.swap-flip input:checked ~ .swap-on,
.swap-active:where(.swap-flip) .swap-on,
.swap-flip input:indeterminate ~ .swap-indeterminate {
  transform: rotateY(0deg);
}
.switch {
  --tglbg: var(--fallback-b3,oklch(var(--b3)/1));
  --handleoffset: 1.35rem;
  --handleoffsetcalculator: calc(var(--handleoffset) * -1);
  --switchhandleborder: 0 0;
  height: 1.5rem;
  width: 2.875rem;
  cursor: pointer;
  appearance: none;
  overflow: hidden;
  border-radius: 9999px;
  background-color: var(--fallback-b1,oklch(var(--b1)/1));

  transition:
    background,
    box-shadow var(--animation-input, 0.2s) ease-out;
  box-shadow:
    var(--handleoffsetcalculator) 0 0 4px var(--tglbg) inset,
    0 0 0 4px var(--tglbg) inset,
    var(--switchhandleborder);
}

  [dir="rtl"] .switch {
    --handleoffsetcalculator: calc(var(--handleoffset) * 1);
  }

  .switch:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 0px;
  outline-color: var(--fallback-n,oklch(var(--n)/0.3));
}

  .switch:checked,
  .switch[checked="true"],
  .switch[aria-checked="true"] {
    background-image: none;
    --handleoffsetcalculator: var(--handleoffset);
    --tw-text-opacity: 1;
    color: var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity, 1)));
  }

  [dir="rtl"] .switch:checked, [dir="rtl"] .switch[checked="true"], [dir="rtl"] .switch[aria-checked="true"] {
      --handleoffsetcalculator: calc(var(--handleoffset) * -1);
    }

  .switch:indeterminate {
  --tw-text-opacity: 1;
  color: var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity, 1)));
    box-shadow:
      calc(var(--handleoffset) / 2) 0 0 3px var(--tglbg) inset,
      calc(var(--handleoffset) / -2) 0 0 3px var(--tglbg) inset,
      0 0 0 3px var(--tglbg) inset;
}

  [dir="rtl"] .switch:indeterminate {
      box-shadow:
        calc(var(--handleoffset) / 2) 0 0 3px var(--tglbg) inset,
        calc(var(--handleoffset) / -2) 0 0 3px var(--tglbg) inset,
        0 0 0 3px var(--tglbg) inset;
    }

  .switch-primary:checked,
    .switch-primary[checked="true"],
    .switch-primary[aria-checked="true"] {
      --tglbg: var(--fallback-p,oklch(var(--p)/1));
    }

  .switch-primary:checked:focus-visible, .switch-primary[checked="true"]:focus-visible, .switch-primary[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-p,oklch(var(--p)/0.3));
}

  .switch-secondary:checked,
    .switch-secondary[checked="true"],
    .switch-secondary[aria-checked="true"] {
      --tglbg: var(--fallback-s,oklch(var(--s)/1));
    }

  .switch-secondary:checked:focus-visible, .switch-secondary[checked="true"]:focus-visible, .switch-secondary[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-s,oklch(var(--s)/0.3));
}

  .switch-accent:checked,
    .switch-accent[checked="true"],
    .switch-accent[aria-checked="true"] {
      --tglbg: var(--fallback-a,oklch(var(--a)/1));
    }

  .switch-accent:checked:focus-visible, .switch-accent[checked="true"]:focus-visible, .switch-accent[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-a,oklch(var(--a)/0.3));
}

  /* State color */

  .switch-info:checked,
    .switch-info[checked="true"],
    .switch-info[aria-checked="true"] {
      --tglbg: var(--fallback-in,oklch(var(--in)/1));
    }

  .switch-info:checked:focus-visible, .switch-info[checked="true"]:focus-visible, .switch-info[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-in,oklch(var(--in)/0.3));
}

  .switch-success:checked,
    .switch-success[checked="true"],
    .switch-success[aria-checked="true"] {
      --tglbg: var(--fallback-su,oklch(var(--su)/1));
    }

  .switch-success:checked:focus-visible, .switch-success[checked="true"]:focus-visible, .switch-success[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3));
}

  .switch-warning:checked,
    .switch-warning[checked="true"],
    .switch-warning[aria-checked="true"] {
      --tglbg: var(--fallback-wa,oklch(var(--wa)/1));
    }

  .switch-warning:checked:focus-visible, .switch-warning[checked="true"]:focus-visible, .switch-warning[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.3));
}

  .switch-error:checked,
    .switch-error[checked="true"],
    .switch-error[aria-checked="true"] {
      --tglbg: var(--fallback-er,oklch(var(--er)/1));
    }

  .switch-error:checked:focus-visible, .switch-error[checked="true"]:focus-visible, .switch-error[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3));
}

  .switch.disabled,
  .switch:disabled,
  .switch[disabled] {
  pointer-events: none;
  background-color: transparent;
  opacity: 0.4;
}

  /* outline  */

  .switch-outline {
    --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: var(--fallback-n,oklch(var(--n)/var(--tw-border-opacity, 1)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity, 1)));

    box-shadow:
      var(--handleoffsetcalculator) 0 0 3px var(--tglbg) inset,
      0 0 0 3px var(--tglbg) inset,
      var(--switchhandleborder);
  }

  .switch-outline:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 0px;
  outline-color: var(--fallback-n,oklch(var(--n)/0.3));
}

  .switch-outline:checked,
    .switch-outline[checked="true"],
    .switch-outline[aria-checked="true"] {
      background-image: none;
      --handleoffsetcalculator: var(--handleoffset);
    }

  [dir="rtl"] .switch-outline:checked, [dir="rtl"] .switch-outline[checked="true"], [dir="rtl"] .switch-outline[aria-checked="true"] {
        --handleoffsetcalculator: calc(var(--handleoffset) * -1);
      }

  .switch-outline.switch-primary:checked,
      .switch-outline.switch-primary[checked="true"],
      .switch-outline.switch-primary[aria-checked="true"] {
        --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
        --tw-border-opacity: 1;
        border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
        --tw-bg-opacity: 1;
        background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
      }

  .switch-outline.switch-primary:checked:focus-visible, .switch-outline.switch-primary[checked="true"]:focus-visible, .switch-outline.switch-primary[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-p,oklch(var(--p)/0.3));
}

  .switch-outline.switch-secondary:checked,
      .switch-outline.switch-secondary[checked="true"],
      .switch-outline.switch-secondary[aria-checked="true"] {
        --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
        --tw-border-opacity: 1;
        border-color: var(--fallback-s,oklch(var(--s)/var(--tw-border-opacity, 1)));
        --tw-bg-opacity: 1;
        background-color: var(--fallback-s,oklch(var(--s)/var(--tw-bg-opacity, 1)));
      }

  .switch-outline.switch-secondary:checked:focus-visible, .switch-outline.switch-secondary[checked="true"]:focus-visible, .switch-outline.switch-secondary[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-s,oklch(var(--s)/0.3));
}

  .switch-outline.switch-accent:checked,
      .switch-outline.switch-accent[checked="true"],
      .switch-outline.switch-accent[aria-checked="true"] {
        --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
        --tw-border-opacity: 1;
        border-color: var(--fallback-a,oklch(var(--a)/var(--tw-border-opacity, 1)));
        --tw-bg-opacity: 1;
        background-color: var(--fallback-a,oklch(var(--a)/var(--tw-bg-opacity, 1)));
      }

  .switch-outline.switch-accent:checked:focus-visible, .switch-outline.switch-accent[checked="true"]:focus-visible, .switch-outline.switch-accent[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-a,oklch(var(--a)/0.3));
}

  /* State color */

  .switch-outline.switch-info:checked,
      .switch-outline.switch-info[checked="true"],
      .switch-outline.switch-info[aria-checked="true"] {
        --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
        --tw-border-opacity: 1;
        border-color: var(--fallback-in,oklch(var(--in)/var(--tw-border-opacity, 1)));
        --tw-bg-opacity: 1;
        background-color: var(--fallback-in,oklch(var(--in)/var(--tw-bg-opacity, 1)));
      }

  .switch-outline.switch-info:checked:focus-visible, .switch-outline.switch-info[checked="true"]:focus-visible, .switch-outline.switch-info[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-in,oklch(var(--in)/0.3));
}

  .switch-outline.switch-success:checked,
      .switch-outline.switch-success[checked="true"],
      .switch-outline.switch-success[aria-checked="true"] {
        --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
        --tw-border-opacity: 1;
        border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
        --tw-bg-opacity: 1;
        background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
      }

  .switch-outline.switch-success:checked:focus-visible, .switch-outline.switch-success[checked="true"]:focus-visible, .switch-outline.switch-success[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3));
}

  .switch-outline.switch-warning:checked,
      .switch-outline.switch-warning[checked="true"],
      .switch-outline.switch-warning[aria-checked="true"] {
        --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
        --tw-border-opacity: 1;
        border-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-border-opacity, 1)));
        --tw-bg-opacity: 1;
        background-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-bg-opacity, 1)));
      }

  .switch-outline.switch-warning:checked:focus-visible, .switch-outline.switch-warning[checked="true"]:focus-visible, .switch-outline.switch-warning[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.3));
}

  .switch-outline.switch-error:checked,
      .switch-outline.switch-error[checked="true"],
      .switch-outline.switch-error[aria-checked="true"] {
        --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
        --tw-border-opacity: 1;
        border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
        --tw-bg-opacity: 1;
        background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
      }

  .switch-outline.switch-error:checked:focus-visible, .switch-outline.switch-error[checked="true"]:focus-visible, .switch-outline.switch-error[aria-checked="true"]:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3));
}

  .switch-outline.disabled,
    .switch-outline:disabled,
    .switch-outline[disabled] {
  pointer-events: none;
  border-color: currentColor;
  background-color: transparent;
  opacity: 0.3;
      --switchhandleborder: 0 0 0 3px var(--fallback-bc,oklch(var(--bc)/1)) inset,
        var(--handleoffsetcalculator) 0 0 3px var(--fallback-bc,oklch(var(--bc)/1)) inset;
}

/* Backward compatibility */

.switch-mark {
  display: none;
}

/* State style */

.switch.is-valid,
.validate .switch:valid {
  --tglbg: var(--fallback-su,oklch(var(--su)/1));
}

.switch.is-valid:focus-visible, .validate .switch:valid:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3)) !important;
}

.switch.is-valid:checked,
  .switch.is-valid[checked="true"],
  .switch.is-valid[aria-checked="true"],
  .validate .switch:valid:checked,
  .validate .switch:valid[checked="true"],
  .validate .switch:valid[aria-checked="true"] {
    --tglbg: var(--fallback-su,oklch(var(--su)/1));
  }

.switch.is-invalid,
.validate .switch:invalid {
  --tglbg: var(--fallback-er,oklch(var(--er)/1));
}

.switch.is-invalid:focus-visible, .validate .switch:invalid:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3)) !important;
}

.switch.is-invalid:checked,
  .switch.is-invalid[checked="true"],
  .switch.is-invalid[aria-checked="true"],
  .validate .switch:invalid:checked,
  .validate .switch:invalid[checked="true"],
  .validate .switch:invalid[aria-checked="true"] {
    --tglbg: var(--fallback-er,oklch(var(--er)/1));
  }

/* Label state */

/* When using JS for form validation */

/* Top text */

.validate .label:has(+ * .switch:valid) > *, 
.validate .label-text:has(+ * .switch:valid), 
.validate .label-text:has(~ .switch:valid), 
.validate .label:has(~ .switch:valid) > *, 


.validate .switch:valid ~ .label, 
.validate .switch:valid ~ .label-text, 
.validate .switch:valid ~ .label .label-text,  
.validate *:has(.switch:valid) ~ .label, 
.validate *:has(.switch:valid) ~ .label-text, 
.validate *:has(.switch:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

/* When using JS for form validation */

/* Top text */

.validate .label:has(+ * .switch:invalid) > *, 
.validate .label-text:has(+ * .switch:invalid), 
.validate .label-text:has(~ .switch:invalid), 
.validate .label:has(~ .switch:invalid) > *, 

.validate .switch:invalid ~ .label, 
.validate .switch:invalid ~ .label-text, 
.validate .switch:invalid ~ .label .label-text,  
.validate *:has(.switch:invalid) ~ .label, 
.validate *:has(.switch:invalid) ~ .label-text, 
.validate *:has(.switch:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

/* Helper text */

/* .valid is a child class and when .message is parent. */

.validate *:has(> .switch:valid) ~ .success-message,
.validate *:has(> .switch:valid) > * > .success-message,

.validate .switch:valid ~ .success-message,
.validate .switch:valid + * > .success-message {
  display: block;
}

/* Invalid message */

.validate *:has(> .switch:invalid) ~ .error-message,
.validate *:has(> .switch:invalid) > * > .error-message,

.validate .switch:invalid ~ .error-message,
.validate .switch:invalid + * > .error-message {
  display: block;
}

/* Outline */

.switch-outline.is-valid,
.validate .switch-outline:valid {
  --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
}

.switch-outline.is-valid:checked,
  .switch-outline.is-valid[checked="true"],
  .switch-outline.is-valid[aria-checked="true"],
  .validate .switch-outline:valid:checked,
  .validate .switch-outline:valid[checked="true"],
  .validate .switch-outline:valid[aria-checked="true"] {
    --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
    --tw-border-opacity: 1;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
  }

.switch-outline.is-invalid,
.validate .switch-outline:invalid {
  --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
}

.switch-outline.is-invalid:checked,
  .switch-outline.is-invalid[checked="true"],
  .switch-outline.is-invalid[aria-checked="true"],
  .validate .switch-outline:invalid:checked,
  .validate .switch-outline:invalid[checked="true"],
  .validate .switch-outline:invalid[aria-checked="true"] {
    --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
    --tw-border-opacity: 1;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
  }

/* Label state */

/* When using JS for form validation */

/* Top text */

.validate .label:has(+ * .switch-outline:valid) > *, 
.validate .label-text:has(+ * .switch-outline:valid), 
.validate .label-text:has(~ .switch-outline:valid), 
.validate .label:has(~ .switch-outline:valid) > *, 


.validate .switch-outline:valid ~ .label, 
.validate .switch-outline:valid ~ .label-text, 
.validate .switch-outline:valid ~ .label .label-text,  
.validate *:has(.switch-outline:valid) ~ .label, 
.validate *:has(.switch-outline:valid) ~ .label-text, 
.validate *:has(.switch-outline:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

/* When using JS for form validation */

/* Top text */

.validate .label:has(+ * .switch-outline:invalid) > *, 
.validate .label-text:has(+ * .switch-outline:invalid), 
.validate .label-text:has(~ .switch-outline:invalid), 
.validate .label:has(~ .switch-outline:invalid) > *, 

.validate .switch-outline:invalid ~ .label, 
.validate .switch-outline:invalid ~ .label-text, 
.validate .switch-outline:invalid ~ .label .label-text,  
.validate *:has(.switch-outline:invalid) ~ .label, 
.validate *:has(.switch-outline:invalid) ~ .label-text, 
.validate *:has(.switch-outline:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

/* Helper text */

/* main style is in switch.css  */

.validate *:has(> .switch-outline:valid) ~ .success-message,
.validate *:has(> .switch-outline:valid) > * > .success-message,

.validate .switch-outline:valid ~ .success-message,
.validate .switch-outline:valid + * > .success-message {
  display: block;
}

.validate *:has(> .switch-outline:invalid) ~ .error-message,
.validate *:has(> .switch-outline:invalid) > * > .error-message,

.validate .switch-outline:invalid ~ .error-message,
.validate .switch-outline:invalid + * > .error-message {
  display: block;
}
.tabs-lifted > .tab:focus-visible {
  border-end-end-radius: 0;
  border-end-start-radius: 0;
}
.tab {
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  --tab-bg: var(--fallback-b1,oklch(var(--b1)/1));
  --tab-border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  padding-inline-start: var(--tab-padding, 1rem);
  padding-inline-end: var(--tab-padding, 1rem);
}
.tab.tab-active:not([disabled]) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
  --tw-text-opacity: 1;
}
.tab:focus,
  .tab:focus-visible {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
/* disabled */
.tab[disabled] {
  pointer-events: none;
  border-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity, 1)));
  --tw-border-opacity: 0.3;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  --tw-text-opacity: 0.4;
}
@media (hover: hover) {
    .tab[disabled]:hover {
    pointer-events: none;
    border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
    --tw-text-opacity: 0.4;
  }
  }
.tabs-bordered > .tab {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}
@media(hover:hover) {
  .tabs-bordered > .tab:hover {
    border-color: var(--fallback-p,oklch(var(--p)/0.3));
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
  }
}
.tabs-bordered > .tab {
  border-style: solid;
  border-bottom-width: calc(var(--tab-border, 1px) + 1px);
}
@media(hover:hover) {
  .tabs-lifted > .tab:hover {
    border-color: var(--fallback-p,oklch(var(--p)/0.3));
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
  }
}
.tabs-lifted > .tab {
  border: var(--tab-border, 1px) solid transparent;
  border-width: 0 0 var(--tab-border, 1px) 0;
  border-radius: var(--tab-radius, 0.375rem);
  border-bottom-color: var(--tab-border-color);
  padding-inline-start: var(--tab-padding, 1rem);
  padding-inline-end: var(--tab-padding, 1rem);
  padding-top: var(--tab-border, 1px);
}
.tabs-lifted > .tab.tab-active:not([disabled]) {
    background-color: var(--tab-bg);
    border-width: var(--tab-border, 1px) var(--tab-border, 1px) 0 var(--tab-border, 1px);
    border-color: var(--tab-border-color);
    border-end-start-radius: 0;
    border-end-end-radius: 0;
    padding-inline-start: calc(var(--tab-padding, 1rem) - var(--tab-border, 1px));
    padding-inline-end: calc(var(--tab-padding, 1rem) - var(--tab-border, 1px));
    padding-bottom: var(--tab-border, 1px);
    padding-top: 0;
  }
.tabs-lifted > .tab.tab-active:not([disabled]):before {
      z-index: 1;
      content: "";
      display: block;
      position: absolute;
      width: calc(100% + var(--tab-radius, 0.375rem) * 2);
      height: var(--tab-radius, 0.375rem);
      bottom: 0;
      background-size: var(--tab-radius, 0.375rem);
      background-position:
        top left,
        top right;
      background-repeat: no-repeat;
      --tab-grad: calc(69% - var(--tab-border, 1px));
      --radius-start: radial-gradient(
        circle at top left,
        transparent var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
        var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px)
      );
      --radius-end: radial-gradient(
        circle at top right,
        transparent var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
        var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px)
      );
      background-image: var(--radius-start), var(--radius-end);
    }
.tabs-lifted > .tab.tab-active:not([disabled]):first-child:before {
      background-image: var(--radius-end);
      background-position: top right;
    }
[dir="rtl"] .tabs-lifted > .tab.tab-active:not([disabled]):first-child:before {
        background-image: var(--radius-start);
        background-position: top left;
      }
.tabs-lifted > .tab.tab-active:not([disabled]):last-child:before {
      background-image: var(--radius-start);
      background-position: top left;
    }
[dir="rtl"] .tabs-lifted > .tab.tab-active:not([disabled]):last-child:before {
        background-image: var(--radius-end);
        background-position: top right;
      }
.tabs-lifted > .tab-active:not([disabled]) + .tabs-lifted .tab-active:not([disabled]):before {
    background-image: var(--radius-end);
    background-position: top right;
  }
.table {
    border-radius: var(--rounded-box, 0.5rem);
    text-align: left;
    font-size: 0.875rem;
    line-height: 1.25rem
}.table:where([dir="rtl"], [dir="rtl"] *) {
    text-align: right
}.table {
    overflow-y: auto;
    overflow-x: hidden
}.table::-webkit-scrollbar-thumb {
    background-color: var(--fallback-s,oklch(var(--s)/0.5))
}.table::-webkit-scrollbar-thumb:hover {
    background-color: var(--fallback-s,oklch(var(--s)/0.8))
}.table::-webkit-scrollbar-track {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)))
}.table::-webkit-scrollbar {
    width: 0.5rem
}
  .table :where(th, td) {
    text-wrap: nowrap;
    padding-left: 1.25rem;
    padding-right: 1.25rem;
    padding-top: 0.55rem;
    padding-bottom: 0.55rem;
    vertical-align: middle;
    font-size: 1rem;
    line-height: 1.375rem
}
  .table :where(th) {
    text-wrap: nowrap;
    font-size: 0.875rem;
    line-height: 1.25rem;
    font-weight: 500;
    text-transform: uppercase;
    --tw-text-opacity: 1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
    letter-spacing: 1px
}
  .table-xs :where(th, td) {
    font-size: 0.75rem;
    line-height: 1rem
}
  .table-sm :where(th, td), .table-md :where(th, td) {
    font-size: 0.875rem;
    line-height: 1.25rem
}
  .table tr.active,
  .table tr.active:nth-child(even),
  .table-striped tbody tr:nth-child(even) {
    background-color: var(--fallback-bc,oklch(var(--bc)/0.1))
}
  @media(hover:hover) {.table tr.hover:hover,
  .table tr.hover:nth-child(even):hover {
        background-color: var(--fallback-bc,oklch(var(--bc)/0.05))
    }
}
  .table-striped tr.active,
    .table-striped tr.active:nth-child(even),
    .table-striped-striped tbody tr:nth-child(even) {
    background-color: var(--fallback-bc,oklch(var(--bc)/0.1))
}
  @media(hover:hover) {.table-striped tr.hover,
  .table-striped tr.hover:nth-child(even) {
        background-color: var(--fallback-bc,oklch(var(--bc)/0.05))
    }
}
  .table-striped-columns td:nth-child(even),
  .table-striped-columns th:nth-child(even) {
    background-color: var(--fallback-bc,oklch(var(--bc)/0.1))
}
  .table :where(thead, tbody) :where(tr:not(:last-child)),
    .table :where(thead, tbody) :where(tr:first-child:last-child) {
    border-bottom-width: 1px;
    border-color: var(--fallback-bc,oklch(var(--bc)/0.25))
}
  .table :where(thead, tfoot, th) {
    white-space: nowrap;
    --tw-text-opacity: 1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)))
}
  .table-borderless {
    border-style: none
}
  .table-borderless :where(thead, tbody) :where(tr:not(:last-child)),
      .table-borderless :where(thead, tbody) :where(tr:first-child:last-child) {
    border-style: none
}
textarea {
    background-color: transparent;
}
  textarea:focus {
    outline-width: 0px;
    outline-color: transparent;
}
  textarea:focus-visible {
    outline: unset;
  }

.textarea {
    border-radius: var(--rounded-box, 0.5rem);
    border-width: 1px;
    border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
    color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.textarea::placeholder {
    color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.textarea {
    overflow-y: auto;
    overflow-x: hidden;
}

.textarea::-webkit-scrollbar-thumb {
    border-radius: 9999px;
    background-color: var(--fallback-s,oklch(var(--s)/0.5));
}

.textarea::-webkit-scrollbar-thumb:hover {
    background-color: var(--fallback-s,oklch(var(--s)/0.8));
}

.textarea::-webkit-scrollbar-track {
    border-radius: 9999px;
    background-color: transparent;
}

.textarea::-webkit-scrollbar {
    width: 0.5rem;
}

.textarea:focus,
  s .textarea:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
    --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.22));
    --tw-shadow: var(--tw-shadow-colored);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

.textarea-floating::placeholder {
    color: transparent;
}

.textarea-floating:focus::placeholder {
    color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.textarea-floating {
    field-sizing: content;
  }

.textarea-filled {
    border-bottom-right-radius: 0px;
    border-bottom-left-radius: 0px;
    border-width: 0px;
    border-bottom-width: 1px;
    border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
    background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.textarea-filled::placeholder {
    color: transparent;
}

.textarea-filled:hover {
    border-width: 0px;
    border-bottom-width: 1px;
    --tw-border-opacity: 1;
    border-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity, 1)));
}

.textarea-filled:focus-visible {
    outline-width: 0px;
}

.textarea-filled:not(:placeholder-shown) {
    padding-top: 1.5rem;
}

.textarea-filled {
    field-sizing: content;
  }

.textarea-filled:focus,
    .textarea-filled:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
    padding-top: 1.5rem;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.textarea-filled:focus::placeholder,
    .textarea-filled:focus-within::placeholder {
    color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.textarea-filled:focus ~ .textarea-filled-focused,
    .textarea-filled:focus-within ~ .textarea-filled-focused {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.textarea.disabled,
  .textarea:disabled,
  .textarea[disabled] {
    pointer-events: none;
    border-width: 0px;
    border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
    background-color: var(--fallback-n,oklch(var(--n)/0.1));
    color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.textarea.textarea-floating.disabled,
    .textarea.textarea-floating:disabled,
    .textarea.textarea-floating[disabled] {
    border-width: 1px;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.textarea.textarea-floating.disabled ~ .textarea-floating-label, .textarea.textarea-floating:disabled ~ .textarea-floating-label, .textarea.textarea-floating[disabled] ~ .textarea-floating-label {
    color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.textarea.textarea-filled.disabled,
    .textarea.textarea-filled:disabled,
    .textarea.textarea-filled[disabled] {
    border-bottom-width: 1px;
}

.textarea.textarea-filled.disabled ~ .textarea-filled-label, .textarea.textarea-filled:disabled ~ .textarea-filled-label, .textarea.textarea-filled[disabled] ~ .textarea-filled-label {
    color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

/* label styles */

.textarea-floating-label,
.textarea-filled-label {
    pointer-events: none;
    position: absolute;
    inset-inline-start: 0px;
    top: 0.5rem;
    width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    background-color: transparent;
    padding-left: 1rem;
    padding-right: 1rem;
    font-size: 1rem;
    line-height: 1.375rem;
    --tw-text-opacity: 1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
    transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.peer:focus ~ .textarea-floating-label,.peer:focus ~ 
.textarea-filled-label {
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.peer:focus ~ .textarea-floating-label::placeholder,.peer:focus ~ 
.textarea-filled-label::placeholder {
    color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.peer:focus ~ .textarea-floating-label,
  .peer:focus-within ~ .textarea-floating-label,
  .peer:not(:placeholder-shown) ~ .textarea-floating-label {
    top: 0px;
    margin-inline-start: 0.75rem;
    width: fit-content;
    --tw-translate-y: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
    padding-left: 0.25rem;
    padding-right: 0.25rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
}

.textarea-filled-label {
    top: 1rem;
}

.peer:focus ~ .textarea-filled-label,
  .peer:focus-within ~ .textarea-filled-label,
  .peer:not(:placeholder-shown) ~ .textarea-filled-label {
    top: 0.25rem;
    margin-inline-start: 1rem;
    width: fit-content;
    padding: 0px;
    font-size: 0.875rem;
    line-height: 1.25rem;
}

/* input group */

.input-group .textarea {
    border-width: 0px;
}

.input-group .textarea:focus,
    .input-group .textarea:focus-within {
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

/* State style */

.textarea.is-valid,
.validate .textarea:valid {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}

.textarea.is-valid:focus,
  .textarea.is-valid:focus-within,
  .validate .textarea:valid:focus,
  .validate .textarea:valid:focus-within {
    --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22));
    --tw-shadow: var(--tw-shadow-colored);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}

.textarea.is-valid.textarea-filled:focus,
  .textarea.is-valid.textarea-filled:focus-within,
  .validate .textarea:valid.textarea-filled:focus,
  .validate .textarea:valid.textarea-filled:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.textarea.is-valid ~ .textarea-floating-label,
  .textarea.is-valid ~ .textarea-filled-label,
  .validate .textarea:valid ~ .textarea-floating-label,
  .validate .textarea:valid ~ .textarea-filled-label {
    --tw-text-opacity: 1;
    color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.textarea.is-valid:focus ~ .textarea-filled-focused,
  .textarea.is-valid:focus-within ~ .textarea-filled-focused,
  .validate .textarea:valid:focus ~ .textarea-filled-focused,
  .validate .textarea:valid:focus-within ~ .textarea-filled-focused {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
}

.textarea:focus.is-valid ~ .textarea-floating-label,
.validate .textarea:focus:valid ~ .textarea-floating-label,
.textarea:focus.is-valid ~ .textarea-filled-label,
.validate .textarea:focus:valid ~ .textarea-filled-label {
    --tw-text-opacity: 1;
    color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.textarea:focus.is-invalid ~ .textarea-floating-label,
.validate .textarea:focus:invalid ~ .textarea-floating-label,
.textarea:focus.is-invalid ~ .textarea-filled-label,
.validate .textarea:focus:invalid ~ .textarea-filled-label {
    --tw-text-opacity: 1;
    color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.textarea.is-invalid,
.validate .textarea:invalid {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}

.textarea.is-invalid:focus,
  .textarea.is-invalid:focus-within,
  .validate .textarea:invalid:focus,
  .validate .textarea:invalid:focus-within {
    --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22));
    --tw-shadow: var(--tw-shadow-colored);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    --tw-ring-opacity: 1;
    --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1)));
}

.textarea.is-invalid.textarea-filled:focus,
  .textarea.is-invalid.textarea-filled:focus-within,
  .validate .textarea:invalid.textarea-filled:focus,
  .validate .textarea:invalid.textarea-filled:focus-within {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.textarea.is-invalid ~ .textarea-floating-label,
  .textarea.is-invalid ~ .textarea-filled-label,
  .validate .textarea:invalid ~ .textarea-floating-label,
  .validate .textarea:invalid ~ .textarea-filled-label {
    --tw-text-opacity: 1;
    color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.textarea.is-invalid:focus ~ .textarea-filled-focused,
  .textarea.is-invalid:focus-within ~ .textarea-filled-focused,
  .validate .textarea:invalid:focus ~ .textarea-filled-focused,
  .validate .textarea:invalid:focus-within ~ .textarea-filled-focused {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
}

/* Label state */

/* Top text */

.validate .label:has(+ * .textarea:valid) > *, 
.validate .label-text:has(+ * .textarea:valid), 
.validate .label-text:has(~ .textarea:valid), 
.validate .label:has(~ .textarea:valid) > *, 

.validate .textarea:valid ~ .label, 
.validate .textarea:valid ~ .label-text, 
.validate .textarea:valid ~ .label .label-text,  
.validate *:has(.textarea:valid) ~ .label, 
.validate *:has(.textarea:valid) ~ .label-text, 
.validate *:has(.textarea:valid) ~ .label .label-text {
    --tw-text-opacity: 1;
    color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

/* Invalid text style */

/* Top text */

.validate .label:has(+ * .textarea:invalid) > *, 
.validate .label-text:has(+ * .textarea:invalid), 
.validate .label-text:has(~ .textarea:invalid), 
.validate .label:has(~ .textarea:invalid) > *, 

.validate .textarea:invalid ~ .label, 
.validate .textarea:invalid ~ .label-text, 
.validate .textarea:invalid ~ .label .label-text,  
.validate *:has(.textarea:invalid) ~ .label, 
.validate *:has(.textarea:invalid) ~ .label-text, 
.validate *:has(.textarea:invalid) ~ .label .label-text {
    --tw-text-opacity: 1;
    color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

/* Helper text */

/* main style is in textarea.css  */

.validate *:has(> .textarea:valid) ~ .success-message,
.validate *:has(> .textarea:valid) > * > .success-message,

.validate .textarea:valid ~ .success-message,
.validate .textarea:valid + * > .success-message {
    display: block;
}

.validate *:has(> .textarea:invalid) ~ .error-message,
.validate *:has(> .textarea:invalid) > * > .error-message,

.validate .textarea:invalid ~ .error-message,
.validate .textarea:invalid + * > .error-message {
    display: block;
}
.timeline hr {
    height: 1.5px
}
:where(.timeline hr) {
    border-color: transparent;
    background-color: var(--fallback-bc,oklch(var(--bc)/0.1))
}
:where(.timeline:has(.timeline-middle) hr):first-child {
    border-start-end-radius: var(--rounded-tooltip, 0.25rem);
    border-end-end-radius: var(--rounded-tooltip, 0.25rem);
    border-start-start-radius: 0px;
    border-end-start-radius: 0px
}
:where(.timeline:has(.timeline-middle) hr):last-child {
    border-start-start-radius: var(--rounded-tooltip, 0.25rem);
    border-end-start-radius: var(--rounded-tooltip, 0.25rem);
    border-start-end-radius: 0px;
    border-end-end-radius: 0px
}
:where(.timeline:not(:has(.timeline-middle)) :first-child hr:last-child) {
    border-start-start-radius: var(--rounded-tooltip, 0.25rem);
    border-end-start-radius: var(--rounded-tooltip, 0.25rem);
    border-start-end-radius: 0px;
    border-end-end-radius: 0px
}
:where(.timeline:not(:has(.timeline-middle)) :last-child hr:first-child) {
    border-start-end-radius: var(--rounded-tooltip, 0.25rem);
    border-end-end-radius: var(--rounded-tooltip, 0.25rem);
    border-start-start-radius: 0px;
    border-end-start-radius: 0px
}
.timeline-box {
    border-radius: var(--rounded-btn, 0.375rem);
    border-width: 1px;
    border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
    padding-left: 1rem;
    padding-right: 1rem;
    padding-top: 0.25rem;
    padding-bottom: 0.25rem;
    --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
    --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}
.tooltip-content {
    transition-property: opacity;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
}
  .tooltip-body {
    --tooltip-color: var(--fallback-n,oklch(var(--n)/1));
    --tooltip-text-color: var(--fallback-nc,oklch(var(--nc)/1));
    border-radius: var(--rounded-tooltip, 0.25rem);
    font-size: 0.875rem;
    line-height: 1.25rem;
    --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
    --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    background-color: var(--tooltip-color);
    color: var(--tooltip-text-color);
  }
  .tooltip-primary {
    --tooltip-color: var(--fallback-p,oklch(var(--p)/1));
    --tooltip-text-color: var(--fallback-pc,oklch(var(--pc)/1));
  }
  .tooltip-secondary {
    --tooltip-color: var(--fallback-s,oklch(var(--s)/1));
    --tooltip-text-color: var(--fallback-sc,oklch(var(--sc)/1));
  }
  .tooltip-accent {
    --tooltip-color: var(--fallback-a,oklch(var(--a)/1));
    --tooltip-text-color: var(--fallback-ac,oklch(var(--ac)/1));
  }
  .tooltip-info {
    --tooltip-color: var(--fallback-in,oklch(var(--in)/1));
    --tooltip-text-color: var(--fallback-inc,oklch(var(--inc)/1));
  }
  .tooltip-success {
    --tooltip-color: var(--fallback-su,oklch(var(--su)/1));
    --tooltip-text-color: var(--fallback-suc,oklch(var(--suc)/1));
  }
  .tooltip-warning {
    --tooltip-color: var(--fallback-wa,oklch(var(--wa)/1));
    --tooltip-text-color: var(--fallback-wac,oklch(var(--wac)/1));
  }
  .tooltip-error {
    --tooltip-color: var(--fallback-er,oklch(var(--er)/1));
    --tooltip-text-color: var(--fallback-erc,oklch(var(--erc)/1));
  }
:root .prose {
  --tw-prose-body: var(--fallback-bc,oklch(var(--bc)/0.8));
  --tw-prose-headings: var(--fallback-bc,oklch(var(--bc)/0.9));
  --tw-prose-lead: var(--tw-prose-body);
  --tw-prose-links: var(--fallback-p,oklch(var(--p)/1));
  --tw-prose-kbd: var(--tw-prose-body);
  --tw-prose-bold: var(--tw-prose-headings);
  --tw-prose-counters: var(--tw-prose-headings);
  --tw-prose-bullets: var(--fallback-bc,oklch(var(--bc)/0.5));
  --tw-prose-hr: var(--fallback-bc,oklch(var(--bc)/0.2));
  --tw-prose-quotes: var(--tw-prose-headings);
  --tw-prose-quote-borders: var(--fallback-bc,oklch(var(--bc)/0.2));
  --tw-prose-captions: var(--fallback-bc,oklch(var(--bc)/0.40));
  --tw-prose-code: #e83e8c;
  --tw-prose-pre-code: var(--fallback-nc,oklch(var(--nc)/1));
  --tw-prose-pre-bg: var(--fallback-n,oklch(var(--n)/1));
  --tw-prose-th-borders: var(--fallback-bc,oklch(var(--bc)/0.24));
  --tw-prose-td-borders: var(--tw-prose-th-borders);
  line-height: 1.375rem;
}
.prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *))::before, .prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *))::after {
    display: none;
  }
.prose pre code {
      border-radius: 0;
      padding: 0;
    }
.prose :where(tbody tr, thead):not(:where([class~="not-prose"] *)) {
    border-bottom-color: var(--fallback-bc,oklch(var(--bc)/0.2));
  }
.prose :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  padding: 0px;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-weight: 500;
    font-size: 0.875rem;
  }
.prose :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 0.875rem;
  }

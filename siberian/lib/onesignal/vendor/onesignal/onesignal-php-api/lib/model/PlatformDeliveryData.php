<?php
/**
 * PlatformDeliveryData
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  onesignal\client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * OneSignal
 *
 * A powerful way to send personalized messages at scale and build effective customer engagement strategies. Learn more at onesignal.com
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: devrel@onesignal.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace onesignal\client\model;

use \ArrayAccess;
use \onesignal\client\ObjectSerializer;

/**
 * PlatformDeliveryData Class Doc Comment
 *
 * @category Class
 * @description Hash of delivery statistics broken out by target device platform.
 * @package  onesignal\client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class PlatformDeliveryData implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'PlatformDeliveryData';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'edge_web_push' => '\onesignal\client\model\DeliveryData',
        'chrome_web_push' => '\onesignal\client\model\DeliveryData',
        'firefox_web_push' => '\onesignal\client\model\DeliveryData',
        'safari_web_push' => '\onesignal\client\model\DeliveryData',
        'android' => '\onesignal\client\model\DeliveryData',
        'ios' => '\onesignal\client\model\DeliveryData',
        'sms' => 'DeliveryData',
        'email' => 'DeliveryData'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'edge_web_push' => null,
        'chrome_web_push' => null,
        'firefox_web_push' => null,
        'safari_web_push' => null,
        'android' => null,
        'ios' => null,
        'sms' => null,
        'email' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'edge_web_push' => 'edge_web_push',
        'chrome_web_push' => 'chrome_web_push',
        'firefox_web_push' => 'firefox_web_push',
        'safari_web_push' => 'safari_web_push',
        'android' => 'android',
        'ios' => 'ios',
        'sms' => 'sms',
        'email' => 'email'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'edge_web_push' => 'setEdgeWebPush',
        'chrome_web_push' => 'setChromeWebPush',
        'firefox_web_push' => 'setFirefoxWebPush',
        'safari_web_push' => 'setSafariWebPush',
        'android' => 'setAndroid',
        'ios' => 'setIos',
        'sms' => 'setSms',
        'email' => 'setEmail'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'edge_web_push' => 'getEdgeWebPush',
        'chrome_web_push' => 'getChromeWebPush',
        'firefox_web_push' => 'getFirefoxWebPush',
        'safari_web_push' => 'getSafariWebPush',
        'android' => 'getAndroid',
        'ios' => 'getIos',
        'sms' => 'getSms',
        'email' => 'getEmail'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['edge_web_push'] = $data['edge_web_push'] ?? null;
        $this->container['chrome_web_push'] = $data['chrome_web_push'] ?? null;
        $this->container['firefox_web_push'] = $data['firefox_web_push'] ?? null;
        $this->container['safari_web_push'] = $data['safari_web_push'] ?? null;
        $this->container['android'] = $data['android'] ?? null;
        $this->container['ios'] = $data['ios'] ?? null;
        $this->container['sms'] = $data['sms'] ?? null;
        $this->container['email'] = $data['email'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets edge_web_push
     *
     * @return \onesignal\client\model\DeliveryData|null
     */
    public function getEdgeWebPush()
    {
        return $this->container['edge_web_push'];
    }

    /**
     * Sets edge_web_push
     *
     * @param \onesignal\client\model\DeliveryData|null $edge_web_push edge_web_push
     *
     * @return self
     */
    public function setEdgeWebPush($edge_web_push)
    {
        $this->container['edge_web_push'] = $edge_web_push;

        return $this;
    }

    /**
     * Gets chrome_web_push
     *
     * @return \onesignal\client\model\DeliveryData|null
     */
    public function getChromeWebPush()
    {
        return $this->container['chrome_web_push'];
    }

    /**
     * Sets chrome_web_push
     *
     * @param \onesignal\client\model\DeliveryData|null $chrome_web_push chrome_web_push
     *
     * @return self
     */
    public function setChromeWebPush($chrome_web_push)
    {
        $this->container['chrome_web_push'] = $chrome_web_push;

        return $this;
    }

    /**
     * Gets firefox_web_push
     *
     * @return \onesignal\client\model\DeliveryData|null
     */
    public function getFirefoxWebPush()
    {
        return $this->container['firefox_web_push'];
    }

    /**
     * Sets firefox_web_push
     *
     * @param \onesignal\client\model\DeliveryData|null $firefox_web_push firefox_web_push
     *
     * @return self
     */
    public function setFirefoxWebPush($firefox_web_push)
    {
        $this->container['firefox_web_push'] = $firefox_web_push;

        return $this;
    }

    /**
     * Gets safari_web_push
     *
     * @return \onesignal\client\model\DeliveryData|null
     */
    public function getSafariWebPush()
    {
        return $this->container['safari_web_push'];
    }

    /**
     * Sets safari_web_push
     *
     * @param \onesignal\client\model\DeliveryData|null $safari_web_push safari_web_push
     *
     * @return self
     */
    public function setSafariWebPush($safari_web_push)
    {
        $this->container['safari_web_push'] = $safari_web_push;

        return $this;
    }

    /**
     * Gets android
     *
     * @return \onesignal\client\model\DeliveryData|null
     */
    public function getAndroid()
    {
        return $this->container['android'];
    }

    /**
     * Sets android
     *
     * @param \onesignal\client\model\DeliveryData|null $android android
     *
     * @return self
     */
    public function setAndroid($android)
    {
        $this->container['android'] = $android;

        return $this;
    }

    /**
     * Gets ios
     *
     * @return \onesignal\client\model\DeliveryData|null
     */
    public function getIos()
    {
        return $this->container['ios'];
    }

    /**
     * Sets ios
     *
     * @param \onesignal\client\model\DeliveryData|null $ios ios
     *
     * @return self
     */
    public function setIos($ios)
    {
        $this->container['ios'] = $ios;

        return $this;
    }

    /**
     * Gets sms
     *
     * @return DeliveryData|null
     */
    public function getSms()
    {
        return $this->container['sms'];
    }

    /**
     * Sets sms
     *
     * @param DeliveryData|null $sms sms
     *
     * @return self
     */
    public function setSms($sms)
    {
        $this->container['sms'] = $sms;

        return $this;
    }

    /**
     * Gets email
     *
     * @return DeliveryData|null
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param DeliveryData|null $email email
     *
     * @return self
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


